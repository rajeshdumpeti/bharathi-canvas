{"version":3,"file":"static/js/380.909fdd03.chunk.js","mappings":"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","sources":["components/ui/ChipInput.tsx","features/release-notes/components/FiltersPanel.tsx","features/release-notes/components/PreviewPanel.tsx","utils/releaseNotes.ts","features/release-notes/ReleaseNotesView.tsx","app/release-notes/App.jsx","components/ui/IconButton.tsx","components/ui/Modal.tsx","hooks/useProjectHub.ts","components/ui/EmptyState.tsx","components/ui/SecretText.tsx","features/projectHub/context.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\ntype Props = {\n  value: string[];\n  onChange: (next: string[]) => void;\n  placeholder?: string;\n  className?: string;\n  /** If true, trims and dedups automatically */\n  dedupe?: boolean;\n};\n\nconst ChipInput: React.FC<Props> = ({\n  value,\n  onChange,\n  placeholder = \"Add and press Enter\",\n  className = \"\",\n  dedupe = true,\n}) => {\n  const [draft, setDraft] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const commit = (raw: string) => {\n    const v = raw.trim();\n    if (!v) return;\n    const next = dedupe ? Array.from(new Set([...value, v])) : [...value, v];\n    onChange(next);\n    setDraft(\"\");\n  };\n\n  const splitAndCommit = (raw: string) => {\n    const parts = raw\n      .split(/[,;]/g)\n      .map((s) => s.trim())\n      .filter(Boolean);\n    if (!parts.length) return;\n    const base = new Set(value);\n    const next = dedupe\n      ? [...new Set([...value, ...parts])]\n      : [...value, ...parts];\n    if (next.length !== value.length || parts.some((p) => !base.has(p))) {\n      onChange(next);\n    }\n    setDraft(\"\");\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      // allow comma-separated on enter too\n      splitAndCommit(draft);\n    } else if (e.key === \"Backspace\" && !draft && value.length) {\n      // remove last chip\n      onChange(value.slice(0, -1));\n    } else if (e.key === \",\" || e.key === \";\") {\n      e.preventDefault();\n      splitAndCommit(draft);\n    }\n  };\n\n  const removeAt = (idx: number) => {\n    const next = value.filter((_, i) => i !== idx);\n    onChange(next);\n    // keep focus for fast editing\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div\n      className={[\n        \"flex flex-wrap gap-2 rounded border bg-white px-2 py-2\",\n        className,\n      ].join(\" \")}\n      onClick={() => inputRef.current?.focus()}\n    >\n      {value.map((chip, i) => (\n        <span\n          key={`${chip}-${i}`}\n          className=\"inline-flex items-center gap-1 rounded-full bg-gray-100 px-2 py-0.5 text-xs text-gray-800\"\n        >\n          {chip}\n          <button\n            type=\"button\"\n            aria-label={`Remove ${chip}`}\n            className=\"rounded p-0.5 hover:bg-gray-200\"\n            onClick={() => removeAt(i)}\n          >\n            ✕\n          </button>\n        </span>\n      ))}\n\n      <input\n        ref={inputRef}\n        value={draft}\n        onChange={(e) => setDraft(e.target.value)}\n        onKeyDown={onKeyDown}\n        onBlur={() => commit(draft)}\n        placeholder={value.length ? \"\" : placeholder}\n        className=\"min-w-[8ch] flex-1 outline-none text-sm placeholder:text-gray-400 bg-transparent\"\n      />\n    </div>\n  );\n};\n\nexport default ChipInput;\n","// FiltersPanel.tsx\nimport React from \"react\";\nimport type { Grouping } from \"types/release-notes\"; // adjust path\n\ninterface Project {\n  id: string;\n  name: string;\n}\ninterface Release {\n  id: string;\n  version: string;\n  date: string;\n}\n\ninterface FiltersPanelProps {\n  projects?: Project[];\n  selectedProjectId: string; // allow empty string when “none”\n  onSelectProject: (id: string) => void;\n  fromDate: string;\n  toDate: string;\n  onChangeFrom: (date: string) => void;\n  onChangeTo: (date: string) => void;\n  grouping: Grouping;\n  onChangeGrouping: (grouping: Grouping) => void; // <- key change\n  onGenerate: () => void;\n  releases?: Release[];\n  onLoadRelease: (release: Release) => void;\n}\n\nconst FiltersPanel: React.FC<FiltersPanelProps> = ({\n  projects = [],\n  selectedProjectId,\n  onSelectProject,\n  fromDate,\n  toDate,\n  onChangeFrom,\n  onChangeTo,\n  grouping,\n  onChangeGrouping,\n  onGenerate,\n  releases = [],\n  onLoadRelease,\n}) => {\n  return (\n    <div className=\"h-full p-4 space-y-6 text-white\">\n      {/* Project */}\n      <div>\n        <h3 className=\"text-sm font-semibold mb-2\">Project</h3>\n        <select\n          value={selectedProjectId || \"\"}\n          onChange={(e) => onSelectProject(e.target.value)}\n          className=\"w-full rounded-md bg-gray-800 border border-gray-700 p-2 text-sm\"\n        >\n          <option value=\"\">Select a project…</option>\n          {projects.map((p) => (\n            <option key={p.id} value={p.id}>\n              {p.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Dates */}\n      <div>\n        <h3 className=\"text-sm font-semibold mb-2\">Date range</h3>\n        <div className=\"grid grid-cols-2 gap-2\">\n          <input\n            type=\"date\"\n            value={fromDate}\n            onChange={(e) => onChangeFrom(e.target.value)}\n            className=\"rounded-md bg-gray-800 border border-gray-700 p-2 text-sm\"\n          />\n          <input\n            type=\"date\"\n            value={toDate}\n            onChange={(e) => onChangeTo(e.target.value)}\n            className=\"rounded-md bg-gray-800 border border-gray-700 p-2 text-sm\"\n          />\n        </div>\n      </div>\n\n      {/* Grouping */}\n      <div>\n        <h3 className=\"text-sm font-semibold mb-2\">Group by</h3>\n        <select\n          value={grouping}\n          onChange={(e) => onChangeGrouping(e.target.value as Grouping)}\n          className=\"w-full rounded-md bg-gray-800 border border-gray-700 p-2 text-sm\"\n        >\n          <option value=\"type\">Change type (Feature/Fix/…)</option>\n          <option value=\"label\">First label</option>\n        </select>\n      </div>\n\n      <button\n        onClick={onGenerate}\n        disabled={!selectedProjectId}\n        title={\n          selectedProjectId\n            ? \"Generate release notes\"\n            : \"Select a project first\"\n        }\n        className={`w-full px-4 py-2 rounded-lg font-semibold ${\n          selectedProjectId\n            ? \"bg-blue-600 text-white hover:bg-blue-700\"\n            : \"bg-gray-200 text-gray-400 cursor-not-allowed\"\n        }`}\n      >\n        Generate\n      </button>\n\n      {/* Previous releases */}\n      <div>\n        <h3 className=\"text-sm font-semibold mb-2 mt-4\">Previous releases</h3>\n        {releases.length === 0 ? (\n          <p className=\"text-gray-400 text-sm\">No saved releases.</p>\n        ) : (\n          <ul className=\"space-y-1 max-h-48 overflow-auto pr-1\">\n            {releases\n              .slice()\n              .reverse()\n              .map((r) => (\n                <li\n                  key={r.id}\n                  className=\"flex items-center justify-between px-2 py-1.5 rounded-md hover:bg-gray-800 text-sm cursor-pointer\"\n                  onClick={() => onLoadRelease(r)}\n                  title={r.version}\n                >\n                  <span className=\"truncate\">{r.version}</span>\n                  <span className=\"text-gray-400 ml-2\">\n                    {new Date(r.date).toLocaleDateString()}\n                  </span>\n                </li>\n              ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FiltersPanel;\n","import React from \"react\";\n\n// Define the props interface\ninterface PreviewPanelProps {\n  version: string;\n  setVersion: (version: string) => void;\n  notesMd: string;\n  setNotesMd: (notes: string) => void;\n  onCopy: () => void;\n  onDownload: () => void;\n  onSave: () => void;\n}\n\nconst PreviewPanel: React.FC<PreviewPanelProps> = ({\n  version,\n  setVersion,\n  notesMd,\n  setNotesMd,\n  onCopy,\n  onDownload,\n  onSave,\n}) => {\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"bg-white border-b\">\n        <div className=\"mx-auto w-full max-w-7xl flex items-center justify-between py-4\">\n          <div className=\"flex items-center gap-3\">\n            <label className=\"text-sm text-gray-600\">Version</label>\n            <input\n              type=\"text\"\n              value={version}\n              onChange={(e) => setVersion(e.target.value)}\n              className=\"rounded-md border border-gray-300 p-2 text-sm\"\n              placeholder=\"v1.0.0\"\n            />\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={onCopy}\n              className=\"px-3 py-2 rounded-md bg-gray-100 hover:bg-gray-200 text-sm\"\n            >\n              Copy MD\n            </button>\n            <button\n              onClick={onDownload}\n              className=\"px-3 py-2 rounded-md bg-gray-100 hover:bg-gray-200 text-sm\"\n            >\n              Download .md\n            </button>\n            <button\n              onClick={onSave}\n              className=\"px-3 py-2 rounded-md bg-green-600 hover:bg-green-700 text-white text-sm font-semibold\"\n            >\n              Save Release\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex-1 min-h-0\">\n        <div className=\"mx-auto w-full max-w-7xl px-6 py-4 grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"rounded-lg border bg-white p-3\">\n            <label className=\"block text-sm text-gray-600 mb-1\">\n              Markdown (editable)\n            </label>\n            <textarea\n              value={notesMd}\n              onChange={(e) => setNotesMd(e.target.value)}\n              className=\"w-full h-[60vh] rounded-md border border-gray-300 p-2 font-mono text-sm\"\n            />\n          </div>\n          <div className=\"rounded-lg border bg-white p-3\">\n            <label className=\"block text-sm text-gray-600 mb-1\">Preview</label>\n            <pre className=\"w-full h-[60vh] overflow-auto whitespace-pre-wrap text-sm\">\n              {notesMd}\n            </pre>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewPanel;\n","// Lightweight types you can re-use in board & release-notes\nexport type Priority = \"Low\" | \"Medium\" | \"High\" | (string & {});\nexport type ReleaseGroup = \"Features\" | \"Fixes\" | \"Improvements\" | \"Chores\";\n\nexport type TaskLite = {\n  id?: string | number;\n  title?: string;\n  priority?: Priority;\n  labels?: Array<string>;\n};\n\nexport type MarkdownOpts = {\n  version: string; // e.g. \"v1.2.3\" or \"1.2.3\"\n  date: string; // already formatted string (YYYY-MM-DD, etc.)\n  tasks: TaskLite[];\n  /** \"type\" (default, uses classifyTask) or \"label\" (uses first label) */\n  groupBy?: \"type\" | \"label\";\n  /** Emoji to decorate each section (override or extend) */\n  emoji?: Partial<Record<ReleaseGroup, string>> & Record<string, string>;\n};\n\nexport const DEFAULT_EMOJI: Record<ReleaseGroup, string> = {\n  Features: \"✨\",\n  Fixes: \"🐛\",\n  Improvements: \"⚙️\",\n  Chores: \"🧹\",\n};\n\n// ---------- classification & markdown ----------\n\n/** Classify a task into a release-note group. */\nexport function classifyTask(task: TaskLite): ReleaseGroup {\n  const labels = (task.labels ?? []).map((l) => String(l).toLowerCase());\n  const has = (kw: string) => labels.some((l) => l.includes(kw));\n\n  if (has(\"feature\") || has(\"enhancement\") || task.priority === \"High\")\n    return \"Features\";\n  if (has(\"bug\") || has(\"fix\") || has(\"hotfix\")) return \"Fixes\";\n  if (has(\"perf\") || has(\"refactor\") || has(\"ux\") || has(\"docs\"))\n    return \"Improvements\";\n  return \"Chores\";\n}\n\n/** Build a GitHub-friendly markdown from tasks. */\nexport function tasksToMarkdown({\n  version,\n  date,\n  tasks,\n  groupBy = \"type\",\n  emoji = DEFAULT_EMOJI,\n}: MarkdownOpts): string {\n  // group tasks\n  const groups = new Map<string, TaskLite[]>();\n  const push = (k: string, t: TaskLite) =>\n    groups.set(k, [...(groups.get(k) ?? []), t]);\n\n  for (const t of tasks) {\n    const key =\n      groupBy === \"label\" ? (t.labels?.[0] ?? \"Other\") : classifyTask(t);\n    push(key, t);\n  }\n\n  // header\n  const header = `## ${normalizeVersion(version)} — ${date}\\n`;\n\n  // sections (stable alpha order by group label)\n  const sections = [...groups.entries()]\n    .sort(([a], [b]) => a.localeCompare(b))\n    .map(([title, items]) => {\n      const em = emoji[title as ReleaseGroup] ?? emoji[title] ?? \"•\";\n      const lines = items\n        .slice()\n        .sort((a, b) => (a.title ?? \"\").localeCompare(b.title ?? \"\"))\n        .map((t) => {\n          const id =\n            t.id != null ? ` (${String(t.id).replace(/^task-/, \"#\")})` : \"\";\n          return `- ${em} ${t.title || \"(untitled)\"}${id}`;\n        })\n        .join(\"\\n\");\n      return `\\n### ${title}\\n${lines}\\n`;\n    })\n    .join(\"\\n\");\n\n  return header + sections + \"\\n\";\n}\n\n/** Semantic-ish bump: feature -> minor, else -> patch. Accepts vX.Y.Z or X.Y.Z. */\nexport function suggestNextVersion(\n  prevVersion?: string,\n  hasFeature = false\n): string {\n  const clean = (prevVersion ?? \"\").replace(/^v/i, \"\").trim();\n  const parts = clean.split(\".\").map((n) => Number.parseInt(n, 10));\n  let [maj, min, pat] = [0, 0, 0];\n\n  if (parts.length === 3 && parts.every(Number.isFinite)) {\n    [maj, min, pat] = parts as [number, number, number];\n  }\n\n  if (hasFeature) {\n    min += 1;\n    pat = 0;\n  } else {\n    pat += 1;\n  }\n  return `v${maj}.${min}.${pat}`;\n}\n\n// ---------- small internal helpers ----------\n\nfunction normalizeVersion(v: string): string {\n  const s = (v || \"\").trim();\n  return /^v/i.test(s) ? s : `v${s}`;\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport FiltersPanel from \"./components/FiltersPanel\";\nimport PreviewPanel from \"./components/PreviewPanel\";\nimport {\n  tasksToMarkdown,\n  classifyTask,\n  suggestNextVersion,\n} from \"../../utils/releaseNotes\";\nimport { storage, RN_NS, BOARD_NS } from \"../../packages/storage\";\nimport { EmptyState } from \"packages/ui\";\nimport type {\n  BoardProject,\n  BoardTask,\n  ReleaseRecord,\n  Grouping,\n  Id,\n} from \"types/release-notes\";\n/* ----------------------------- Types ----------------------------- */\n\n/* -------------------------- Date helpers -------------------------- */\n\nconst todayISO = () => new Date().toISOString().slice(0, 10);\nconst daysAgoISO = (n: number) => {\n  const d = new Date();\n  d.setDate(d.getDate() - n);\n  return d.toISOString().slice(0, 10);\n};\n\nconst safeFile = (s: string) =>\n  (s || \"release-notes\").replace(/[^\\w.-]+/g, \"_\");\n\n/* --------------------------- Component ---------------------------- */\n\nconst ReleaseNotesView: React.FC = () => {\n  // load once from storage (avoid effect loops)\n  const [projects, setProjects] = useState<BoardProject[]>(\n    () => storage.get(BOARD_NS, \"projects\", []) as BoardProject[]\n  );\n  const [tasks, setTasks] = useState<BoardTask[]>(\n    () => storage.get(BOARD_NS, \"tasks\", []) as BoardTask[]\n  );\n  const [releases, setReleases] = useState<ReleaseRecord[]>(\n    () => storage.get(RN_NS, \"releases\", []) as ReleaseRecord[]\n  );\n\n  const [selectedProjectId, setSelectedProjectId] = useState<Id | \"\">(\n    () => storage.get(RN_NS, \"selectedProjectId\", \"\") as Id | \"\"\n  );\n\n  const [fromDate, setFromDate] = useState<string>(daysAgoISO(14));\n  const [toDate, setToDate] = useState<string>(todayISO());\n  const [grouping, setGrouping] = useState<Grouping>(\"type\");\n\n  const [generatedTasks, setGeneratedTasks] = useState<BoardTask[]>([]);\n  const [notesMd, setNotesMd] = useState<string>(\"\");\n  const [version, setVersion] = useState<string>(\"v0.1.0\");\n  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(false);\n\n  /* -------- when project changes, suggest version & default dates -------- */\n  useEffect(() => {\n    if (!selectedProjectId) return;\n\n    const history = releases.filter((r) => r.projectId === selectedProjectId);\n    if (history.length > 0) {\n      const last = history[history.length - 1];\n      const hasFeature = (last.tasks || [])\n        .map((id) => tasks.find((t) => t.id === id))\n        .filter(Boolean)\n        .some((t) => classifyTask(t as BoardTask) === \"Features\");\n      setVersion(suggestNextVersion(last.version, hasFeature));\n      setFromDate(last.range?.to?.slice(0, 10) || daysAgoISO(14));\n    } else {\n      setVersion(\"v0.1.0\");\n      setFromDate(daysAgoISO(14));\n    }\n    setToDate(todayISO());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedProjectId]);\n\n  /* -------- keep local state in sync if other tabs update storage -------- */\n  useEffect(() => {\n    const onStorage = (e: StorageEvent) => {\n      if (!e || e.storageArea !== localStorage) return;\n\n      if (e.key === `${BOARD_NS}:projects`) {\n        try {\n          setProjects(JSON.parse(e.newValue || \"[]\"));\n        } catch {\n          setProjects([]);\n        }\n      }\n      if (e.key === `${BOARD_NS}:tasks`) {\n        try {\n          setTasks(JSON.parse(e.newValue || \"[]\"));\n        } catch {\n          setTasks([]);\n        }\n      }\n      if (e.key === `${RN_NS}:releases`) {\n        try {\n          setReleases(JSON.parse(e.newValue || \"[]\"));\n        } catch {\n          setReleases([]);\n        }\n      }\n      if (e.key === `${RN_NS}:selectedProjectId`) {\n        setSelectedProjectId((e.newValue as Id) || \"\");\n      }\n    };\n\n    window.addEventListener(\"storage\", onStorage);\n    return () => window.removeEventListener(\"storage\", onStorage);\n  }, []);\n\n  /* ----------------------- persist when local edits ---------------------- */\n  useEffect(() => {\n    storage.set(RN_NS, \"releases\", releases);\n  }, [releases]);\n\n  useEffect(() => {\n    if (selectedProjectId)\n      storage.set(RN_NS, \"selectedProjectId\", selectedProjectId);\n    else storage.remove(RN_NS, \"selectedProjectId\");\n  }, [selectedProjectId]);\n\n  /* ----------------------------- derivations ---------------------------- */\n  const projectTasks = useMemo(() => {\n    if (!selectedProjectId) return [] as BoardTask[];\n    return tasks.filter((t) => t.project === selectedProjectId);\n  }, [tasks, selectedProjectId]);\n\n  const completedInRange = useMemo(() => {\n    if (!fromDate || !toDate) return [] as BoardTask[];\n    const from = new Date(`${fromDate}T00:00:00`);\n    const to = new Date(`${toDate}T23:59:59`);\n\n    return projectTasks.filter((t) => {\n      if (t.status !== \"done\") return false;\n      if (!t.completedAt) return false;\n      const completed = new Date(t.completedAt);\n      return completed >= from && completed <= to;\n    });\n  }, [projectTasks, fromDate, toDate]);\n\n  /* ----------------------------- UI handlers ---------------------------- */\n  useEffect(() => {\n    const handler = () => setIsSidebarOpen((s) => !s);\n    window.addEventListener(\"app:toggleSidebar\", handler as EventListener);\n    return () =>\n      window.removeEventListener(\"app:toggleSidebar\", handler as EventListener);\n  }, []);\n\n  const onGenerate = useCallback(() => {\n    setGeneratedTasks(completedInRange);\n    const md = tasksToMarkdown({\n      version,\n      date: todayISO(),\n      tasks: completedInRange,\n      groupBy: grouping,\n    });\n    setNotesMd(md);\n  }, [completedInRange, version, grouping]);\n\n  const onCopy = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(notesMd || \"\");\n    } catch (e) {\n      console.warn(\"Clipboard failed, falling back to download\", e);\n      const blob = new Blob([notesMd || \"\"], {\n        type: \"text/markdown;charset=utf-8\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${safeFile(version)}.md`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  }, [notesMd, version]);\n\n  const onDownload = useCallback(() => {\n    const blob = new Blob([notesMd || \"\"], {\n      type: \"text/markdown;charset=utf-8\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${safeFile(version)}.md`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [notesMd, version]);\n\n  const onSave = useCallback(() => {\n    if (!selectedProjectId) return;\n    const rec: ReleaseRecord = {\n      id: `${Date.now()}`,\n      projectId: selectedProjectId,\n      version: version || \"v0.0.0\",\n      date: new Date().toISOString(),\n      range: { from: fromDate, to: toDate },\n      filters: {},\n      grouping,\n      notesMd: notesMd || \"\",\n      tasks: generatedTasks.map((t) => t.id),\n    };\n    setReleases((prev) => [...prev, rec]);\n  }, [\n    selectedProjectId,\n    version,\n    fromDate,\n    toDate,\n    grouping,\n    notesMd,\n    generatedTasks,\n  ]);\n\n  const loadRelease = useCallback((r: ReleaseRecord) => {\n    setSelectedProjectId(r.projectId);\n    setVersion(r.version);\n    setFromDate(r.range?.from?.slice(0, 10) || daysAgoISO(14));\n    setToDate(r.range?.to?.slice(0, 10) || todayISO());\n    setNotesMd(r.notesMd || \"\");\n  }, []);\n\n  /* ------------------------------ Render ------------------------------- */\n\n  return (\n    <div className=\"h-full w-full flex flex-col bg-gray-50\">\n      <div className=\"flex-1 min-h-0 w-full\">\n        <div className=\"relative h-full w-full flex overflow-hidden\">\n          {/* Backdrop (mobile) */}\n          <div\n            onClick={() => setIsSidebarOpen(false)}\n            className={`lg:hidden fixed inset-0 z-20 bg-black/40 transition-opacity duration-300 ${\n              isSidebarOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n            }`}\n          />\n\n          {/* Sidebar: Filters */}\n          <aside\n            className={`\n              fixed lg:static inset-y-0 left-0 z-30 w-72 bg-gray-900 text-white\n              transform transition-transform duration-300 ease-in-out\n              border-r border-gray-800 overflow-y-auto shrink-0\n              ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n              lg:translate-x-0 lg:transform-none\n            `}\n          >\n            <FiltersPanel\n              projects={projects}\n              selectedProjectId={selectedProjectId}\n              onSelectProject={setSelectedProjectId}\n              fromDate={fromDate}\n              toDate={toDate}\n              onChangeFrom={setFromDate}\n              onChangeTo={setToDate}\n              grouping={grouping}\n              onChangeGrouping={setGrouping}\n              onGenerate={onGenerate}\n              releases={releases.filter(\n                (r) => r.projectId === selectedProjectId\n              )}\n              onLoadRelease={loadRelease}\n            />\n          </aside>\n\n          {/* Right: Preview / Empty */}\n          {!selectedProjectId ? (\n            <EmptyState\n              title=\"Create your first release\"\n              description={\n                <>\n                  Use the <span className=\"font-medium\">Project</span> picker on\n                  the left to choose a project. Then set a date range and click{\" \"}\n                  <span className=\"font-medium\">Generate</span>. We’ll create\n                  editable Markdown and show a live preview here.\n                </>\n              }\n              bullets={[\n                <>Group items by Feature / Fix / Chore, etc.</>,\n                <>\n                  Edit Markdown, copy it, or download as <code>.md</code>.\n                </>,\n                <>Click “Save Release” to store it locally for later.</>,\n              ]}\n            />\n          ) : (\n            <main className=\"flex-1 min-w-0 h-full overflow-auto\">\n              <PreviewPanel\n                version={version}\n                setVersion={setVersion}\n                notesMd={notesMd}\n                setNotesMd={setNotesMd}\n                onCopy={onCopy}\n                onDownload={onDownload}\n                onSave={onSave}\n              />\n            </main>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReleaseNotesView;\n","import React from 'react';\nimport ReleaseNotesView from '../../features/release-notes/ReleaseNotesView';\n\nexport default function ReleaseNotesApp() {\n    return <ReleaseNotesView />;\n}\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  type?: \"button\" | \"submit\" | \"reset\";\n  className?: string;\n  title?: string;\n  disabled?: boolean;\n};\n\nconst IconButton: React.FC<Props> = ({\n  children,\n  onClick,\n  type = \"button\",\n  className = \"\",\n  title,\n  disabled,\n}) => (\n  <button\n    type={type}\n    title={title}\n    disabled={disabled}\n    onClick={onClick}\n    className={[\n      \"inline-flex items-center gap-1 rounded border px-3 py-1.5 text-sm\",\n      \"bg-white hover:bg-gray-50 text-gray-700\",\n      \"disabled:opacity-60 disabled:cursor-not-allowed\",\n      className,\n    ].join(\" \")}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import React from \"react\";\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  children: React.ReactNode;\n  className?: string;\n  /** Optional: close when clicking the scrim (default true) */\n  closeOnBackdrop?: boolean;\n};\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  className = \"bg-white rounded-xl shadow-lg p-6\",\n  closeOnBackdrop = true,\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      <div\n        className=\"absolute inset-0 bg-black/50\"\n        onClick={closeOnBackdrop ? onClose : undefined}\n      />\n      <div className=\"absolute left-1/2 top-20 -translate-x-1/2 w-full max-w-lg\">\n        <div\n          className={`relative bg-white rounded-xl shadow-lg max-h-[90vh] md:max-h-[80vh] overflow-y-auto ${className}`}\n          role=\"dialog\"\n          aria-modal\n        >\n          {title && (\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold\">{title}</h3>\n              <button\n                aria-label=\"Close modal\"\n                onClick={onClose}\n                className=\"rounded p-1 hover:bg-gray-100\"\n              >\n                ✕\n              </button>\n            </div>\n          )}\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useProjectHubContext } from \"../features/projectHub/context\";\nimport type { ProjectHubContextValue } from \"../types/project-hub\";\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n","import React from \"react\";\n\ntype EmptyStateProps = {\n  title: string;\n  description?: React.ReactNode;\n  bullets?: React.ReactNode[];\n  action?: React.ReactNode; // e.g. a CTA button\n  className?: string;\n};\n\nconst EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  bullets,\n  action,\n  className = \"rounded-xl border bg-white p-8\",\n}) => {\n  return (\n    <div className={className}>\n      <h2 className=\"text-2xl font-semibold text-gray-900\">{title}</h2>\n      {description && (\n        <div className=\"mt-2 text-gray-600 text-sm\">{description}</div>\n      )}\n      {bullets?.length ? (\n        <ul className=\"mt-3 list-disc pl-5 space-y-1 text-sm text-gray-700\">\n          {bullets.map((b, i) => (\n            <li key={i}>{b}</li>\n          ))}\n        </ul>\n      ) : null}\n      {action && <div className=\"mt-4\">{action}</div>}\n    </div>\n  );\n};\n\nexport default EmptyState;\n","import React, { useState } from \"react\";\n\ntype Props = {\n  value: string;\n  className?: string;\n};\n\nconst SecretText: React.FC<Props> = ({ value, className }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className={[\"inline-flex items-center gap-2\", className].join(\" \")}>\n      <code className=\"rounded bg-gray-100 px-2 py-1\">\n        {show ? value : \"••••••••\"}\n      </code>\n      <button\n        type=\"button\"\n        onClick={() => setShow((s) => !s)}\n        className=\"text-xs rounded border px-2 py-1 hover:bg-gray-50\"\n      >\n        {show ? \"Hide\" : \"Show\"}\n      </button>\n    </div>\n  );\n};\n\nexport default SecretText;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { storage, HUB_NS } from \"../../packages/storage\";\nimport type {\n  HubProject,\n  ProjectHubContextValue,\n} from \"../../types/project-hub\";\n\nconst LIST_KEY = \"projects\"; // NOT \"hub:projects\" (ns already applied)\nconst SELECTED_KEY = \"selectedProjectId\";\n\nfunction loadProjects(): HubProject[] {\n  return storage.get<HubProject[]>(HUB_NS, LIST_KEY, []);\n}\nfunction persistProjects(list: HubProject[]) {\n  storage.set(HUB_NS, LIST_KEY, list);\n}\n\nexport const ProjectHubContext = createContext<\n  ProjectHubContextValue | undefined\n>(undefined);\nexport const useProjectHubContext = () => useContext(ProjectHubContext);\n\nexport function ProjectHubProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [projects, setProjects] = useState<HubProject[]>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  const refresh = () => setProjects(loadProjects());\n\n  useEffect(() => {\n    refresh();\n    setSelectedId(storage.get<string | null>(HUB_NS, SELECTED_KEY, null));\n  }, []);\n\n  useEffect(() => {\n    if (selectedId) storage.set(HUB_NS, SELECTED_KEY, selectedId);\n    else storage.remove(HUB_NS, SELECTED_KEY);\n  }, [selectedId]);\n\n  const selected = useMemo<HubProject | null>(\n    () => projects.find((p) => p.id === selectedId) || null,\n    [projects, selectedId]\n  );\n\n  const selectProject = (id: string | null) => setSelectedId(id);\n\n  const addProject = (name: string): HubProject | null => {\n    const n = (name || \"\").trim();\n    if (!n) return null;\n\n    // de-dup by case-insensitive name\n    if (projects.some((p) => p.name.toLowerCase() === n.toLowerCase()))\n      return null;\n\n    const id = `${n.toLowerCase().replace(/\\s+/g, \"-\")}-${Date.now()}`;\n    const proj: HubProject = { id, name: n, sections: {} };\n    const next = [...projects, proj];\n\n    setProjects(next);\n    persistProjects(next);\n    setSelectedId(id);\n    return proj;\n  };\n\n  // Hub-only delete (does NOT touch Board data)\n  const deleteProject = (id: string) => {\n    const next = projects.filter((p) => p.id !== id);\n    setProjects(next);\n    persistProjects(next);\n    if (selectedId === id) setSelectedId(null);\n  };\n\n  const updateSection = (sectionKey: string, data: unknown) => {\n    if (!selectedId) return;\n    const next = projects.map((p) =>\n      p.id !== selectedId\n        ? p\n        : { ...p, sections: { ...(p.sections || {}), [sectionKey]: data } }\n    );\n    setProjects(next);\n    persistProjects(next);\n  };\n\n  const value: ProjectHubContextValue = {\n    projects,\n    selected,\n    selectedId,\n    setSelectedId,\n    selectProject,\n    addProject,\n    deleteProject,\n    updateSection,\n    refresh,\n  };\n\n  return (\n    <ProjectHubContext.Provider value={value}>\n      {children}\n    </ProjectHubContext.Provider>\n  );\n}\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n"],"names":["_ref","value","onChange","placeholder","className","dedupe","draft","setDraft","useState","inputRef","useRef","splitAndCommit","raw","parts","split","map","s","trim","filter","Boolean","length","base","Set","next","some","p","has","_jsxs","join","onClick","_inputRef$current2","current","focus","children","chip","i","_jsx","type","concat","idx","_inputRef$current","_","removeAt","ref","e","target","onKeyDown","key","preventDefault","slice","onBlur","v","Array","from","commit","projects","selectedProjectId","onSelectProject","fromDate","toDate","onChangeFrom","onChangeTo","grouping","onChangeGrouping","onGenerate","releases","onLoadRelease","id","name","disabled","title","reverse","r","version","Date","date","toLocaleDateString","setVersion","notesMd","setNotesMd","onCopy","onDownload","onSave","DEFAULT_EMOJI","Features","Fixes","Improvements","Chores","classifyTask","task","_task$labels","labels","l","String","toLowerCase","kw","includes","priority","todayISO","toISOString","daysAgoISO","n","d","setDate","getDate","safeFile","replace","ReleaseNotesView","setProjects","storage","get","BOARD_NS","tasks","setTasks","setReleases","RN_NS","setSelectedProjectId","setFromDate","setToDate","setGrouping","generatedTasks","setGeneratedTasks","isSidebarOpen","setIsSidebarOpen","useEffect","history","projectId","_last$range","_last$range$to","last","hasFeature","find","t","prevVersion","arguments","undefined","Number","parseInt","maj","min","pat","every","isFinite","suggestNextVersion","range","to","onStorage","storageArea","localStorage","JSON","parse","newValue","_unused","_unused2","_unused3","window","addEventListener","removeEventListener","set","remove","projectTasks","useMemo","project","completedInRange","status","completedAt","completed","handler","useCallback","md","groupBy","emoji","groups","Map","push","k","_groups$get","_t$labels$","_t$labels","test","normalizeVersion","entries","sort","_ref2","_ref3","a","b","localeCompare","_ref4","_ref5","_emoji","items","em","lines","_a$title","_b$title","tasksToMarkdown","async","navigator","clipboard","writeText","console","warn","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","rec","now","filters","prev","loadRelease","_r$range","_r$range$from","_r$range2","_r$range2$to","FiltersPanel","PreviewPanel","EmptyState","description","_Fragment","bullets","ReleaseNotesApp","isOpen","onClose","closeOnBackdrop","role","useProjectHub","ctx","useProjectHubContext","Error","action","show","setShow","LIST_KEY","SELECTED_KEY","persistProjects","list","HUB_NS","ProjectHubContext","createContext","useContext","ProjectHubProvider","selectedId","setSelectedId","refresh","selected","selectProject","addProject","proj","sections","deleteProject","updateSection","sectionKey","data","_objectSpread","Provider"],"sourceRoot":""}