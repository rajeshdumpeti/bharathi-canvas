{"version":3,"file":"static/js/828.eb0439ed.chunk.js","mappings":"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","sources":["features/projectHub/components/HubSidebar.tsx","features/projectHub/components/SectionHeader.tsx","features/projectHub/constants/setupDefaults.js","utils/immutables.ts","features/projectHub/sections/Setup.jsx","features/projectHub/constants/architectureDefault.ts","features/projectHub/sections/Architecture.jsx","features/projectHub/constants/databaseDefault.js","features/projectHub/sections/Database.jsx","features/projectHub/components/MarkdownEditor.jsx","features/projectHub/components/MarkdownView.jsx","features/projectHub/sections/MarkdownSectionBase.jsx","features/projectHub/sections/Links.jsx","features/projectHub/constants/defaultDeploymentGuide.js","features/projectHub/sections/Deployment.jsx","features/projectHub/ProjectHubView.tsx","features/projectHub/sections/Issues.jsx","features/projectHub/sections/POCs.jsx","features/projectHub/sections/Screenshots.jsx","features/projectHub/sections/Revenue.jsx","features/projectHub/sections/Value.jsx","features/projectHub/sections/Maintenance.jsx","features/projectHub/sections/Demand.jsx","features/projectHub/sections/TechRequirements.jsx","features/projectHub/sections/Releases.jsx","features/projectHub/sections/UX.jsx","features/projectHub/sections/Documents.jsx","app/project-hub/App.jsx","components/ui/ChipInput.tsx","components/ui/IconButton.tsx","components/ui/EmptyState.tsx","components/ui/SectionHeader.tsx","components/ui/Modal.tsx","hooks/useProjectHub.ts","components/ui/SecretText.tsx","features/projectHub/context.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport type { SectionDef, SectionKey, HubProject } from \"../../../types/project-hub\";\n\ntype Props = {\n    sections: SectionDef[];\n    activeKey: SectionKey;\n    onSelect?: (key: SectionKey) => void;\n    onConfirmDelete?: (project: HubProject) => void;\n};\n\nconst HubSidebar: React.FC<Props> = ({ sections, activeKey, onSelect, onConfirmDelete }) => {\n    const { projects, selected, setSelectedId, addProject } = useProjectHub();\n    const [newName, setNewName] = useState(\"\");\n\n    return (\n        <div className=\"flex h-full flex-col\">\n            <h3 className=\"text-xl font-bold mb-4\">Projects</h3>\n\n            {/* Projects list */}\n            <ul className=\"space-y-2 mb-4 overflow-y-auto pr-1\">\n                {projects.map((p) => (\n                    <li\n                        key={p.id}\n                        className={`flex items-center justify-between p-2 rounded-lg cursor-pointer transition ${selected?.id === p.id ? \"bg-blue-600 text-white\" : \"hover:bg-gray-800\"\n                            }`}\n                    >\n                        <span onClick={() => setSelectedId(p.id)} className=\"flex-1 pr-2\">\n                            {p.name}\n                        </span>\n                        {projects.length > 0 && (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    onConfirmDelete?.(p);\n                                }}\n                                className=\"p-1 rounded text-gray-400 hover:text-red-500\"\n                                title=\"Remove from Project Hub\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"h-4 w-4\"\n                                    fill=\"none\"\n                                    viewBox=\"0 0 24 24\"\n                                    stroke=\"currentColor\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                                    />\n                                </svg>\n                            </button>\n                        )}\n                    </li>\n                ))}\n                {projects.length === 0 && <li className=\"text-sm text-gray-400\">No projects yet.</li>}\n            </ul>\n\n            {/* New project */}\n            <div className=\"mb-6 space-y-2\">\n                <input\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)}\n                    placeholder=\"New project name\"\n                    className=\"w-full p-2 rounded-lg bg-gray-800 text-white placeholder-gray-400 focus:outline-none\"\n                />\n                <button\n                    onClick={() => {\n                        const n = newName.trim();\n                        if (!n) return;\n                        addProject(n);\n                        setNewName(\"\");\n                    }}\n                    className={`w-full py-2 rounded-lg font-semibold transition\n            ${newName.trim() ? \"bg-blue-600 hover:bg-blue-700 text-white\" : \"bg-gray-600 text-gray-300 cursor-not-allowed\"}`}\n                >\n                    Add Project\n                </button>\n            </div>\n\n            {/* Sections */}\n            <div className=\"mt-auto\">\n                <h4 className=\"font-semibold mb-2\">Sections</h4>\n                <ul className=\"space-y-1 max-h-64 overflow-y-auto pr-1\">\n                    {sections.map((s) => (\n                        <li key={s.key}>\n                            <button\n                                onClick={() => onSelect?.(s.key)}\n                                disabled={!selected}\n                                className={`w-full text-left px-2 py-1 rounded ${activeKey === s.key ? \"bg-gray-700\" : \"hover:bg-gray-800\"\n                                    } ${!selected ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\n                            >\n                                {s.title}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n                {!selected && (\n                    <p className=\"mt-3 text-xs text-gray-400\">Create/select a project to enable sections.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HubSidebar;","import React from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\n\nexport default function SectionHeader({ title }) {\n  const { selected } = useProjectHub();\n  return (\n    <div className=\"flex items-center justify-between\">\n      <h2 className=\"text-2xl font-bold\">{title}</h2>\n      <div className=\"text-sm text-gray-500\">\n        {selected ? `Project: ${selected.name}` : \"No project selected\"}\n      </div>\n    </div>\n  );\n}\n","export const DEFAULT_SETUP = {\n    summary: '',\n    repoUrl: '',\n    issueTrackerUrl: '',\n    designDocUrl: '',\n    license: 'MIT',\n    packageManager: 'npm',\n    nodeVersion: '',\n    framework: '',\n    branchStrategy: 'trunk',\n    techStack: ['React', 'TailwindCSS', 'FastAPI'],\n    commands: {\n        install: 'npm install',\n        start: 'npm start',\n        build: 'npm run build',\n        test: 'npm test',\n        lint: 'npm run lint',\n        format: 'npm run format',\n    },\n    environments: [\n        { name: 'Dev', appUrl: '', apiUrl: '' },\n        { name: 'Staging', appUrl: '', apiUrl: '' },\n        { name: 'Prod', appUrl: '', apiUrl: '' },\n    ],\n    envVars: [],\n    tooling: {\n        lint: 'ESLint',\n        format: 'Prettier',\n        typecheck: 'TypeScript (optional)',\n    },\n    contacts: [],\n};\n","/** Immutable update: patch object or updater fn */\nexport function updateAt<T>(\n  arr: readonly T[],\n  idx: number,\n  patch: Partial<T> | ((prev: T) => T)\n): T[] {\n  return arr.map((v, i) =>\n    i !== idx\n      ? (v as T)\n      : typeof patch === \"function\"\n        ? (patch as (p: T) => T)(v as T)\n        : ({ ...(v as any), ...(patch as any) } as T)\n  );\n}\n\nexport function removeAt<T>(arr: readonly T[], idx: number): T[] {\n  return arr.filter((_, i) => i !== idx) as T[];\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport useProjectHub from '../../../hooks/useProjectHub';\nimport SectionHeader from '../../../components/ui/SectionHeader';\nimport IconButton from '../../../components/ui/IconButton';\nimport ChipInput from '../../../components/ui/ChipInput';\nimport SecretText from '../../../components/ui/SecretText';\nimport { DEFAULT_SETUP } from '../constants/setupDefaults';\nimport { updateAt, removeAt } from '../../../utils/immutables';\n\n/** NOTE:\n *  - Read mode = clean, card-like overview\n *  - Edit mode = structured forms\n *  - Data lives under project.sections.setup (persisted via context)\n */\n\nexport default function Setup() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.setup && typeof selected.sections.setup === 'object'\n                ? selected.sections.setup\n                : DEFAULT_SETUP,\n        [selected]\n    );\n\n    const [mode, setMode] = useState('read'); // 'read' | 'edit'\n    const [form, setForm] = useState(DEFAULT_SETUP);\n\n    useEffect(() => {\n        setForm(saved || DEFAULT_SETUP);\n        setMode('read');\n    }, [saved, selected?.id]);\n\n    const patch = (p) => setForm((f) => ({ ...f, ...p }));\n\n    /* === READ MODE === */\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to configure <strong>Setup</strong>.\n            </div>\n        );\n    }\n\n    if (mode === 'read') {\n        return (\n            <div className=\"space-y-6\">\n                <SectionHeader\n                    title=\"Setup Overview\"\n                    mode=\"read\"\n                    onEdit={() => setMode('edit')}\n                />\n\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    {/* Basics */}\n                    <Card title=\"Basics\">\n                        <DL\n                            rows={[\n                                ['Repository', linkOrDash(form.repoUrl)],\n                                ['Issue tracker', linkOrDash(form.issueTrackerUrl)],\n                                ['Design doc', linkOrDash(form.designDocUrl)],\n                                ['License', valueOrDash(form.license)],\n                                ['Package manager', valueOrDash(form.packageManager)],\n                                ['Node', valueOrDash(form.nodeVersion)],\n                                ['Framework', valueOrDash(form.framework)],\n                                ['Branching', valueOrDash(form.branchStrategy)],\n                            ]}\n                        />\n                    </Card>\n\n                    {/* Tech stack */}\n                    <Card title=\"Tech stack\">\n                        {form.techStack?.length ? (\n                            <div className=\"flex flex-wrap gap-2\">\n                                {form.techStack.map((t) => (\n                                    <span key={t} className=\"px-2 py-1 rounded bg-gray-100 text-xs\">\n                                        {t}\n                                    </span>\n                                ))}\n                            </div>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Commands */}\n                    <Card title=\"Commands\">\n                        {form.commands ? (\n                            <pre className=\"bg-gray-50 rounded p-3 text-xs overflow-auto\">\n                                {JSON.stringify(form.commands, null, 2)}\n                            </pre>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Tooling */}\n                    <Card title=\"Tooling\">\n                        <DL\n                            rows={[\n                                ['Lint', valueOrDash(form.tooling?.lint)],\n                                ['Format', valueOrDash(form.tooling?.format)],\n                                ['Typecheck', valueOrDash(form.tooling?.typecheck)],\n                            ]}\n                        />\n                    </Card>\n\n                    {/* Environments */}\n                    <Card className=\"lg:col-span-2\" title=\"Environments\">\n                        {form.environments?.length ? (\n                            <div className=\"grid md:grid-cols-3 gap-4\">\n                                {form.environments.map((env, i) => (\n                                    <div key={i} className=\"rounded border p-3 text-sm\">\n                                        <div className=\"font-semibold mb-1\">\n                                            {env.name || `Env ${i + 1}`}\n                                        </div>\n                                        <div className=\"text-gray-500\">App:</div>\n                                        <div className=\"break-all\">{linkOrDash(env.appUrl)}</div>\n                                        <div className=\"text-gray-500 mt-1\">API:</div>\n                                        <div className=\"break-all\">{linkOrDash(env.apiUrl)}</div>\n                                    </div>\n                                ))}\n                            </div>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Env vars */}\n                    <Card className=\"lg:col-span-2\" title=\"Environment variables\">\n                        {form.envVars?.length ? (\n                            <div className=\"overflow-auto\">\n                                <table className=\"min-w-full text-sm\">\n                                    <thead>\n                                        <tr className=\"text-left text-gray-500\">\n                                            <th className=\"py-2 pr-3\">Key</th>\n                                            <th className=\"py-2 pr-3\">Value</th>\n                                            <th className=\"py-2 pr-3\">Secret</th>\n                                            <th className=\"py-2\">Description</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {form.envVars.map((v, i) => (\n                                            <tr key={i} className=\"border-t\">\n                                                <td className=\"py-2 pr-3 font-mono\">{v.key || '—'}</td>\n                                                <td className=\"py-2 pr-3\">\n                                                    {v.secret ? (\n                                                        <SecretText>{v.value}</SecretText>\n                                                    ) : (\n                                                        <span className=\"font-mono\">{v.value || '—'}</span>\n                                                    )}\n                                                </td>\n                                                <td className=\"py-2 pr-3\">{v.secret ? 'Yes' : 'No'}</td>\n                                                <td className=\"py-2\">{v.description || '—'}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Contacts */}\n                    <Card className=\"lg:col-span-2\" title=\"Contacts\">\n                        {form.contacts?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.contacts.map((c, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">\n                                            {c.role || 'Contact'}\n                                        </span>{' '}\n                                        {c.name ? `— ${c.name}` : ''}{' '}\n                                        {c.email ? (\n                                            <a\n                                                className=\"text-blue-700 hover:underline\"\n                                                href={`mailto:${c.email}`}\n                                            >\n                                                {c.email}\n                                            </a>\n                                        ) : (\n                                            ''\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n\n    /* === EDIT MODE === */\n    const onSave = () => {\n        updateSection('setup', form);\n        setMode('read');\n    };\n\n    return (\n        <div className=\"space-y-6\">\n            <SectionHeader\n                title=\"Edit Setup\"\n                mode=\"edit\"\n                onCancel={() => {\n                    setForm(saved);\n                    setMode('read');\n                }}\n                onSave={onSave}\n            />\n\n            {/* Basics */}\n            <Card title=\"Basics\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <TextField\n                        label=\"Repository URL\"\n                        value={form.repoUrl}\n                        onChange={(v) => patch({ repoUrl: v })}\n                        placeholder=\"https://github.com/you/repo\"\n                    />\n                    <TextField\n                        label=\"Issue tracker URL\"\n                        value={form.issueTrackerUrl}\n                        onChange={(v) => patch({ issueTrackerUrl: v })}\n                        placeholder=\"https://github.com/you/repo/issues\"\n                    />\n                    <TextField\n                        label=\"Design doc URL\"\n                        value={form.designDocUrl}\n                        onChange={(v) => patch({ designDocUrl: v })}\n                        placeholder=\"https://docs.google.com/…\"\n                    />\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <TextField\n                            label=\"License\"\n                            value={form.license}\n                            onChange={(v) => patch({ license: v })}\n                        />\n                        <SelectField\n                            label=\"Package manager\"\n                            value={form.packageManager}\n                            onChange={(v) => patch({ packageManager: v })}\n                            options={['npm', 'yarn', 'pnpm', 'bun']}\n                        />\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <TextField\n                            label=\"Node version\"\n                            value={form.nodeVersion}\n                            onChange={(v) => patch({ nodeVersion: v })}\n                            placeholder=\"e.g. 20.x\"\n                        />\n                        <TextField\n                            label=\"Framework\"\n                            value={form.framework}\n                            onChange={(v) => patch({ framework: v })}\n                            placeholder=\"e.g. React + Vite\"\n                        />\n                    </div>\n                    <SelectField\n                        label=\"Branch strategy\"\n                        value={form.branchStrategy}\n                        onChange={(v) => patch({ branchStrategy: v })}\n                        options={[\n                            { label: 'Trunk-based', value: 'trunk' },\n                            { label: 'GitFlow', value: 'gitflow' },\n                            { label: 'None', value: 'none' },\n                        ]}\n                    />\n                </div>\n            </Card>\n\n            {/* Tech stack */}\n            <Card title=\"Tech stack\">\n                <ChipInput\n                    value={form.techStack}\n                    onChange={(v) => patch({ techStack: v })}\n                    placeholder=\"Add a technology and press Enter\"\n                />\n            </Card>\n\n            {/* Commands */}\n            <Card title=\"Commands\">\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    {Object.entries(form.commands).map(([k, v]) => (\n                        <TextField\n                            key={k}\n                            label={k}\n                            value={v}\n                            onChange={(val) =>\n                                patch({ commands: { ...form.commands, [k]: val } })\n                            }\n                            className=\"font-mono\"\n                        />\n                    ))}\n                </div>\n            </Card>\n\n            {/* Environments */}\n            <Card title=\"Environments\">\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    {form.environments.map((env, i) => (\n                        <div key={i} className=\"rounded border p-3 space-y-2\">\n                            <div className=\"flex items-center justify-between\">\n                                <input\n                                    value={env.name}\n                                    onChange={(e) =>\n                                        patch({\n                                            environments: updateAt(form.environments, i, {\n                                                name: e.target.value,\n                                            }),\n                                        })\n                                    }\n                                    placeholder={`Env ${i + 1} name`}\n                                    className=\"w-40 rounded border px-2 py-1\"\n                                />\n                                <IconButton\n                                    variant=\"ghost\"\n                                    onClick={() =>\n                                        patch({ environments: removeAt(form.environments, i) })\n                                    }\n                                >\n                                    Remove\n                                </IconButton>\n                            </div>\n                            <TextField\n                                label=\"App URL\"\n                                value={env.appUrl}\n                                onChange={(v) =>\n                                    patch({\n                                        environments: updateAt(form.environments, i, {\n                                            appUrl: v,\n                                        }),\n                                    })\n                                }\n                            />\n                            <TextField\n                                label=\"API URL\"\n                                value={env.apiUrl}\n                                onChange={(v) =>\n                                    patch({\n                                        environments: updateAt(form.environments, i, {\n                                            apiUrl: v,\n                                        }),\n                                    })\n                                }\n                            />\n                        </div>\n                    ))}\n                </div>\n                <div className=\"mt-3\">\n                    <IconButton\n                        variant=\"neutral\"\n                        onClick={() =>\n                            patch({\n                                environments: [\n                                    ...form.environments,\n                                    { name: '', appUrl: '', apiUrl: '' },\n                                ],\n                            })\n                        }\n                    >\n                        Add environment\n                    </IconButton>\n                </div>\n            </Card>\n\n            {/* Env vars */}\n            <Card title=\"Environment variables\">\n                <div className=\"overflow-auto\">\n                    <table className=\"min-w-full text-sm\">\n                        <thead>\n                            <tr className=\"text-left text-gray-500\">\n                                <th className=\"py-2 pr-3\">Key</th>\n                                <th className=\"py-2 pr-3\">Value</th>\n                                <th className=\"py-2 pr-3\">Secret</th>\n                                <th className=\"py-2 pr-3\">Description</th>\n                                <th className=\"py-2\" />\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {form.envVars.map((row, i) => (\n                                <tr key={i} className=\"border-t\">\n                                    <td className=\"py-2 pr-3\">\n                                        <input\n                                            value={row.key}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        key: e.target.value,\n                                                    }),\n                                                })\n                                            }\n                                            className=\"w-full rounded border px-2 py-1 font-mono\"\n                                        />\n                                    </td>\n                                    <td className=\"py-2 pr-3\">\n                                        <input\n                                            value={row.value}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        value: e.target.value,\n                                                    }),\n                                                })\n                                            }\n                                            className=\"w-full rounded border px-2 py-1 font-mono\"\n                                        />\n                                    </td>\n                                    <td className=\"py-2 pr-3\">\n                                        <select\n                                            value={row.secret ? 'yes' : 'no'}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        secret: e.target.value === 'yes',\n                                                    }),\n                                                })\n                                            }\n                                            className=\"rounded border px-2 py-1\"\n                                        >\n                                            <option value=\"no\">No</option>\n                                            <option value=\"yes\">Yes</option>\n                                        </select>\n                                    </td>\n                                    <td className=\"py-2 pr-3\">\n                                        <input\n                                            value={row.description}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        description: e.target.value,\n                                                    }),\n                                                })\n                                            }\n                                            className=\"w-full rounded border px-2 py-1\"\n                                        />\n                                    </td>\n                                    <td className=\"py-2\">\n                                        <IconButton\n                                            variant=\"ghost\"\n                                            onClick={() =>\n                                                patch({ envVars: removeAt(form.envVars, i) })\n                                            }\n                                        >\n                                            Remove\n                                        </IconButton>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"mt-3\">\n                    <IconButton\n                        variant=\"neutral\"\n                        onClick={() =>\n                            patch({\n                                envVars: [\n                                    ...form.envVars,\n                                    { key: '', value: '', secret: false, description: '' },\n                                ],\n                            })\n                        }\n                    >\n                        Add variable\n                    </IconButton>\n                </div>\n            </Card>\n\n            {/* Tooling */}\n            <Card title=\"Tooling\">\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <TextField\n                        label=\"Lint\"\n                        value={form.tooling.lint}\n                        onChange={(v) =>\n                            patch({ tooling: { ...form.tooling, lint: v } })\n                        }\n                    />\n                    <TextField\n                        label=\"Format\"\n                        value={form.tooling.format}\n                        onChange={(v) =>\n                            patch({ tooling: { ...form.tooling, format: v } })\n                        }\n                    />\n                    <TextField\n                        label=\"Typecheck\"\n                        value={form.tooling.typecheck}\n                        onChange={(v) =>\n                            patch({ tooling: { ...form.tooling, typecheck: v } })\n                        }\n                    />\n                </div>\n            </Card>\n\n            {/* Contacts */}\n            <Card title=\"Contacts\">\n                <div className=\"space-y-3\">\n                    {form.contacts.map((c, i) => (\n                        <div key={i} className=\"grid md:grid-cols-3 gap-3 items-start\">\n                            <TextField\n                                label=\"Role\"\n                                value={c.role}\n                                onChange={(v) =>\n                                    patch({ contacts: updateAt(form.contacts, i, { role: v }) })\n                                }\n                                placeholder=\"Owner\"\n                            />\n                            <TextField\n                                label=\"Name\"\n                                value={c.name}\n                                onChange={(v) =>\n                                    patch({ contacts: updateAt(form.contacts, i, { name: v }) })\n                                }\n                            />\n                            <div className=\"flex gap-2\">\n                                <TextField\n                                    label=\"Email\"\n                                    value={c.email}\n                                    onChange={(v) =>\n                                        patch({\n                                            contacts: updateAt(form.contacts, i, { email: v }),\n                                        })\n                                    }\n                                    placeholder=\"email@domain.com\"\n                                    className=\"flex-1\"\n                                />\n                                <IconButton\n                                    variant=\"ghost\"\n                                    onClick={() =>\n                                        patch({ contacts: removeAt(form.contacts, i) })\n                                    }\n                                >\n                                    Remove\n                                </IconButton>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"mt-3\">\n                    <IconButton\n                        variant=\"neutral\"\n                        onClick={() =>\n                            patch({\n                                contacts: [\n                                    ...form.contacts,\n                                    { role: '', name: '', email: '' },\n                                ],\n                            })\n                        }\n                    >\n                        Add contact\n                    </IconButton>\n                </div>\n            </Card>\n        </div>\n    );\n}\n\n/* ---------- small presentational helpers ---------- */\n\nfunction Card({ title, children, className }) {\n    return (\n        <section className={`rounded border bg-white p-4 ${className || ''}`}>\n            {title ? <h4 className=\"font-semibold mb-3\">{title}</h4> : null}\n            {children}\n        </section>\n    );\n}\n\nfunction DL({ rows = [] }) {\n    return (\n        <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n            {rows.map(([dt, dd], i) => (\n                <React.Fragment key={i}>\n                    <dt className=\"text-gray-500\">{dt}</dt>\n                    <dd className=\"col-span-2\">{dd}</dd>\n                </React.Fragment>\n            ))}\n        </dl>\n    );\n}\n\nfunction Empty() {\n    return <p className=\"text-sm text-gray-500\">—</p>;\n}\n\nfunction linkOrDash(href) {\n    if (!href) return '—';\n    return (\n        <a\n            className=\"text-blue-700 hover:underline break-all\"\n            href={href}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n        >\n            {href}\n        </a>\n    );\n}\n\nfunction valueOrDash(v) {\n    return v ? <span>{v}</span> : '—';\n}\n\nfunction TextField({ label, value, onChange, className, ...rest }) {\n    return (\n        <div>\n            {label && (\n                <label className=\"block text-sm text-gray-600 mb-1\">{label}</label>\n            )}\n            <input\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                className={`w-full rounded border px-3 py-2 ${className || ''}`}\n                {...rest}\n            />\n        </div>\n    );\n}\n\nfunction SelectField({ label, value, onChange, options = [] }) {\n    const opts =\n        typeof options[0] === 'string'\n            ? options.map((o) => ({ label: o, value: o }))\n            : options;\n\n    return (\n        <div>\n            {label && (\n                <label className=\"block text-sm text-gray-600 mb-1\">{label}</label>\n            )}\n            <select\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                className=\"w-full rounded border px-3 py-2\"\n            >\n                {opts.map((o) => (\n                    <option key={o.value} value={o.value}>\n                        {o.label}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n}\n","// src/features/projectHub/constants/architectureDefault.js\nconst architectureDefault = {\n    overview: \"\",\n\n    diagrams: [\n        { label: 'System Context', url: '' }\n    ],\n\n    services: [\n        { name: 'web', language: 'TypeScript', runtime: 'Node 20', repoUrl: '', owner: 'App Team' }\n    ],\n\n    apis: [\n        { name: 'Tasks', method: 'GET', path: '/api/tasks', auth: 'JWT', service: 'web', description: '' }\n    ],\n\n    dataStores: [\n        { name: 'app-db', type: 'PostgreSQL', version: '15', purpose: 'Primary OLTP' }\n    ],\n\n    queues: [\n        { name: 'events', tech: 'Kafka', purpose: 'Domain events' }\n    ],\n\n    thirdParty: [\n        { name: 'Stripe', purpose: 'Payments', docsUrl: '' }\n    ],\n\n    observability: {\n        logs: \"CloudWatch\",\n        metrics: \"Prometheus\",\n        tracing: \"OpenTelemetry\",\n        dashboardsUrl: \"\",\n        alertsUrl: \"\",\n    },\n\n    security: {\n        encryptionAtRest: true,\n        encryptionInTransit: true,\n        threatModelUrl: \"\",\n        dataRetentionNotes: \"\",\n        corsPolicy: \"\",\n        cspNotes: \"\",\n    },\n\n    availability: {\n        sla: \"99.9%\",\n        slo: \"99.9%\",\n        rpo: \"15m\",\n        rto: \"30m\",\n    },\n\n    scaling: {\n        strategy: \"Horizontal\",\n        autoScaling: true,\n        notes: \"\",\n    },\n\n    decisions: [\n        { date: '2025-09-10', title: 'Pick Postgres', status: 'Accepted', link: '' }\n    ],\n\n    risks: [\n        { risk: 'Vendor lock-in', mitigation: 'Abstract provider' }\n    ],\n\n    tags: [\"microservice\", \"rest\"],\n};\n\nexport default architectureDefault;\n","// src/features/projectHub/sections/Architecture.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\nimport architectureDefault from \"../constants/architectureDefault\";\n\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\n/* ---------- small table editors ---------- */\nfunction ServicesEditor({ value = [], onChange }) {\n    const add = () =>\n        onChange([\n            ...value,\n            { name: \"\", language: \"\", runtime: \"\", repoUrl: \"\", owner: \"\" },\n        ]);\n    const set = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Name</th>\n                        <th className=\"py-2 pr-3\">Language</th>\n                        <th className=\"py-2 pr-3\">Runtime</th>\n                        <th className=\"py-2 pr-3\">Repo</th>\n                        <th className=\"py-2 pr-3\">Owner</th>\n                        <th className=\"py-2\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((s, i) => (\n                        <tr key={i} className=\"border-t\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.name}\n                                    onChange={(e) => set(i, { name: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.language}\n                                    onChange={(e) => set(i, { language: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.runtime}\n                                    onChange={(e) => set(i, { runtime: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.repoUrl}\n                                    onChange={(e) => set(i, { repoUrl: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.owner}\n                                    onChange={(e) => set(i, { owner: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add service</RowBtn>\n            </div>\n        </div>\n    );\n}\n\nfunction ApiEditor({ value = [], onChange }) {\n    const add = () =>\n        onChange([\n            ...value,\n            {\n                name: \"\",\n                method: \"GET\",\n                path: \"\",\n                auth: \"None\",\n                service: \"\",\n                description: \"\",\n            },\n        ]);\n    const set = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Name</th>\n                        <th className=\"py-2 pr-3\">Method</th>\n                        <th className=\"py-2 pr-3\">Path</th>\n                        <th className=\"py-2 pr-3\">Auth</th>\n                        <th className=\"py-2 pr-3\">Service</th>\n                        <th className=\"py-2 pr-3\">Description</th>\n                        <th className=\"py-2\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((a, i) => (\n                        <tr key={i} className=\"border-t\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={a.name}\n                                    onChange={(e) => set(i, { name: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={a.method}\n                                    onChange={(e) => set(i, { method: e.target.value })}\n                                >\n                                    {[\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"].map((m) => (\n                                        <option key={m}>{m}</option>\n                                    ))}\n                                </select>\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1 font-mono\"\n                                    value={a.path}\n                                    onChange={(e) => set(i, { path: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={a.auth}\n                                    onChange={(e) => set(i, { auth: e.target.value })}\n                                >\n                                    {[\"None\", \"API Key\", \"OAuth2\", \"JWT\"].map((m) => (\n                                        <option key={m}>{m}</option>\n                                    ))}\n                                </select>\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={a.service}\n                                    onChange={(e) => set(i, { service: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={a.description}\n                                    onChange={(e) => set(i, { description: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add API</RowBtn>\n            </div>\n        </div>\n    );\n}\n\nfunction SimpleListEditor({ value = [], onChange, columns }) {\n    const addEmpty = () =>\n        onChange([...value, Object.fromEntries(columns.map((c) => [c.key, \"\"]))]);\n    const set = (i, key, v) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], [key]: v };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        {columns.map((c) => (\n                            <th key={c.key} className=\"py-2 pr-3\">\n                                {c.label}\n                            </th>\n                        ))}\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            {columns.map((c) => (\n                                <td key={c.key} className=\"py-2 pr-3\">\n                                    <input\n                                        className=\"w-full rounded border px-2 py-1\"\n                                        value={row[c.key] || \"\"}\n                                        onChange={(e) => set(i, c.key, e.target.value)}\n                                    />\n                                </td>\n                            ))}\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={addEmpty}>Add</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/* ---------- main ---------- */\nexport default function Architecture() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.architecture &&\n                typeof selected.sections.architecture === \"object\"\n                ? selected.sections.architecture\n                : architectureDefault,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\"); // 'read' | 'edit'\n    const [form, setForm] = useState(architectureDefault);\n\n    useEffect(() => {\n        setForm(saved || architectureDefault);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const onSave = () => {\n        updateSection(\"architecture\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage{\" \"}\n                <strong>Architecture</strong>.\n            </div>\n        );\n    }\n\n    /* ---------- READ MODE ---------- */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Architecture</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                {/* Overview & Diagrams */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Overview</h4>\n                        <p className=\"text-sm whitespace-pre-line\">\n                            {form.overview || \"—\"}\n                        </p>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Diagrams</h4>\n                        {form.diagrams?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.diagrams.map((d, i) => (\n                                    <li key={i}>\n                                        {d.label ? `${d.label}: ` : \"\"}\n                                        {d.url ? (\n                                            <a\n                                                className=\"text-blue-700 hover:underline break-all\"\n                                                href={d.url}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                {d.url}\n                                            </a>\n                                        ) : (\n                                            \"—\"\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* Key resources */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Services</h4>\n                        {form.services?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.services.map((s, i) => (\n                                    <li key={i} className=\"break-words\">\n                                        <span className=\"font-medium\">{s.name || \"Service\"}</span>{\" \"}\n                                        — {s.language || \"?\"} @ {s.runtime || \"?\"}\n                                        {s.repoUrl && (\n                                            <>\n                                                {\" \"}\n                                                (<a\n                                                    className=\"text-blue-700 hover:underline\"\n                                                    href={s.repoUrl}\n                                                    target=\"_blank\"\n                                                    rel=\"noreferrer\"\n                                                >\n                                                    repo\n                                                </a>\n                                                )\n                                            </>\n                                        )}\n                                        {s.owner ? ` — ${s.owner}` : \"\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Data stores</h4>\n                        {form.dataStores?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.dataStores.map((d, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{d.name || \"Store\"}</span>{\" \"}\n                                        — {d.type || \"Type\"} {d.version ? `(${d.version})` : \"\"} —{\" \"}\n                                        {d.purpose || \"—\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* APIs */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">APIs</h4>\n                    {form.apis?.length ? (\n                        <div className=\"overflow-auto\">\n                            <table className=\"min-w-full text-sm\">\n                                <thead>\n                                    <tr className=\"text-left text-gray-500\">\n                                        <th className=\"py-2 pr-3\">Name</th>\n                                        <th className=\"py-2 pr-3\">Method</th>\n                                        <th className=\"py-2 pr-3\">Path</th>\n                                        <th className=\"py-2 pr-3\">Auth</th>\n                                        <th className=\"py-2 pr-3\">Service</th>\n                                        <th className=\"py-2 pr-3\">Description</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {form.apis.map((a, i) => (\n                                        <tr key={i} className=\"border-t\">\n                                            <td className=\"py-2 pr-3\">{a.name || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.method || \"—\"}</td>\n                                            <td className=\"py-2 pr-3 font-mono\">{a.path || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.auth || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.service || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.description || \"—\"}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                {/* Other lists */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Queues / streams</h4>\n                        {form.queues?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.queues.map((q, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{q.name || \"Queue\"}</span> —{\" \"}\n                                        {q.tech || \"Tech\"} — {q.purpose || \"—\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">3rd-party dependencies</h4>\n                        {form.thirdParty?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.thirdParty.map((t, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{t.name || \"Vendor\"}</span> —{\" \"}\n                                        {t.purpose || \"—\"}{\" \"}\n                                        {t.docsUrl && (\n                                            <a\n                                                className=\"text-blue-700 hover:underline break-all ml-1\"\n                                                href={t.docsUrl}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                docs\n                                            </a>\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* Ops & security */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Observability</h4>\n                        <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n                            <dt className=\"text-gray-500\">Logs</dt>\n                            <dd className=\"col-span-2\">{form.observability.logs || \"—\"}</dd>\n                            <dt className=\"text-gray-500\">Metrics</dt>\n                            <dd className=\"col-span-2\">\n                                {form.observability.metrics || \"—\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">Tracing</dt>\n                            <dd className=\"col-span-2\">\n                                {form.observability.tracing || \"—\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">Dashboards</dt>\n                            <dd className=\"col-span-2 break-all\">\n                                {form.observability.dashboardsUrl ? (\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={form.observability.dashboardsUrl}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {form.observability.dashboardsUrl}\n                                    </a>\n                                ) : (\n                                    \"—\"\n                                )}\n                            </dd>\n                            <dt className=\"text-gray-500\">Alerts</dt>\n                            <dd className=\"col-span-2 break-all\">\n                                {form.observability.alertsUrl ? (\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={form.observability.alertsUrl}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {form.observability.alertsUrl}\n                                    </a>\n                                ) : (\n                                    \"—\"\n                                )}\n                            </dd>\n                        </dl>\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Security</h4>\n                        <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n                            <dt className=\"text-gray-500\">At rest</dt>\n                            <dd className=\"col-span-2\">\n                                {form.security.encryptionAtRest ? \"Yes\" : \"No\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">In transit</dt>\n                            <dd className=\"col-span-2\">\n                                {form.security.encryptionInTransit ? \"Yes\" : \"No\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">Threat model</dt>\n                            <dd className=\"col-span-2 break-all\">\n                                {form.security.threatModelUrl ? (\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={form.security.threatModelUrl}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {form.security.threatModelUrl}\n                                    </a>\n                                ) : (\n                                    \"—\"\n                                )}\n                            </dd>\n                            <dt className=\"text-gray-500\">Retention</dt>\n                            <dd className=\"col-span-2\">\n                                {form.security.dataRetentionNotes || \"—\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">CORS</dt>\n                            <dd className=\"col-span-2\">{form.security.corsPolicy || \"—\"}</dd>\n                            <dt className=\"text-gray-500\">CSP</dt>\n                            <dd className=\"col-span-2\">{form.security.cspNotes || \"—\"}</dd>\n                        </dl>\n                    </div>\n                </div>\n\n                {/* Availability & scaling */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Availability</h4>\n                        <ul className=\"text-sm\">\n                            <li>SLA: {form.availability.sla || \"—\"}</li>\n                            <li>SLO: {form.availability.slo || \"—\"}</li>\n                            <li>RPO: {form.availability.rpo || \"—\"}</li>\n                            <li>RTO: {form.availability.rto || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Scaling</h4>\n                        <ul className=\"text-sm\">\n                            <li>Strategy: {form.scaling.strategy || \"—\"}</li>\n                            <li>Autoscaling: {form.scaling.autoScaling ? \"Yes\" : \"No\"}</li>\n                            <li>Notes: {form.scaling.notes || \"—\"}</li>\n                        </ul>\n                    </div>\n                </div>\n\n                {/* Decisions & Risks */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Architecture decisions</h4>\n                        {form.decisions?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.decisions.map((d, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">\n                                            {d.date ? `${d.date}: ` : \"\"}\n                                            {d.title || \"Decision\"}\n                                        </span>{\" \"}\n                                        — {d.status || \"Status\"}{\" \"}\n                                        {d.link && (\n                                            <a\n                                                className=\"text-blue-700 hover:underline ml-1 break-all\"\n                                                href={d.link}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                link\n                                            </a>\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Risks</h4>\n                        {form.risks?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.risks.map((r, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{r.risk || \"Risk\"}</span> —{\" \"}\n                                        {r.mitigation || \"Mitigation TBD\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* Tags */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Tags</h4>\n                    {form.tags?.length ? (\n                        <div className=\"flex flex-wrap gap-2\">\n                            {form.tags.map((t) => (\n                                <span\n                                    key={t}\n                                    className=\"px-2 py-1 rounded bg-gray-100 text-xs\"\n                                >\n                                    {t}\n                                </span>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /* ---------- EDIT MODE ---------- */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Architecture</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button\n                        type=\"submit\"\n                        className=\"px-3 py-2 rounded bg-blue-600 text-white\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            {/* Overview & diagrams */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={4}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"Brief description of the system, key components and how they interact…\"\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Diagrams</h4>\n                <SimpleListEditor\n                    value={form.diagrams}\n                    onChange={(v) => onChange({ diagrams: v })}\n                    columns={[\n                        { key: \"label\", label: \"Label\" },\n                        { key: \"url\", label: \"URL\" },\n                    ]}\n                />\n            </section>\n\n            {/* Services */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Services</h4>\n                <ServicesEditor\n                    value={form.services}\n                    onChange={(v) => onChange({ services: v })}\n                />\n            </section>\n\n            {/* APIs */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">APIs</h4>\n                <ApiEditor value={form.apis} onChange={(v) => onChange({ apis: v })} />\n            </section>\n\n            {/* Data stores */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Data stores</h4>\n                <SimpleListEditor\n                    value={form.dataStores}\n                    onChange={(v) => onChange({ dataStores: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"type\", label: \"Type\" },\n                        { key: \"version\", label: \"Version\" },\n                        { key: \"purpose\", label: \"Purpose\" },\n                    ]}\n                />\n            </section>\n\n            {/* Queues / streams */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Queues / streams</h4>\n                <SimpleListEditor\n                    value={form.queues}\n                    onChange={(v) => onChange({ queues: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"tech\", label: \"Tech\" },\n                        { key: \"purpose\", label: \"Purpose\" },\n                    ]}\n                />\n            </section>\n\n            {/* Third-party */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">3rd-party dependencies</h4>\n                <SimpleListEditor\n                    value={form.thirdParty}\n                    onChange={(v) => onChange({ thirdParty: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"purpose\", label: \"Purpose\" },\n                        { key: \"docsUrl\", label: \"Docs URL\" },\n                    ]}\n                />\n            </section>\n\n            {/* Observability */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Observability</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Logs</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.logs}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        logs: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Metrics</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.metrics}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        metrics: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Tracing</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.tracing}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        tracing: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Dashboards URL\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.dashboardsUrl}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        dashboardsUrl: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Alerts URL\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.alertsUrl}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        alertsUrl: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </section>\n\n            {/* Security */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Security</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.encryptionAtRest}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        encryptionAtRest: e.target.checked,\n                                    },\n                                })\n                            }\n                        />\n                        <span className=\"text-sm\">Encryption at rest</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.encryptionInTransit}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        encryptionInTransit: e.target.checked,\n                                    },\n                                })\n                            }\n                        />\n                        <span className=\"text-sm\">Encryption in transit</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Threat model URL\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.threatModelUrl}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        threatModelUrl: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Data retention notes\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.dataRetentionNotes}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        dataRetentionNotes: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            CORS policy\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.corsPolicy}\n                            onChange={(e) =>\n                                onChange({\n                                    security: { ...form.security, corsPolicy: e.target.value },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">CSP</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.cspNotes}\n                            onChange={(e) =>\n                                onChange({\n                                    security: { ...form.security, cspNotes: e.target.value },\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </section>\n\n            {/* Availability & Scaling */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Availability</h4>\n                <div className=\"grid md:grid-cols-4 gap-4\">\n                    {[\"sla\", \"slo\", \"rpo\", \"rto\"].map((k) => (\n                        <div key={k}>\n                            <label className=\"block text-sm text-gray-600 mb-1 uppercase\">\n                                {k}\n                            </label>\n                            <input\n                                className=\"w-full rounded border px-3 py-2\"\n                                value={form.availability[k] || \"\"}\n                                onChange={(e) =>\n                                    onChange({\n                                        availability: {\n                                            ...form.availability,\n                                            [k]: e.target.value,\n                                        },\n                                    })\n                                }\n                            />\n                        </div>\n                    ))}\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Scaling</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Strategy\n                        </label>\n                        <select\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.scaling.strategy}\n                            onChange={(e) =>\n                                onChange({\n                                    scaling: { ...form.scaling, strategy: e.target.value },\n                                })\n                            }\n                        >\n                            <option>Horizontal</option>\n                            <option>Vertical</option>\n                            <option>Mixed</option>\n                        </select>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.scaling.autoScaling}\n                            onChange={(e) =>\n                                onChange({\n                                    scaling: { ...form.scaling, autoScaling: e.target.checked },\n                                })\n                            }\n                        />\n                        <span className=\"text-sm\">Enable autoscaling</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Notes</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.scaling.notes}\n                            onChange={(e) =>\n                                onChange({\n                                    scaling: { ...form.scaling, notes: e.target.value },\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </section>\n\n            {/* Decisions, Risks, Tags */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Architecture decisions (ADR)</h4>\n                <SimpleListEditor\n                    value={form.decisions}\n                    onChange={(v) => onChange({ decisions: v })}\n                    columns={[\n                        { key: \"date\", label: \"Date\" },\n                        { key: \"title\", label: \"Title\" },\n                        { key: \"status\", label: \"Status\" },\n                        { key: \"link\", label: \"Link\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Risks</h4>\n                <SimpleListEditor\n                    value={form.risks}\n                    onChange={(v) => onChange({ risks: v })}\n                    columns={[\n                        { key: \"risk\", label: \"Risk\" },\n                        { key: \"mitigation\", label: \"Mitigation\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Tags</h4>\n                <ChipInput\n                    value={form.tags || []}\n                    onChange={(v) => onChange({ tags: v })}\n                    placeholder=\"Add a tag and press Enter\"\n                />\n            </section>\n        </form>\n    );\n}\n","// src/features/projectHub/constants/databaseDefault.js\nconst databaseDefault = {\n    overview: \"\",\n\n    // One or more engines you use across environments\n    engines: [\n        { label: 'Primary OLTP', type: 'PostgreSQL', version: '15', host: '', port: 5432, dbName: '', user: '', url: '' }\n    ],\n\n    // Logical schemas/namespaces\n    schemas: [\n        { name: 'public', description: '' }\n    ],\n\n    // High-level entity registry (keep it practical; fields/indexes summarized)\n    entities: [\n        {\n            name: 'Task',\n            table: 'tasks',\n            description: 'User task items',\n            fields: [{ name: 'id', type: 'uuid', pk: true, nullable: false, default: '' }],\n            indexes: [{ name: 'tasks_pkey', columns: 'id', type: 'PRIMARY' }]\n        }\n    ],\n\n    // Foreign-key or conceptual relations\n    relationships: [\n        { from: 'tasks.project_id', to: 'projects.id', type: 'many-to-one', onDelete: 'cascade' }\n    ],\n\n    // Migrations/seeding\n    migrations: { tool: \"\", path: \"\", notes: \"\" },\n    seed: { strategy: \"idempotent scripts\", path: \"\" },\n\n    // Perf/scaling knobs\n    performance: {\n        poolMin: 0,\n        poolMax: 10,\n        timeoutMs: 10000,\n        readReplicas: 0,\n        partitioning: \"\",\n        sharding: \"\",\n        cachingLayer: \"\", // e.g., Redis\n    },\n\n    // Backups/retention\n    backups: {\n        enabled: true,\n        schedule: \"daily 02:00 UTC\",\n        retentionDays: 30,\n        location: \"\",\n        restoreTestCadence: \"monthly\",\n    },\n    dataRetention: [\n        { table: 'events', retention: '30d', policy: '' }\n    ],\n\n    // Security/compliance\n    security: {\n        atRest: true,\n        inTransit: true,\n        rowLevelSecurity: false,\n        accessModel: \"RBAC\",\n        piiTables: [\"users\"],\n    },\n\n    // Handy queries + incidents log\n    queriesOfInterest: [\n        { name: 'List tasks by project', sql: 'SELECT ...', notes: '' }\n    ],\n    incidents: [\n        { date: '2025-09-11', summary: 'Lock contention on tasks', actionItems: 'Add index on ...' }\n    ],\n\n    tags: [\"oltp\"],\n};\n\nexport default databaseDefault;\n","// src/features/projectHub/sections/Database.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\nimport databaseDefault from \"../constants/databaseDefault\";\n\n/* utilities */\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\nfunction SimpleListEditor({ value = [], onChange, columns }) {\n    const addEmpty = () =>\n        onChange([...value, Object.fromEntries(columns.map((c) => [c.key, \"\"]))]);\n    const set = (i, key, v) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], [key]: v };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        {columns.map((c) => (\n                            <th key={c.key} className=\"py-2 pr-3\">\n                                {c.label}\n                            </th>\n                        ))}\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            {columns.map((c) => (\n                                <td key={c.key} className=\"py-2 pr-3\">\n                                    <input\n                                        className=\"w-full rounded border px-2 py-1\"\n                                        value={row[c.key] || \"\"}\n                                        onChange={(e) => set(i, c.key, e.target.value)}\n                                    />\n                                </td>\n                            ))}\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={addEmpty}>Add</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/* a compact Entities editor\n   - fieldsString: \"id:uuid!, project_id:uuid, title:text\"\n   - indexesString: \"tasks_pkey(id), idx_tasks_project(project_id)\"\n*/\nfunction EntitiesEditor({ value = [], onChange }) {\n    const add = () =>\n        onChange([\n            ...value,\n            {\n                name: \"\",\n                table: \"\",\n                description: \"\",\n                fields: [],\n                indexes: [],\n            },\n        ]);\n\n    const toFieldsString = (fields = []) =>\n        fields\n            .map((f) => `${f.name}:${f.type}${f.nullable === false || f.pk ? \"!\" : \"\"}`)\n            .join(\", \");\n\n    const fromFieldsString = (s) =>\n        (s || \"\")\n            .split(\",\")\n            .map((x) => x.trim())\n            .filter(Boolean)\n            .map((pair) => {\n                const [n, tRaw] = pair.split(\":\").map((v) => (v || \"\").trim());\n                const req = (tRaw || \"\").endsWith(\"!\");\n                const type = req ? tRaw.slice(0, -1) : tRaw;\n                return { name: n, type, nullable: !req };\n            });\n\n    const toIndexesString = (idx = []) =>\n        idx\n            .map((i) => `${i.name}(${i.columns || \"\"})`)\n            .join(\", \");\n\n    const fromIndexesString = (s) =>\n        (s || \"\")\n            .split(\",\")\n            .map((x) => x.trim())\n            .filter(Boolean)\n            .map((chunk) => {\n                const name = chunk.split(\"(\")[0]?.trim();\n                const columns = chunk.match(/\\((.*)\\)/)?.[1]?.trim() || \"\";\n                return { name, columns, type: \"\" };\n            });\n\n    const setRow = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Entity</th>\n                        <th className=\"py-2 pr-3\">Table</th>\n                        <th className=\"py-2 pr-3\">Description</th>\n                        <th className=\"py-2 pr-3\">Fields</th>\n                        <th className=\"py-2 pr-3\">Indexes</th>\n                        <th className=\"py-2\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((e, i) => (\n                        <tr key={i} className=\"border-t align-top\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-40 rounded border px-2 py-1\"\n                                    value={e.name}\n                                    onChange={(ev) => setRow(i, { name: ev.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-40 rounded border px-2 py-1 font-mono\"\n                                    value={e.table}\n                                    onChange={(ev) => setRow(i, { table: ev.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-64 rounded border px-2 py-1\"\n                                    value={e.description || \"\"}\n                                    onChange={(ev) => setRow(i, { description: ev.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-72 rounded border px-2 py-1 font-mono\"\n                                    placeholder=\"id:uuid!, project_id:uuid, title:text\"\n                                    value={toFieldsString(e.fields)}\n                                    onChange={(ev) => setRow(i, { fields: fromFieldsString(ev.target.value) })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-72 rounded border px-2 py-1 font-mono\"\n                                    placeholder=\"tasks_pkey(id), idx_tasks_project(project_id)\"\n                                    value={toIndexesString(e.indexes)}\n                                    onChange={(ev) => setRow(i, { indexes: fromIndexesString(ev.target.value) })}\n                                />\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add entity</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/* ---------- main section ---------- */\nexport default function Database() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.database &&\n                typeof selected.sections.database === \"object\"\n                ? selected.sections.database\n                : databaseDefault,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\");\n    const [form, setForm] = useState(databaseDefault);\n\n    useEffect(() => {\n        setForm(saved || databaseDefault);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const onSave = () => {\n        updateSection(\"database\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage <strong>Database</strong>.\n            </div>\n        );\n    }\n\n    /* ---------- READ MODE ---------- */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Database</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Overview</h4>\n                    <p className=\"text-sm whitespace-pre-line\">{form.overview || \"—\"}</p>\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Engines</h4>\n                        {form.engines?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.engines.map((e, i) => (\n                                    <li key={i} className=\"break-words\">\n                                        <span className=\"font-medium\">{e.label || \"Engine\"}</span>{\" \"}\n                                        — {e.type || \"Type\"} {e.version ? `(${e.version})` : \"\"} —{\" \"}\n                                        {e.host || \"\"}{e.port ? `:${e.port}` : \"\"} {e.dbName ? `/${e.dbName}` : \"\"}\n                                        {e.url && (\n                                            <>\n                                                {\" \"}(\n                                                <a\n                                                    className=\"text-blue-700 hover:underline\"\n                                                    href={e.url}\n                                                    target=\"_blank\"\n                                                    rel=\"noreferrer\"\n                                                >\n                                                    url\n                                                </a>\n                                                )\n                                            </>\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Schemas</h4>\n                        {form.schemas?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.schemas.map((s, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{s.name || \"Schema\"}</span>{\" \"}\n                                        — {s.description || \"—\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Entities</h4>\n                    {form.entities?.length ? (\n                        <div className=\"overflow-auto\">\n                            <table className=\"min-w-full text-sm\">\n                                <thead>\n                                    <tr className=\"text-left text-gray-500\">\n                                        <th className=\"py-2 pr-3\">Entity</th>\n                                        <th className=\"py-2 pr-3\">Table</th>\n                                        <th className=\"py-2 pr-3\">Fields</th>\n                                        <th className=\"py-2 pr-3\">Indexes</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {form.entities.map((e, i) => (\n                                        <tr key={i} className=\"border-t align-top\">\n                                            <td className=\"py-2 pr-3\">\n                                                <span className=\"font-medium\">{e.name || \"—\"}</span>\n                                                <div className=\"text-gray-500\">{e.description || \"\"}</div>\n                                            </td>\n                                            <td className=\"py-2 pr-3 font-mono\">{e.table || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">\n                                                {(e.fields || []).length\n                                                    ? e.fields.map((f) => `${f.name}:${f.type}${f.nullable === false || f.pk ? \"!\" : \"\"}`).join(\", \")\n                                                    : \"—\"}\n                                            </td>\n                                            <td className=\"py-2 pr-3\">\n                                                {(e.indexes || []).length\n                                                    ? e.indexes.map((ix) => `${ix.name}(${ix.columns})`).join(\", \")\n                                                    : \"—\"}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Relationships</h4>\n                    {form.relationships?.length ? (\n                        <ul className=\"text-sm list-disc pl-5\">\n                            {form.relationships.map((r, i) => (\n                                <li key={i}>\n                                    {r.from || \"?\"} → {r.to || \"?\"} ({r.type || \"relation\"}){\" \"}\n                                    {r.onDelete ? `onDelete=${r.onDelete}` : \"\"}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Backups</h4>\n                        <ul className=\"text-sm\">\n                            <li>Enabled: {form.backups.enabled ? \"Yes\" : \"No\"}</li>\n                            <li>Schedule: {form.backups.schedule || \"—\"}</li>\n                            <li>Retention: {form.backups.retentionDays || \"—\"} days</li>\n                            <li>Location: {form.backups.location || \"—\"}</li>\n                            <li>Restore tests: {form.backups.restoreTestCadence || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Performance</h4>\n                        <ul className=\"text-sm\">\n                            <li>Pool: {form.performance.poolMin}-{form.performance.poolMax}</li>\n                            <li>Timeout: {form.performance.timeoutMs} ms</li>\n                            <li>Read replicas: {form.performance.readReplicas}</li>\n                            <li>Partitioning: {form.performance.partitioning || \"—\"}</li>\n                            <li>Sharding: {form.performance.sharding || \"—\"}</li>\n                            <li>Caching: {form.performance.cachingLayer || \"—\"}</li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Security</h4>\n                        <ul className=\"text-sm\">\n                            <li>At rest: {form.security.atRest ? \"Yes\" : \"No\"}</li>\n                            <li>In transit: {form.security.inTransit ? \"Yes\" : \"No\"}</li>\n                            <li>RLS: {form.security.rowLevelSecurity ? \"Enabled\" : \"Disabled\"}</li>\n                            <li>Access model: {form.security.accessModel || \"—\"}</li>\n                            <li>PII tables: {(form.security.piiTables || []).join(\", \") || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Data retention</h4>\n                        {form.dataRetention?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.dataRetention.map((r, i) => (\n                                    <li key={i}>\n                                        {r.table || \"table\"} — {r.retention || \"—\"} {r.policy ? `(${r.policy})` : \"\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Queries of interest</h4>\n                    {form.queriesOfInterest?.length ? (\n                        <ul className=\"text-sm space-y-3\">\n                            {form.queriesOfInterest.map((q, i) => (\n                                <li key={i}>\n                                    <div className=\"font-medium\">{q.name || \"Query\"}</div>\n                                    <pre className=\"bg-gray-50 rounded p-2 text-xs overflow-auto\">\n                                        {q.sql || \"\"}\n                                    </pre>\n                                    {q.notes && <div className=\"text-gray-500 text-xs mt-1\">{q.notes}</div>}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Migrations</h4>\n                        <ul className=\"text-sm\">\n                            <li>Tool: {form.migrations.tool || \"—\"}</li>\n                            <li>Path: {form.migrations.path || \"—\"}</li>\n                            <li>Notes: {form.migrations.notes || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Incidents</h4>\n                        {form.incidents?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.incidents.map((r, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{r.date || \"date\"}</span> — {r.summary || \"—\"}\n                                        {r.actionItems ? ` (actions: ${r.actionItems})` : \"\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Tags</h4>\n                    {(form.tags || []).length ? (\n                        <div className=\"flex flex-wrap gap-2\">\n                            {form.tags.map((t) => (\n                                <span key={t} className=\"px-2 py-1 rounded bg-gray-100 text-xs\">\n                                    {t}\n                                </span>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /* ---------- EDIT MODE ---------- */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Database</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button type=\"submit\" className=\"px-3 py-2 rounded bg-blue-600 text-white\">\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={3}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"High-level DB strategy, OLTP/OLAP split, multi-tenant notes…\"\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Engines</h4>\n                <SimpleListEditor\n                    value={form.engines}\n                    onChange={(v) => onChange({ engines: v })}\n                    columns={[\n                        { key: \"label\", label: \"Label\" },\n                        { key: \"type\", label: \"Type\" },\n                        { key: \"version\", label: \"Version\" },\n                        { key: \"host\", label: \"Host\" },\n                        { key: \"port\", label: \"Port\" },\n                        { key: \"dbName\", label: \"DB\" },\n                        { key: \"user\", label: \"User\" },\n                        { key: \"url\", label: \"URL\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Schemas</h4>\n                <SimpleListEditor\n                    value={form.schemas}\n                    onChange={(v) => onChange({ schemas: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"description\", label: \"Description\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Entities</h4>\n                <EntitiesEditor\n                    value={form.entities}\n                    onChange={(v) => onChange({ entities: v })}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Relationships</h4>\n                <SimpleListEditor\n                    value={form.relationships}\n                    onChange={(v) => onChange({ relationships: v })}\n                    columns={[\n                        { key: \"from\", label: \"From\" },\n                        { key: \"to\", label: \"To\" },\n                        { key: \"type\", label: \"Type\" },\n                        { key: \"onDelete\", label: \"onDelete\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Migrations</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Tool</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.migrations.tool}\n                            onChange={(e) => onChange({ migrations: { ...form.migrations, tool: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Path</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.migrations.path}\n                            onChange={(e) => onChange({ migrations: { ...form.migrations, path: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Notes</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.migrations.notes}\n                            onChange={(e) => onChange({ migrations: { ...form.migrations, notes: e.target.value } })}\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Performance</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Pool min</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.poolMin}\n                            onChange={(e) => onChange({ performance: { ...form.performance, poolMin: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Pool max</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.poolMax}\n                            onChange={(e) => onChange({ performance: { ...form.performance, poolMax: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Timeout (ms)</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.timeoutMs}\n                            onChange={(e) => onChange({ performance: { ...form.performance, timeoutMs: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Read replicas</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.readReplicas}\n                            onChange={(e) => onChange({ performance: { ...form.performance, readReplicas: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Partitioning</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.partitioning}\n                            onChange={(e) => onChange({ performance: { ...form.performance, partitioning: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Sharding</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.sharding}\n                            onChange={(e) => onChange({ performance: { ...form.performance, sharding: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Caching layer</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.cachingLayer}\n                            onChange={(e) => onChange({ performance: { ...form.performance, cachingLayer: e.target.value } })}\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Backups</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.backups.enabled}\n                            onChange={(e) => onChange({ backups: { ...form.backups, enabled: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Enabled</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Schedule</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.schedule}\n                            onChange={(e) => onChange({ backups: { ...form.backups, schedule: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Retention (days)</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.retentionDays}\n                            onChange={(e) => onChange({ backups: { ...form.backups, retentionDays: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Location</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.location}\n                            onChange={(e) => onChange({ backups: { ...form.backups, location: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Restore test cadence</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.restoreTestCadence}\n                            onChange={(e) => onChange({ backups: { ...form.backups, restoreTestCadence: e.target.value } })}\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Data retention</h4>\n                <SimpleListEditor\n                    value={form.dataRetention}\n                    onChange={(v) => onChange({ dataRetention: v })}\n                    columns={[\n                        { key: \"table\", label: \"Table\" },\n                        { key: \"retention\", label: \"Retention\" },\n                        { key: \"policy\", label: \"Policy/notes\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Security</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.atRest}\n                            onChange={(e) => onChange({ security: { ...form.security, atRest: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Encryption at rest</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.inTransit}\n                            onChange={(e) => onChange({ security: { ...form.security, inTransit: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Encryption in transit</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.rowLevelSecurity}\n                            onChange={(e) => onChange({ security: { ...form.security, rowLevelSecurity: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Row-level security</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Access model</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.accessModel}\n                            onChange={(e) => onChange({ security: { ...form.security, accessModel: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-2\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">PII tables</label>\n                        <ChipInput\n                            value={form.security.piiTables || []}\n                            onChange={(v) => onChange({ security: { ...form.security, piiTables: v } })}\n                            placeholder=\"Add table and press Enter\"\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Queries of interest</h4>\n                <SimpleListEditor\n                    value={form.queriesOfInterest}\n                    onChange={(v) => onChange({ queriesOfInterest: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"sql\", label: \"SQL\" },\n                        { key: \"notes\", label: \"Notes\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Incidents</h4>\n                <SimpleListEditor\n                    value={form.incidents}\n                    onChange={(v) => onChange({ incidents: v })}\n                    columns={[\n                        { key: \"date\", label: \"Date\" },\n                        { key: \"summary\", label: \"Summary\" },\n                        { key: \"actionItems\", label: \"Action items\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Tags</h4>\n                <ChipInput\n                    value={form.tags || []}\n                    onChange={(v) => onChange({ tags: v })}\n                    placeholder=\"Add a tag and press Enter\"\n                />\n            </section>\n        </form>\n    );\n}\n","import React from 'react';\n\nexport default function MarkdownEditor({ value, onChange, placeholder }) {\n    return (\n        <textarea\n            value={value}\n            onChange={(e) => onChange?.(e.target.value)}\n            placeholder={placeholder}\n            className=\"w-full min-h-[220px] border rounded p-3 focus:outline-none\"\n        />\n    );\n}\n","import React from 'react';\nimport { marked } from 'marked';\n\n// Force links to open in new tab\nconst renderer = new marked.Renderer();\nrenderer.link = (href, title, text) => {\n    const t = title ? ` title=\"${title}\"` : '';\n    return `<a href=\"${href}\"${t} target=\"_blank\" rel=\"noopener noreferrer\">${text}</a>`;\n};\nmarked.setOptions({ breaks: true });\n\nexport default function MarkdownView({ text }) {\n    const html = marked.parse(text || '', { renderer });\n    return <div className=\"prose max-w-none\" dangerouslySetInnerHTML={{ __html: html }} />;\n}\n","import React, { useState, useEffect } from 'react';\nimport useProjectHub from '../../../hooks/useProjectHub';\nimport MarkdownEditor from '../components/MarkdownEditor';\nimport MarkdownView from '../components/MarkdownView';\n\nexport default function MarkdownSectionBase({ sectionKey, placeholder }) {\n    const { selected, updateSection } = useProjectHub();\n    const [mode, setMode] = useState('read');\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        setText(selected?.sections?.[sectionKey] || '');\n    }, [selected, sectionKey]);\n\n    const onSave = () => {\n        updateSection(sectionKey, text);\n        setMode('read');\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to edit this section.\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"space-y-3\">\n            <div className=\"flex items-center gap-2\">\n                <div className=\"ml-auto flex gap-2\">\n                    {mode === 'read' ? (\n                        <button onClick={() => setMode('edit')} className=\"px-3 py-2 rounded bg-gray-200\">Edit</button>\n                    ) : (\n                        <>\n                            <button onClick={() => setMode('read')} className=\"px-3 py-2 rounded bg-gray-200\">Cancel</button>\n                            <button onClick={onSave} className=\"px-3 py-2 rounded bg-blue-600 text-white\">Save</button>\n                        </>\n                    )}\n                </div>\n            </div>\n\n            {mode === 'read' ? (\n                text?.trim() ? (\n                    <div className=\"rounded border bg-white p-4\">\n                        <MarkdownView text={text} />\n                    </div>\n                ) : (\n                    <div className=\"rounded-lg border bg-white p-8 text-gray-500\">\n                        Nothing here yet. Click <strong>Edit</strong> to add content.\n                    </div>\n                )\n            ) : (\n                <MarkdownEditor value={text} onChange={setText} placeholder={placeholder} />\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\n\n/** ---------- defaults (kept local for this section) ---------- */\nconst defaultLinks = {\n    overview: \"\",\n    bookmarks: [\n        { label: 'Production', url: 'https://app.example.com', notes: '' }\n    ],\n    // Curated groups you’ll likely use; you can rename / add / remove in edit mode\n    categories: [\n        { name: \"Repositories\", links: [] },\n        { name: \"Documentation\", links: [] },\n        { name: \"Design\", links: [] },\n        { name: \"Monitoring\", links: [] },\n        { name: \"Dashboards\", links: [] },\n        { name: \"Services / Vendors\", links: [] },\n        { name: \"Environments\", links: [] },\n    ],\n    tags: [],\n};\n\n/** ---------- small reusable bits for this file ---------- */\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\nfunction TableEditor({ value = [], onChange, columns }) {\n    const addEmpty = () =>\n        onChange([...value, Object.fromEntries(columns.map((c) => [c.key, \"\"]))]);\n\n    const set = (i, key, v) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], [key]: v };\n        onChange(copy);\n    };\n\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        {columns.map((c) => (\n                            <th key={c.key} className=\"py-2 pr-3\">\n                                {c.label}\n                            </th>\n                        ))}\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            {columns.map((c) => (\n                                <td key={c.key} className=\"py-2 pr-3\">\n                                    <input\n                                        className=\"w-full rounded border px-2 py-1\"\n                                        value={row[c.key] || \"\"}\n                                        onChange={(e) => set(i, c.key, e.target.value)}\n                                        placeholder={c.placeholder}\n                                    />\n                                </td>\n                            ))}\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={addEmpty}>Add</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/** ---------- main component ---------- */\nexport default function Links() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.links && typeof selected.sections.links === \"object\"\n                ? selected.sections.links\n                : defaultLinks,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\"); // 'read' | 'edit'\n    const [form, setForm] = useState(defaultLinks);\n\n    useEffect(() => {\n        setForm(saved || defaultLinks);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const onSave = () => {\n        updateSection(\"links\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage <strong>Links</strong>.\n            </div>\n        );\n    }\n\n    /** ---------- READ MODE ---------- */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Links</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                {/* Overview */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Overview</h4>\n                    <p className=\"text-sm whitespace-pre-line\">\n                        {form.overview || \"—\"}\n                    </p>\n                </div>\n\n                {/* Quick bookmarks */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Quick bookmarks</h4>\n                    {form.bookmarks?.length ? (\n                        <ul className=\"text-sm space-y-2\">\n                            {form.bookmarks.map((b, i) => (\n                                <li key={i} className=\"break-words\">\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={b.url || \"#\"}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {b.label || b.url || \"Link\"}\n                                    </a>\n                                    {b.notes ? <span className=\"text-gray-500\"> — {b.notes}</span> : null}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                {/* Grouped categories */}\n                <div className=\"space-y-6\">\n                    {form.categories?.map((cat, idx) => (\n                        <div key={idx} className=\"rounded border bg-white p-4\">\n                            <h4 className=\"font-semibold mb-2\">{cat.name || \"Category\"}</h4>\n                            {cat.links?.length ? (\n                                <ul className=\"text-sm space-y-2\">\n                                    {cat.links.map((l, i) => (\n                                        <li key={i} className=\"break-words\">\n                                            <a\n                                                className=\"text-blue-700 hover:underline\"\n                                                href={l.url || \"#\"}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                {l.label || l.url || \"Link\"}\n                                            </a>\n                                            {l.notes ? (\n                                                <span className=\"text-gray-500\"> — {l.notes}</span>\n                                            ) : null}\n                                        </li>\n                                    ))}\n                                </ul>\n                            ) : (\n                                <p className=\"text-sm text-gray-500\">—</p>\n                            )}\n                        </div>\n                    ))}\n                </div>\n\n                {/* Tags */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Tags</h4>\n                    {(form.tags || []).length ? (\n                        <div className=\"flex flex-wrap gap-2\">\n                            {form.tags.map((t) => (\n                                <span key={t} className=\"px-2 py-1 rounded bg-gray-100 text-xs\">\n                                    {t}\n                                </span>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /** ---------- EDIT MODE ---------- */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Links</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button\n                        type=\"submit\"\n                        className=\"px-3 py-2 rounded bg-blue-600 text-white\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            {/* Overview */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={3}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"What belongs here? e.g., where to find repos, docs, dashboards, service consoles…\"\n                />\n            </section>\n\n            {/* Bookmarks */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Quick bookmarks</h4>\n                <TableEditor\n                    value={form.bookmarks}\n                    onChange={(v) => onChange({ bookmarks: v })}\n                    columns={[\n                        { key: \"label\", label: \"Label\", placeholder: \"Production\" },\n                        { key: \"url\", label: \"URL\", placeholder: \"https://…\" },\n                        { key: \"notes\", label: \"Notes\", placeholder: \"What is this?\" },\n                    ]}\n                />\n            </section>\n\n            {/* Categories */}\n            <section className=\"rounded border bg-white p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                    <h4 className=\"font-semibold\">Categories</h4>\n                    <RowBtn\n                        onClick={() =>\n                            onChange({\n                                categories: [...(form.categories || []), { name: \"\", links: [] }],\n                            })\n                        }\n                    >\n                        Add category\n                    </RowBtn>\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    {(form.categories || []).map((cat, ci) => {\n                        const setCat = (patch) => {\n                            const copy = [...form.categories];\n                            copy[ci] = { ...copy[ci], ...patch };\n                            onChange({ categories: copy });\n                        };\n                        const addLink = () =>\n                            setCat({\n                                links: [\n                                    ...(cat.links || []),\n                                    { label: \"\", url: \"\", notes: \"\" },\n                                ],\n                            });\n                        const setLink = (i, patch) => {\n                            const links = [...(cat.links || [])];\n                            links[i] = { ...links[i], ...patch };\n                            setCat({ links });\n                        };\n                        const removeLink = (i) =>\n                            setCat({ links: (cat.links || []).filter((_, idx) => idx !== i) });\n\n                        return (\n                            <div key={ci} className=\"rounded border p-4\">\n                                <div className=\"flex items-center justify-between mb-3\">\n                                    <input\n                                        className=\"w-64 rounded border px-2 py-1 font-semibold\"\n                                        value={cat.name}\n                                        onChange={(e) => setCat({ name: e.target.value })}\n                                        placeholder=\"Category name (e.g., Repositories)\"\n                                    />\n                                    <RowBtn\n                                        onClick={() =>\n                                            onChange({\n                                                categories: form.categories.filter((_, i) => i !== ci),\n                                            })\n                                        }\n                                    >\n                                        Remove\n                                    </RowBtn>\n                                </div>\n\n                                {(cat.links || []).length === 0 ? (\n                                    <button\n                                        type=\"button\"\n                                        onClick={addLink}\n                                        className=\"text-sm text-blue-700 hover:underline\"\n                                    >\n                                        Add first link\n                                    </button>\n                                ) : (\n                                    <div className=\"space-y-3\">\n                                        {(cat.links || []).map((l, li) => (\n                                            <div key={li} className=\"grid md:grid-cols-3 gap-2\">\n                                                <input\n                                                    className=\"rounded border px-2 py-1\"\n                                                    value={l.label}\n                                                    onChange={(e) => setLink(li, { label: e.target.value })}\n                                                    placeholder=\"Label (e.g., Frontend)\"\n                                                />\n                                                <input\n                                                    className=\"rounded border px-2 py-1\"\n                                                    value={l.url}\n                                                    onChange={(e) => setLink(li, { url: e.target.value })}\n                                                    placeholder=\"https://…\"\n                                                />\n                                                <div className=\"flex gap-2\">\n                                                    <input\n                                                        className=\"flex-1 rounded border px-2 py-1\"\n                                                        value={l.notes || \"\"}\n                                                        onChange={(e) => setLink(li, { notes: e.target.value })}\n                                                        placeholder=\"Notes (optional)\"\n                                                    />\n                                                    <RowBtn onClick={() => removeLink(li)}>Remove</RowBtn>\n                                                </div>\n                                            </div>\n                                        ))}\n                                        <RowBtn onClick={addLink}>Add link</RowBtn>\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </section>\n\n            {/* Tags */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Tags</h4>\n                <ChipInput\n                    value={form.tags || []}\n                    onChange={(v) => onChange({ tags: v })}\n                    placeholder=\"Add a tag and press Enter\"\n                />\n            </section>\n        </form>\n    );\n}\n","// Default structure for a deployment guide across environments.\n// Tweak engines/tools to match your stack.\n\nconst defaultDeploymentGuide = {\n    overview:\n        \"How we build, ship, verify, and roll back the app across environments.\",\n\n    global: {\n        repository: \"\",\n        pipeline: \"\",                 // e.g. GitHub Actions workflow name\n        artifactRegistry: \"\",         // e.g. GHCR / ECR / GCR\n        runtimeNotes: \"Node 20 / Python 3.11\",\n        onCallContact: \"\",            // name/email/slack\n    },\n\n    environments: [\n        {\n            key: \"dev\",\n            label: \"Development\",\n            domains: { app: \"\", api: \"\" },\n\n            frontend: {\n                buildCmd: \"npm ci && npm run build\",\n                artifact: \"\",             // e.g. s3://bucket/app-dev-<sha>.zip\n                container: { image: \"\", tag: \"latest\", registry: \"\" },\n                deployCmd: \"npx wrangler pages deploy ./dist\",\n                cdn: \"Cloudflare\",\n                notes: \"\",\n            },\n\n            backend: {\n                runtime: \"FastAPI / Uvicorn\",\n                buildCmd: \"poetry install && poetry build\",\n                container: { image: \"\", tag: \"latest\", registry: \"\" },\n                migrationsCmd: \"alembic upgrade head\",\n                deployCmd: \"kubectl apply -f k8s/dev\",\n                notes: \"\",\n            },\n\n            database: {\n                engine: \"PostgreSQL\",\n                version: \"\",\n                host: \"\",\n                name: \"\",\n                user: \"\",\n                migrationTool: \"Alembic\",\n                backupPolicy: \"Daily (7 days)\",\n                readReplicas: false,\n                notes: \"\",\n            },\n\n            envVars: [\n                { key: \"APP_URL\", value: \"\", secret: false },\n                { key: \"API_URL\", value: \"\", secret: false },\n            ],\n\n            preChecks: [\n                \"CI pipeline green\",\n                \"No critical open incidents\",\n            ],\n            postChecks: [\n                \"Basic smoke tests pass\",\n                \"Error rate < 1% for 10 min\",\n            ],\n\n            rollback: {\n                strategy: \"Re-deploy previous image tag\",\n                command: \"\",\n                notes: \"\",\n            },\n        },\n\n        {\n            key: \"staging\",\n            label: \"Staging\",\n            domains: { app: \"\", api: \"\" },\n\n            frontend: {\n                buildCmd: \"npm ci && npm run build\",\n                artifact: \"\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                deployCmd: \"aws s3 sync dist s3://my-site-staging\",\n                cdn: \"CloudFront\",\n                notes: \"\",\n            },\n\n            backend: {\n                runtime: \"FastAPI / Uvicorn\",\n                buildCmd: \"poetry install && poetry build\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                migrationsCmd: \"alembic upgrade head\",\n                deployCmd: \"kubectl apply -f k8s/staging\",\n                notes: \"\",\n            },\n\n            database: {\n                engine: \"PostgreSQL\",\n                version: \"\",\n                host: \"\",\n                name: \"\",\n                user: \"\",\n                migrationTool: \"Alembic\",\n                backupPolicy: \"Daily (14 days)\",\n                readReplicas: true,\n                notes: \"\",\n            },\n\n            envVars: [\n                { key: \"APP_URL\", value: \"\", secret: false },\n                { key: \"API_URL\", value: \"\", secret: false },\n            ],\n\n            preChecks: [\n                \"Staging parity with prod (schema/flags)\",\n                \"Change request approved\",\n            ],\n            postChecks: [\n                \"QA smoke tests pass\",\n                \"Synthetic checks green\",\n            ],\n\n            rollback: {\n                strategy: \"Previous image tag / DB restore (if needed)\",\n                command: \"\",\n                notes: \"\",\n            },\n        },\n\n        {\n            key: \"prod\",\n            label: \"Production\",\n            domains: { app: \"\", api: \"\" },\n\n            frontend: {\n                buildCmd: \"npm ci && npm run build\",\n                artifact: \"\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                deployCmd: \"aws s3 sync dist s3://my-site-prod --delete\",\n                cdn: \"CloudFront\",\n                notes: \"Invalidate CDN after deploy.\",\n            },\n\n            backend: {\n                runtime: \"FastAPI / Uvicorn (HA)\",\n                buildCmd: \"poetry install && poetry build\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                migrationsCmd: \"alembic upgrade head\",\n                deployCmd: \"kubectl rollout restart deploy/api -n prod\",\n                notes: \"Blue/green or canary preferred.\",\n            },\n\n            database: {\n                engine: \"PostgreSQL (managed)\",\n                version: \"\",\n                host: \"\",\n                name: \"\",\n                user: \"\",\n                migrationTool: \"Alembic\",\n                backupPolicy: \"Point-in-time, 30 days\",\n                readReplicas: true,\n                notes: \"\",\n            },\n\n            envVars: [\n                { key: \"APP_URL\", value: \"\", secret: false },\n                { key: \"API_URL\", value: \"\", secret: false },\n            ],\n\n            preChecks: [\n                \"Change freeze respected\",\n                \"SLOs healthy\",\n                \"On-call aware\",\n            ],\n            postChecks: [\n                \"Business smoke tests pass\",\n                \"No alert spikes\",\n                \"CDN cache invalidation completed\",\n            ],\n\n            rollback: {\n                strategy: \"Rollback to previous deployment revision\",\n                command: \"kubectl rollout undo deploy/api -n prod\",\n                notes: \"If schema changed, run down migration cautiously.\",\n            },\n        },\n    ],\n};\n\nexport default defaultDeploymentGuide;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\nimport defaultDeploymentGuide from \"../constants/defaultDeploymentGuide\";\n\n/* Local tiny helpers (kept simple & self-contained) */\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\nfunction EnvVarTable({ value = [], onChange }) {\n    const set = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const add = () =>\n        onChange([...value, { key: \"\", value: \"\", secret: false }]);\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Key</th>\n                        <th className=\"py-2 pr-3\">Value</th>\n                        <th className=\"py-2 pr-3\">Secret</th>\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1 font-mono\"\n                                    value={row.key}\n                                    onChange={(e) => set(i, { key: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1 font-mono\"\n                                    value={row.value}\n                                    onChange={(e) => set(i, { value: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={row.secret ? \"yes\" : \"no\"}\n                                    onChange={(e) => set(i, { secret: e.target.value === \"yes\" })}\n                                >\n                                    <option value=\"no\">No</option>\n                                    <option value=\"yes\">Yes</option>\n                                </select>\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add variable</RowBtn>\n            </div>\n        </div>\n    );\n}\n\nexport default function Deployment() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.deployment &&\n                typeof selected.sections.deployment === \"object\"\n                ? selected.sections.deployment\n                : defaultDeploymentGuide,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\");\n    const [form, setForm] = useState(defaultDeploymentGuide);\n\n    useEffect(() => {\n        setForm(saved || defaultDeploymentGuide);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const setEnv = (key, patch) =>\n        onChange({\n            environments: form.environments.map((e) =>\n                e.key === key ? { ...e, ...patch } : e\n            ),\n        });\n\n    const onSave = () => {\n        updateSection(\"deployment\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage the{\" \"}\n                <strong>Deployment guide</strong>.\n            </div>\n        );\n    }\n\n    /* READ MODE */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Deployment guide</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Overview</h4>\n                    <p className=\"text-sm whitespace-pre-line\">\n                        {form.overview || \"—\"}\n                    </p>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Global</h4>\n                    <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n                        <dt className=\"text-gray-500\">Repository</dt>\n                        <dd className=\"col-span-2 break-all\">\n                            {form.global.repository ? (\n                                <a\n                                    className=\"text-blue-700 hover:underline\"\n                                    href={form.global.repository}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    {form.global.repository}\n                                </a>\n                            ) : (\n                                \"—\"\n                            )}\n                        </dd>\n                        <dt className=\"text-gray-500\">Pipeline</dt>\n                        <dd className=\"col-span-2\">{form.global.pipeline || \"—\"}</dd>\n                        <dt className=\"text-gray-500\">Artifact registry</dt>\n                        <dd className=\"col-span-2\">\n                            {form.global.artifactRegistry || \"—\"}\n                        </dd>\n                        <dt className=\"text-gray-500\">Runtime</dt>\n                        <dd className=\"col-span-2\">{form.global.runtimeNotes || \"—\"}</dd>\n                        <dt className=\"text-gray-500\">On-call</dt>\n                        <dd className=\"col-span-2\">{form.global.onCallContact || \"—\"}</dd>\n                    </dl>\n                </div>\n\n                {/* Environments */}\n                {form.environments.map((env) => (\n                    <div key={env.key} className=\"rounded border bg-white p-4 space-y-4\">\n                        <h4 className=\"font-semibold text-lg\">{env.label}</h4>\n\n                        <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div className=\"rounded border p-3\">\n                                <div className=\"text-xs text-gray-500 mb-1\">App URL</div>\n                                <div className=\"break-all\">\n                                    {env.domains.app ? (\n                                        <a\n                                            className=\"text-blue-700 hover:underline\"\n                                            href={env.domains.app}\n                                            target=\"_blank\"\n                                            rel=\"noreferrer\"\n                                        >\n                                            {env.domains.app}\n                                        </a>\n                                    ) : (\n                                        \"—\"\n                                    )}\n                                </div>\n                                <div className=\"text-xs text-gray-500 mt-2 mb-1\">API URL</div>\n                                <div className=\"break-all\">\n                                    {env.domains.api ? (\n                                        <a\n                                            className=\"text-blue-700 hover:underline\"\n                                            href={env.domains.api}\n                                            target=\"_blank\"\n                                            rel=\"noreferrer\"\n                                        >\n                                            {env.domains.api}\n                                        </a>\n                                    ) : (\n                                        \"—\"\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Frontend</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Build</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.frontend.buildCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Deploy</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.frontend.deployCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">CDN</dt>\n                                    <dd className=\"col-span-2\">{env.frontend.cdn || \"—\"}</dd>\n                                </dl>\n                                {env.frontend.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.frontend.notes}</p>\n                                ) : null}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Backend</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Runtime</dt>\n                                    <dd className=\"col-span-2\">{env.backend.runtime || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Build</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.backend.buildCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Migrations</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.backend.migrationsCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Deploy</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.backend.deployCmd || \"—\"}\n                                    </dd>\n                                </dl>\n                                {env.backend.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.backend.notes}</p>\n                                ) : null}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Database</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Engine</dt>\n                                    <dd className=\"col-span-2\">{env.database.engine || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Host</dt>\n                                    <dd className=\"col-span-2 break-all\">\n                                        {env.database.host || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Name</dt>\n                                    <dd className=\"col-span-2\">{env.database.name || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Backups</dt>\n                                    <dd className=\"col-span-2\">\n                                        {env.database.backupPolicy || \"—\"}\n                                    </dd>\n                                </dl>\n                                {env.database.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.database.notes}</p>\n                                ) : null}\n                            </div>\n                        </div>\n\n                        <div className=\"rounded border p-3\">\n                            <div className=\"font-semibold mb-2\">Environment variables</div>\n                            {env.envVars?.length ? (\n                                <div className=\"overflow-auto\">\n                                    <table className=\"min-w-full text-sm\">\n                                        <thead>\n                                            <tr className=\"text-left text-gray-500\">\n                                                <th className=\"py-2 pr-3\">Key</th>\n                                                <th className=\"py-2 pr-3\">Value</th>\n                                                <th className=\"py-2 pr-3\">Secret</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {env.envVars.map((v, i) => (\n                                                <tr key={i} className=\"border-t\">\n                                                    <td className=\"py-2 pr-3 font-mono\">{v.key || \"—\"}</td>\n                                                    <td className=\"py-2 pr-3 font-mono\">{v.value || \"—\"}</td>\n                                                    <td className=\"py-2 pr-3\">{v.secret ? \"Yes\" : \"No\"}</td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            ) : (\n                                <p className=\"text-sm text-gray-500\">—</p>\n                            )}\n                        </div>\n\n                        <div className=\"grid md:grid-cols-3 gap-4\">\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Pre-deployment checks</div>\n                                {(env.preChecks || []).length ? (\n                                    <ul className=\"list-disc list-inside text-sm space-y-1\">\n                                        {env.preChecks.map((c, i) => (\n                                            <li key={i}>{c}</li>\n                                        ))}\n                                    </ul>\n                                ) : (\n                                    <p className=\"text-sm text-gray-500\">—</p>\n                                )}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Post-deployment checks</div>\n                                {(env.postChecks || []).length ? (\n                                    <ul className=\"list-disc list-inside text-sm space-y-1\">\n                                        {env.postChecks.map((c, i) => (\n                                            <li key={i}>{c}</li>\n                                        ))}\n                                    </ul>\n                                ) : (\n                                    <p className=\"text-sm text-gray-500\">—</p>\n                                )}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Rollback</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Strategy</dt>\n                                    <dd className=\"col-span-2\">{env.rollback.strategy || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Command</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.rollback.command || \"—\"}\n                                    </dd>\n                                </dl>\n                                {env.rollback.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.rollback.notes}</p>\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n            </div>\n        );\n    }\n\n    /* EDIT MODE */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Deployment guide</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button type=\"submit\" className=\"px-3 py-2 rounded bg-blue-600 text-white\">\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={3}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"Summarize how we deploy, verify, and roll back.\"\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Global</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Repository URL\"\n                        value={form.global.repository}\n                        onChange={(e) => onChange({ global: { ...form.global, repository: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Pipeline (e.g. GH Actions workflow)\"\n                        value={form.global.pipeline}\n                        onChange={(e) => onChange({ global: { ...form.global, pipeline: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Artifact registry\"\n                        value={form.global.artifactRegistry}\n                        onChange={(e) => onChange({ global: { ...form.global, artifactRegistry: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Runtime notes\"\n                        value={form.global.runtimeNotes}\n                        onChange={(e) => onChange({ global: { ...form.global, runtimeNotes: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2 md:col-span-2\"\n                        placeholder=\"On-call contact (name/email/slack)\"\n                        value={form.global.onCallContact}\n                        onChange={(e) => onChange({ global: { ...form.global, onCallContact: e.target.value } })}\n                    />\n                </div>\n            </section>\n\n            {form.environments.map((env) => (\n                <section key={env.key} className=\"rounded border bg-white p-4 space-y-4\">\n                    <h4 className=\"font-semibold text-lg\">{env.label}</h4>\n\n                    {/* URLs */}\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                        <input\n                            className=\"rounded border px-3 py-2\"\n                            placeholder=\"App URL\"\n                            value={env.domains.app}\n                            onChange={(e) => setEnv(env.key, { domains: { ...env.domains, app: e.target.value } })}\n                        />\n                        <input\n                            className=\"rounded border px-3 py-2\"\n                            placeholder=\"API URL\"\n                            value={env.domains.api}\n                            onChange={(e) => setEnv(env.key, { domains: { ...env.domains, api: e.target.value } })}\n                        />\n                    </div>\n\n                    {/* Frontend */}\n                    <div className=\"rounded border p-3 space-y-2\">\n                        <div className=\"font-semibold\">Frontend</div>\n                        <div className=\"grid md:grid-cols-2 gap-3\">\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Build command\"\n                                value={env.frontend.buildCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, buildCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Deploy command\"\n                                value={env.frontend.deployCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, deployCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Artifact (optional)\"\n                                value={env.frontend.artifact}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, artifact: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"CDN (optional)\"\n                                value={env.frontend.cdn}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, cdn: e.target.value } })\n                                }\n                            />\n                            <textarea\n                                rows={2}\n                                className=\"md:col-span-2 rounded border px-3 py-2\"\n                                placeholder=\"Notes\"\n                                value={env.frontend.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n\n                    {/* Backend */}\n                    <div className=\"rounded border p-3 space-y-2\">\n                        <div className=\"font-semibold\">Backend</div>\n                        <div className=\"grid md:grid-cols-2 gap-3\">\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Runtime (e.g. FastAPI / Uvicorn)\"\n                                value={env.backend.runtime}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, runtime: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Build command\"\n                                value={env.backend.buildCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, buildCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Migrations command\"\n                                value={env.backend.migrationsCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, migrationsCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Deploy command\"\n                                value={env.backend.deployCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, deployCmd: e.target.value } })\n                                }\n                            />\n                            <textarea\n                                rows={2}\n                                className=\"md:col-span-2 rounded border px-3 py-2\"\n                                placeholder=\"Notes\"\n                                value={env.backend.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n\n                    {/* Database */}\n                    <div className=\"rounded border p-3 space-y-2\">\n                        <div className=\"font-semibold\">Database</div>\n                        <div className=\"grid md:grid-cols-2 gap-3\">\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Engine (e.g. PostgreSQL)\"\n                                value={env.database.engine}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, engine: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Version\"\n                                value={env.database.version}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, version: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Host\"\n                                value={env.database.host}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, host: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"DB name\"\n                                value={env.database.name}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, name: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"DB user\"\n                                value={env.database.user}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, user: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Backup policy\"\n                                value={env.database.backupPolicy}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, backupPolicy: e.target.value } })\n                                }\n                            />\n                            <div className=\"md:col-span-2\">\n                                <label className=\"text-sm text-gray-600 mr-2\">Read replicas</label>\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={env.database.readReplicas ? \"yes\" : \"no\"}\n                                    onChange={(e) =>\n                                        setEnv(env.key, {\n                                            database: { ...env.database, readReplicas: e.target.value === \"yes\" },\n                                        })\n                                    }\n                                >\n                                    <option value=\"no\">No</option>\n                                    <option value=\"yes\">Yes</option>\n                                </select>\n                            </div>\n                            <textarea\n                                rows={2}\n                                className=\"md:col-span-2 rounded border px-3 py-2\"\n                                placeholder=\"Notes\"\n                                value={env.database.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n\n                    {/* Env vars */}\n                    <div className=\"rounded border p-3\">\n                        <div className=\"font-semibold mb-2\">Environment variables</div>\n                        <EnvVarTable\n                            value={env.envVars}\n                            onChange={(v) => setEnv(env.key, { envVars: v })}\n                        />\n                    </div>\n\n                    {/* Checks */}\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                        <div className=\"rounded border p-3\">\n                            <div className=\"font-semibold mb-2\">Pre-deployment checks</div>\n                            <ChipInput\n                                value={env.preChecks || []}\n                                onChange={(v) => setEnv(env.key, { preChecks: v })}\n                                placeholder=\"Add check and press Enter\"\n                            />\n                        </div>\n                        <div className=\"rounded border p-3\">\n                            <div className=\"font-semibold mb-2\">Post-deployment checks</div>\n                            <ChipInput\n                                value={env.postChecks || []}\n                                onChange={(v) => setEnv(env.key, { postChecks: v })}\n                                placeholder=\"Add check and press Enter\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Rollback */}\n                    <div className=\"rounded border p-3 grid md:grid-cols-2 gap-3\">\n                        <div>\n                            <label className=\"block text-sm text-gray-600 mb-1\">Rollback strategy</label>\n                            <input\n                                className=\"w-full rounded border px-3 py-2\"\n                                value={env.rollback.strategy}\n                                onChange={(e) =>\n                                    setEnv(env.key, { rollback: { ...env.rollback, strategy: e.target.value } })\n                                }\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm text-gray-600 mb-1\">Rollback command</label>\n                            <input\n                                className=\"w-full rounded border px-3 py-2 font-mono\"\n                                value={env.rollback.command}\n                                onChange={(e) =>\n                                    setEnv(env.key, { rollback: { ...env.rollback, command: e.target.value } })\n                                }\n                            />\n                        </div>\n                        <div className=\"md:col-span-2\">\n                            <label className=\"block text-sm text-gray-600 mb-1\">Notes</label>\n                            <textarea\n                                rows={2}\n                                className=\"w-full rounded border px-3 py-2\"\n                                value={env.rollback.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { rollback: { ...env.rollback, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n                </section>\n            ))}\n        </form>\n    );\n}\n","import React, { JSX, useEffect, useMemo, useState } from \"react\";\nimport HubSidebar from \"./components/HubSidebar\";\nimport { ProjectHubProvider } from \"./context\";\nimport SectionHeader from \"./components/SectionHeader\";\nimport { EmptyState } from \"packages/ui\";\n\n// Sections\nimport Setup from \"./sections/Setup\";\nimport Architecture from \"./sections/Architecture\";\nimport Database from \"./sections/Database\";\nimport UX from \"./sections/UX\";\nimport Documents from \"./sections/Documents\";\nimport Links from \"./sections/Links\";\nimport Issues from \"./sections/Issues\";\nimport POCs from \"./sections/POCs\";\nimport Screenshots from \"./sections/Screenshots\";\nimport Revenue from \"./sections/Revenue\";\nimport Value from \"./sections/Value\";\nimport Maintenance from \"./sections/Maintenance\";\nimport Demand from \"./sections/Demand\";\nimport TechRequirements from \"./sections/TechRequirements\";\nimport Deployment from \"./sections/Deployment\";\nimport Releases from \"./sections/Releases\";\n\nimport useProjectHub from \"../../hooks/useProjectHub\";\nimport Modal from \"../../components/ui/Modal\";\n\nimport { storage, HUB_NS } from \"packages/storage\";\nimport type {\n  SectionDef,\n  HubProject,\n  SectionKey,\n  UseProjectHubShape,\n} from \"types/project-hub\";\n/** ---- Types (co-located for now; feel free to move to src/types/hub.ts) ---- */\n\n/** ---- Static section map ---- */\n\nconst SECTIONS: SectionDef[] = [\n  { key: \"setup\", title: \"Setup\", comp: Setup },\n  { key: \"architecture\", title: \"Architecture\", comp: Architecture },\n  { key: \"database\", title: \"Database\", comp: Database },\n  { key: \"links\", title: \"Links\", comp: Links },\n  { key: \"deployment\", title: \"Deployment guide\", comp: Deployment },\n  { key: \"issues\", title: \"Issues faced\", comp: Issues },\n  { key: \"pocs\", title: \"Proof of concepts\", comp: POCs },\n  { key: \"screenshots\", title: \"Screenshots\", comp: Screenshots },\n  { key: \"revenue\", title: \"Revenue\", comp: Revenue },\n  { key: \"value\", title: \"Immediate value\", comp: Value },\n  { key: \"maintenance\", title: \"Maintenance\", comp: Maintenance },\n  { key: \"demand\", title: \"Demand\", comp: Demand },\n  { key: \"tech\", title: \"Tech Requirements\", comp: TechRequirements },\n  { key: \"releases\", title: \"Releases\", comp: Releases },\n  { key: \"ux\", title: \"UX\", comp: UX },\n  { key: \"documents\", title: \"Documents\", comp: Documents },\n];\n\n/** ---- Public component ---- */\n\nexport default function ProjectHubView() {\n  return (\n    <ProjectHubProvider>\n      <ProjectHubInner />\n    </ProjectHubProvider>\n  );\n}\n\n/** ---- Inner (uses the hub context) ---- */\n\nfunction ProjectHubInner(): JSX.Element {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState<HubProject | null>(\n    null\n  );\n\n  // initial section from storage; fall back to first valid section\n  const initialKey: SectionKey = useMemo(() => {\n    const saved = storage.get<SectionKey>(HUB_NS, \"activeSection\");\n    const valid = SECTIONS.some((s) => s.key === saved);\n    return (valid ? saved : SECTIONS[0].key) as SectionKey;\n  }, []);\n  const [activeKey, setActiveKey] = useState<SectionKey>(initialKey);\n\n  const ActiveComp = SECTIONS.find((s) => s.key === activeKey)?.comp ?? Setup;\n\n  // Delete modal state from hub hook (typed minimally for this file)\n  const { deleteProject, selected } = useProjectHub() as UseProjectHubShape;\n\n  // persist active section\n  useEffect(() => {\n    storage.set(HUB_NS, \"activeSection\", activeKey);\n  }, [activeKey]);\n\n  // listen for global sidebar toggle (same pattern used elsewhere)\n  useEffect(() => {\n    const handler = () => setIsSidebarOpen((s) => !s);\n    window.addEventListener(\"app:toggleSidebar\", handler);\n    return () => window.removeEventListener(\"app:toggleSidebar\", handler);\n  }, []);\n\n  // delete modal helpers\n  const openDelete = (proj: HubProject) => {\n    setProjectToDelete(proj);\n    setIsDeleteOpen(true);\n  };\n  const closeDelete = () => {\n    setProjectToDelete(null);\n    setIsDeleteOpen(false);\n  };\n  const confirmDelete = () => {\n    if (projectToDelete) deleteProject(projectToDelete.id);\n    closeDelete();\n  };\n\n  return (\n    <div className=\"h-screen w-full flex flex-col bg-gray-50\">\n      <div className=\"flex-1 min-h-0 w-full\">\n        <div className=\"relative h-full w-full flex overflow-hidden\">\n          {/* Backdrop (mobile) */}\n          <div\n            onClick={() => setIsSidebarOpen(false)}\n            className={`lg:hidden fixed inset-0 z-20 bg-black/40 transition-opacity duration-300 ${\n              isSidebarOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n            }`}\n          />\n\n          {/* Sidebar */}\n          <aside\n            className={`\n              fixed lg:static inset-y-0 left-0 z-30 w-72 bg-gray-900 text-white\n              transform transition-transform duration-300 ease-in-out\n              border-r border-gray-800 overflow-y-auto shrink-0\n              ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n              lg:translate-x-0 lg:transform-none\n            `}\n          >\n            <div className=\"h-full p-4\">\n              <HubSidebar\n                sections={SECTIONS}\n                activeKey={activeKey}\n                onSelect={(key: SectionKey) => {\n                  setActiveKey(key);\n                  storage.set(HUB_NS, \"activeSection\", key);\n                  setIsSidebarOpen(false);\n                }}\n                onConfirmDelete={openDelete}\n              />\n            </div>\n          </aside>\n\n          {/* Right pane */}\n          <main className=\"flex-1 min-w-0 h-full overflow-auto\">\n            {!selected ? (\n              <EmptyState\n                title=\"Create your first project\"\n                description={\n                  <>\n                    Use the{\" \"}\n                    <span className=\"font-medium\">“New project name”</span>{\" \"}\n                    field in the left sidebar to add a project. Once created,\n                    you can document sections like <em>Setup</em>,{\" \"}\n                    <em>Architecture</em>, and more.\n                  </>\n                }\n                bullets={[\n                  \"Your projects list is shared with your board.\",\n                  \"Select a section on the left to start documenting.\",\n                  <>\n                    Deleting here only clears <em>Project Hub</em> data for that\n                    project.\n                  </>,\n                ]}\n              />\n            ) : (\n              <>\n                <SectionHeader\n                  title={\n                    SECTIONS.find((s) => s.key === activeKey)?.title ||\n                    \"Section\"\n                  }\n                />\n                <div className=\"mt-4\">\n                  <ActiveComp />\n                </div>\n              </>\n            )}\n          </main>\n        </div>\n      </div>\n\n      {/* Delete Project Modal */}\n      <Modal\n        isOpen={isDeleteOpen}\n        onClose={closeDelete}\n        title=\"Delete project?\"\n      >\n        <p className=\"text-gray-700\">\n          {`Clear Project Hub data for “${\n            projectToDelete?.name || \"this project\"\n          }”? This removes only the Hub sections (Setup, Architecture, etc.). Your project, board columns and tasks remain intact.`}\n        </p>\n        <div className=\"flex justify-between space-x-3 mt-6\">\n          <button\n            onClick={closeDelete}\n            className=\"px-4 py-2 rounded-lg bg-gray-200 text-gray-700 hover:bg-gray-300\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={confirmDelete}\n            className=\"px-4 py-2 rounded-lg bg-red-600 text-white hover:bg-red-700\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Issues() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"issues\"\n            placeholder={`List blockers, risks, mitigations, lessons learned…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function POCs() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"pocs\"\n            placeholder={`Proofs of concept: approach, outcomes, code pointers…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Screenshots() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"screenshots\"\n            placeholder={`Paste image links or Markdown images to showcase UI & flows.`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Revenue() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"revenue\"\n            placeholder={`Revenue projections, pricing, CAC/LTV notes…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Value() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"value\"\n            placeholder={`Immediate value, success metrics, stakeholder impact…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Maintenance() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"maintenance\"\n            placeholder={`Oncall, SLAs, runbooks, monitoring, alerting, upgrade paths…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Demand() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"demand\"\n            placeholder={`User demand, backlog, roadmap confidence, market signals…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function TechRequirements() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"tech\"\n            placeholder={`Functional & non-functional requirements, SLOs, constraints…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Releases() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"releases\"\n            placeholder={`Released versions, links to release notes, known issues…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function UX() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"ux\"\n            placeholder={`User journeys, wireframes, accessibility notes, UX rationale…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Documents() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"documents\"\n            placeholder={`Add links to specs, design docs, spreadsheets, etc. (Markdown links).`}\n        />\n    );\n}\n","import React from 'react';\nimport ProjectHubView from '../../features/projectHub/ProjectHubView';\nimport { ProjectHubProvider } from '../../features/projectHub/context';\n\nexport default function ProjectHubApp() {\n    return (\n        <ProjectHubProvider>\n            <ProjectHubView />\n        </ProjectHubProvider>\n    );\n}\n","import React, { useRef, useState } from \"react\";\n\ntype Props = {\n  value: string[];\n  onChange: (next: string[]) => void;\n  placeholder?: string;\n  className?: string;\n  /** If true, trims and dedups automatically */\n  dedupe?: boolean;\n};\n\nconst ChipInput: React.FC<Props> = ({\n  value,\n  onChange,\n  placeholder = \"Add and press Enter\",\n  className = \"\",\n  dedupe = true,\n}) => {\n  const [draft, setDraft] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const commit = (raw: string) => {\n    const v = raw.trim();\n    if (!v) return;\n    const next = dedupe ? Array.from(new Set([...value, v])) : [...value, v];\n    onChange(next);\n    setDraft(\"\");\n  };\n\n  const splitAndCommit = (raw: string) => {\n    const parts = raw\n      .split(/[,;]/g)\n      .map((s) => s.trim())\n      .filter(Boolean);\n    if (!parts.length) return;\n    const base = new Set(value);\n    const next = dedupe\n      ? [...new Set([...value, ...parts])]\n      : [...value, ...parts];\n    if (next.length !== value.length || parts.some((p) => !base.has(p))) {\n      onChange(next);\n    }\n    setDraft(\"\");\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      // allow comma-separated on enter too\n      splitAndCommit(draft);\n    } else if (e.key === \"Backspace\" && !draft && value.length) {\n      // remove last chip\n      onChange(value.slice(0, -1));\n    } else if (e.key === \",\" || e.key === \";\") {\n      e.preventDefault();\n      splitAndCommit(draft);\n    }\n  };\n\n  const removeAt = (idx: number) => {\n    const next = value.filter((_, i) => i !== idx);\n    onChange(next);\n    // keep focus for fast editing\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div\n      className={[\n        \"flex flex-wrap gap-2 rounded border bg-white px-2 py-2\",\n        className,\n      ].join(\" \")}\n      onClick={() => inputRef.current?.focus()}\n    >\n      {value.map((chip, i) => (\n        <span\n          key={`${chip}-${i}`}\n          className=\"inline-flex items-center gap-1 rounded-full bg-gray-100 px-2 py-0.5 text-xs text-gray-800\"\n        >\n          {chip}\n          <button\n            type=\"button\"\n            aria-label={`Remove ${chip}`}\n            className=\"rounded p-0.5 hover:bg-gray-200\"\n            onClick={() => removeAt(i)}\n          >\n            ✕\n          </button>\n        </span>\n      ))}\n\n      <input\n        ref={inputRef}\n        value={draft}\n        onChange={(e) => setDraft(e.target.value)}\n        onKeyDown={onKeyDown}\n        onBlur={() => commit(draft)}\n        placeholder={value.length ? \"\" : placeholder}\n        className=\"min-w-[8ch] flex-1 outline-none text-sm placeholder:text-gray-400 bg-transparent\"\n      />\n    </div>\n  );\n};\n\nexport default ChipInput;\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  type?: \"button\" | \"submit\" | \"reset\";\n  className?: string;\n  title?: string;\n  disabled?: boolean;\n};\n\nconst IconButton: React.FC<Props> = ({\n  children,\n  onClick,\n  type = \"button\",\n  className = \"\",\n  title,\n  disabled,\n}) => (\n  <button\n    type={type}\n    title={title}\n    disabled={disabled}\n    onClick={onClick}\n    className={[\n      \"inline-flex items-center gap-1 rounded border px-3 py-1.5 text-sm\",\n      \"bg-white hover:bg-gray-50 text-gray-700\",\n      \"disabled:opacity-60 disabled:cursor-not-allowed\",\n      className,\n    ].join(\" \")}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import React from \"react\";\n\ntype EmptyStateProps = {\n  title: string;\n  description?: React.ReactNode;\n  bullets?: React.ReactNode[];\n  action?: React.ReactNode; // e.g. a CTA button\n  className?: string;\n};\n\nconst EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  bullets,\n  action,\n  className = \"rounded-xl border bg-white p-8\",\n}) => {\n  return (\n    <div className={className}>\n      <h2 className=\"text-2xl font-semibold text-gray-900\">{title}</h2>\n      {description && (\n        <div className=\"mt-2 text-gray-600 text-sm\">{description}</div>\n      )}\n      {bullets?.length ? (\n        <ul className=\"mt-3 list-disc pl-5 space-y-1 text-sm text-gray-700\">\n          {bullets.map((b, i) => (\n            <li key={i}>{b}</li>\n          ))}\n        </ul>\n      ) : null}\n      {action && <div className=\"mt-4\">{action}</div>}\n    </div>\n  );\n};\n\nexport default EmptyState;\n","import React from \"react\";\nimport useProjectHub from \"../../hooks/useProjectHub\";\n\ntype Props = { title: string; right?: React.ReactNode };\n\nconst SectionHeader: React.FC<Props> = ({ title, right }) => {\n  const { selected } = useProjectHub();\n  return (\n    <div className=\"flex items-center justify-between\">\n      <h2 className=\"text-2xl font-bold\">{title}</h2>\n      {right ?? (\n        <div className=\"text-sm text-gray-500\">\n          {selected ? `Project: ${selected.name}` : \"No project selected\"}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SectionHeader;\n","import React from \"react\";\n\ntype ModalProps = {\n    isOpen: boolean;\n    onClose: () => void;\n    title?: string;\n    children: React.ReactNode;\n    className?: string;\n    /** Optional: close when clicking the scrim (default true) */\n    closeOnBackdrop?: boolean;\n};\n\nconst Modal: React.FC<ModalProps> = ({\n    isOpen,\n    onClose,\n    title,\n    children,\n    className = \"bg-white rounded-xl shadow-lg p-6\",\n    closeOnBackdrop = true,\n}) => {\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"fixed inset-0 z-50\">\n            <div\n                className=\"absolute inset-0 bg-black/50\"\n                onClick={closeOnBackdrop ? onClose : undefined}\n            />\n            <div className=\"absolute left-1/2 top-20 -translate-x-1/2 w-full max-w-lg\">\n                <div className={className} role=\"dialog\" aria-modal>\n                    {title && (\n                        <div className=\"flex items-center justify-between mb-4\">\n                            <h3 className=\"text-lg font-semibold\">{title}</h3>\n                            <button\n                                aria-label=\"Close modal\"\n                                onClick={onClose}\n                                className=\"rounded p-1 hover:bg-gray-100\"\n                            >\n                                ✕\n                            </button>\n                        </div>\n                    )}\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Modal;","import { useProjectHubContext } from \"../features/projectHub/context\";\nimport type { ProjectHubContextValue } from \"../types/project-hub\";\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n","import React, { useState } from \"react\";\n\ntype Props = {\n  value: string;\n  className?: string;\n};\n\nconst SecretText: React.FC<Props> = ({ value, className }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className={[\"inline-flex items-center gap-2\", className].join(\" \")}>\n      <code className=\"rounded bg-gray-100 px-2 py-1\">\n        {show ? value : \"••••••••\"}\n      </code>\n      <button\n        type=\"button\"\n        onClick={() => setShow((s) => !s)}\n        className=\"text-xs rounded border px-2 py-1 hover:bg-gray-50\"\n      >\n        {show ? \"Hide\" : \"Show\"}\n      </button>\n    </div>\n  );\n};\n\nexport default SecretText;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { storage, HUB_NS } from \"../../packages/storage\";\nimport type {\n  HubProject,\n  ProjectHubContextValue,\n} from \"../../types/project-hub\";\n\nconst LIST_KEY = \"projects\"; // NOT \"hub:projects\" (ns already applied)\nconst SELECTED_KEY = \"selectedProjectId\";\n\nfunction loadProjects(): HubProject[] {\n  return storage.get<HubProject[]>(HUB_NS, LIST_KEY, []);\n}\nfunction persistProjects(list: HubProject[]) {\n  storage.set(HUB_NS, LIST_KEY, list);\n}\n\nexport const ProjectHubContext = createContext<\n  ProjectHubContextValue | undefined\n>(undefined);\nexport const useProjectHubContext = () => useContext(ProjectHubContext);\n\nexport function ProjectHubProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [projects, setProjects] = useState<HubProject[]>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  const refresh = () => setProjects(loadProjects());\n\n  useEffect(() => {\n    refresh();\n    setSelectedId(storage.get<string | null>(HUB_NS, SELECTED_KEY, null));\n  }, []);\n\n  useEffect(() => {\n    if (selectedId) storage.set(HUB_NS, SELECTED_KEY, selectedId);\n    else storage.remove(HUB_NS, SELECTED_KEY);\n  }, [selectedId]);\n\n  const selected = useMemo<HubProject | null>(\n    () => projects.find((p) => p.id === selectedId) || null,\n    [projects, selectedId]\n  );\n\n  const selectProject = (id: string | null) => setSelectedId(id);\n\n  const addProject = (name: string): HubProject | null => {\n    const n = (name || \"\").trim();\n    if (!n) return null;\n\n    // de-dup by case-insensitive name\n    if (projects.some((p) => p.name.toLowerCase() === n.toLowerCase()))\n      return null;\n\n    const id = `${n.toLowerCase().replace(/\\s+/g, \"-\")}-${Date.now()}`;\n    const proj: HubProject = { id, name: n, sections: {} };\n    const next = [...projects, proj];\n\n    setProjects(next);\n    persistProjects(next);\n    setSelectedId(id);\n    return proj;\n  };\n\n  // Hub-only delete (does NOT touch Board data)\n  const deleteProject = (id: string) => {\n    const next = projects.filter((p) => p.id !== id);\n    setProjects(next);\n    persistProjects(next);\n    if (selectedId === id) setSelectedId(null);\n  };\n\n  const updateSection = (sectionKey: string, data: unknown) => {\n    if (!selectedId) return;\n    const next = projects.map((p) =>\n      p.id !== selectedId\n        ? p\n        : { ...p, sections: { ...(p.sections || {}), [sectionKey]: data } }\n    );\n    setProjects(next);\n    persistProjects(next);\n  };\n\n  const value: ProjectHubContextValue = {\n    projects,\n    selected,\n    selectedId,\n    setSelectedId,\n    selectProject,\n    addProject,\n    deleteProject,\n    updateSection,\n    refresh,\n  };\n\n  return (\n    <ProjectHubContext.Provider value={value}>\n      {children}\n    </ProjectHubContext.Provider>\n  );\n}\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n"],"names":["_ref","sections","activeKey","onSelect","onConfirmDelete","projects","selected","setSelectedId","addProject","useProjectHub","newName","setNewName","useState","_jsxs","className","children","_jsx","map","p","concat","id","onClick","name","length","e","stopPropagation","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","value","onChange","target","placeholder","n","trim","s","key","disabled","SectionHeader","DEFAULT_SETUP","summary","repoUrl","issueTrackerUrl","designDocUrl","license","packageManager","nodeVersion","framework","branchStrategy","techStack","commands","install","start","build","test","lint","format","environments","appUrl","apiUrl","envVars","tooling","typecheck","contacts","updateAt","arr","idx","patch","v","i","_objectSpread","removeAt","filter","_","Setup","updateSection","saved","useMemo","_selected$sections","setup","mode","setMode","form","setForm","useEffect","f","_form$techStack","_form$tooling","_form$tooling2","_form$tooling3","_form$environments","_form$envVars","_form$contacts","onEdit","Card","DL","rows","linkOrDash","valueOrDash","t","Empty","JSON","stringify","env","secret","SecretText","description","c","role","email","href","onCancel","onSave","TextField","label","SelectField","options","ChipInput","Object","entries","k","val","IconButton","variant","row","_ref2","_ref3","_ref4","dt","dd","React","rel","_ref5","rest","_objectWithoutProperties","_excluded","_ref6","opts","o","overview","diagrams","url","services","language","runtime","owner","apis","method","path","auth","service","dataStores","type","version","purpose","queues","tech","thirdParty","docsUrl","observability","logs","metrics","tracing","dashboardsUrl","alertsUrl","security","encryptionAtRest","encryptionInTransit","threatModelUrl","dataRetentionNotes","corsPolicy","cspNotes","availability","sla","slo","rpo","rto","scaling","strategy","autoScaling","notes","decisions","date","status","link","risks","risk","mitigation","tags","RowBtn","ServicesEditor","set","copy","remove","add","ApiEditor","a","m","SimpleListEditor","columns","addEmpty","fromEntries","engines","host","port","dbName","user","schemas","entities","table","fields","pk","nullable","default","indexes","relationships","from","to","onDelete","migrations","tool","seed","performance","poolMin","poolMax","timeoutMs","readReplicas","partitioning","sharding","cachingLayer","backups","enabled","schedule","retentionDays","location","restoreTestCadence","dataRetention","retention","policy","atRest","inTransit","rowLevelSecurity","accessModel","piiTables","queriesOfInterest","sql","incidents","actionItems","EntitiesEditor","toFieldsString","arguments","undefined","join","toIndexesString","setRow","ev","split","x","Boolean","pair","tRaw","req","endsWith","slice","chunk","_chunk$split$","_chunk$match","_chunk$match$","match","MarkdownEditor","renderer","marked","Renderer","MarkdownView","text","html","parse","dangerouslySetInnerHTML","__html","MarkdownSectionBase","sectionKey","setText","_Fragment","setOptions","breaks","defaultLinks","bookmarks","categories","links","TableEditor","global","repository","pipeline","artifactRegistry","runtimeNotes","onCallContact","domains","app","api","frontend","buildCmd","artifact","container","image","tag","registry","deployCmd","cdn","backend","migrationsCmd","database","engine","migrationTool","backupPolicy","preChecks","postChecks","rollback","command","EnvVarTable","SECTIONS","comp","architecture","architectureDefault","_form$diagrams","_form$services","_form$dataStores","_form$apis","_form$queues","q","_form$thirdParty","_form$decisions","_form$risks","r","_form$tags","onSubmit","preventDefault","checked","databaseDefault","_form$engines","_form$schemas","_form$entities","ix","_form$relationships","_form$dataRetention","_form$queriesOfIntere","_form$incidents","_form$bookmarks","b","_form$categories","cat","_cat$links","l","ci","setCat","addLink","setLink","li","removeLink","deployment","defaultDeploymentGuide","setEnv","_env$envVars","ProjectHubView","ProjectHubProvider","ProjectHubInner","_SECTIONS$find$comp","_SECTIONS$find","_SECTIONS$find2","isSidebarOpen","setIsSidebarOpen","isDeleteOpen","setIsDeleteOpen","projectToDelete","setProjectToDelete","initialKey","storage","get","HUB_NS","some","setActiveKey","ActiveComp","find","deleteProject","handler","window","addEventListener","removeEventListener","closeDelete","HubSidebar","proj","EmptyState","bullets","Modal","isOpen","onClose","confirmDelete","ProjectHubApp","dedupe","draft","setDraft","inputRef","useRef","splitAndCommit","raw","parts","base","Set","next","has","_inputRef$current2","current","focus","chip","_inputRef$current","ref","onKeyDown","onBlur","Array","commit","action","right","closeOnBackdrop","ctx","useProjectHubContext","Error","show","setShow","LIST_KEY","SELECTED_KEY","persistProjects","list","ProjectHubContext","createContext","useContext","setProjects","selectedId","refresh","selectProject","toLowerCase","replace","Date","now","data","Provider"],"sourceRoot":""}