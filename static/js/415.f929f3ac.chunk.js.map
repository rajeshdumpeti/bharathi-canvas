{"version":3,"file":"static/js/415.f929f3ac.chunk.js","mappings":"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","sources":["features/board/components/TaskForm.tsx","features/board/components/AddColumnModal.tsx","features/board/components/TaskCard.tsx","features/board/components/Column.tsx","features/board/components/Sidebar.tsx","features/board/BoardView.tsx","app/board/App.jsx","components/ui/ChipInput.tsx","components/ui/IconButton.tsx","components/ui/EmptyState.tsx","components/ui/SectionHeader.tsx","components/ui/Modal.tsx","hooks/useProjectHub.ts","components/ui/SecretText.tsx","features/projectHub/context.tsx"],"sourcesContent":["// src/features/board/components/TaskForm.tsx\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport type Priority = \"High\" | \"Medium\" | \"Low\";\nexport type Tech =\n  | \"FE\" // Frontend\n  | \"BE\" // Backend\n  | \"DB\" // Database\n  | \"ARCH\" // Architecture\n  | \"MISC\"; // Miscellaneous\n\nexport interface TaskDraft {\n  id?: string;\n  project?: string;\n  status?: string;\n\n  title: string;\n  description?: string;\n  acceptanceCriteria?: string;\n\n  assignee?: string;\n  priority: Priority;\n  architecture: Tech;\n\n  storyId?: string; // e.g. \"US234567\" (may be undefined for new task until save)\n  createdAt?: string; // ISO date \"YYYY-MM-DD\"\n  dueDate?: string; // ISO date \"YYYY-MM-DD\"\n}\n\nexport interface TaskFormProps {\n  task: Partial<TaskDraft>; // you pass a prefilled object in BoardView\n  onSave: (task: TaskDraft) => void;\n  onCancel: () => void;\n}\n\nfunction toISODate(d: Date) {\n  return d.toISOString().slice(0, 10);\n}\n\nfunction fmtHuman(d?: string) {\n  if (!d) return new Date().toLocaleDateString(\"en-GB\");\n  try {\n    return new Date(d).toLocaleDateString(\"en-GB\");\n  } catch {\n    return d;\n  }\n}\n\nexport default function TaskForm({ task, onSave, onCancel }: TaskFormProps) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm<TaskDraft>({\n    defaultValues: {\n      title: task.title ?? \"\",\n      description: task.description ?? \"\",\n      acceptanceCriteria: task.acceptanceCriteria ?? \"\",\n      assignee: task.assignee ?? \"\",\n      priority: (task.priority as Priority) ?? \"Low\",\n      architecture: (task.architecture as Tech) ?? \"FE\",\n      createdAt: task.createdAt ?? toISODate(new Date()),\n      dueDate: task.dueDate ?? \"\",\n      // keep any metadata you passed\n      id: task.id,\n      project: task.project,\n      status: task.status,\n      storyId: task.storyId,\n    },\n  });\n\n  const onSubmit = (data: TaskDraft) => {\n    // Preserve any immutable fields from the incoming task object\n    onSave({\n      ...data,\n      id: task.id ?? data.id,\n      project: task.project ?? data.project,\n      status: task.status ?? data.status,\n      storyId: task.storyId ?? data.storyId, // BoardView may assign on save if missing\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"p-6\">\n      {/* User Story banner */}\n      <div className=\"mb-5\">\n        <div className=\"inline-flex items-center gap-2 rounded-full bg-indigo-50 text-indigo-700 border border-indigo-100 px-3 py-1 text-sm font-medium\">\n          <span>User Story</span>\n          <span className=\"font-semibold\">\n            {task.storyId ? task.storyId : \"Will be assigned on save\"}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"space-y-5\">\n        {/* Row 1: Title + Technology */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Title\n            </label>\n            <input\n              {...register(\"title\", { required: \"Title is required\" })}\n              type=\"text\"\n              placeholder=\"Task Title\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n            {errors.title && (\n              <p className=\"mt-1 text-xs text-red-600\">\n                {errors.title.message}\n              </p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Technology\n            </label>\n            <select\n              {...register(\"architecture\")}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            >\n              <option value=\"FE\">Frontend</option>\n              <option value=\"BE\">Backend</option>\n              <option value=\"DB\">Database</option>\n              <option value=\"ARCH\">Architecture</option>\n              <option value=\"MISC\">Miscellaneous</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Row 2: Acceptance Criteria */}\n        <div>\n          <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n            Acceptance Criteria\n          </label>\n          <textarea\n            {...register(\"acceptanceCriteria\")}\n            placeholder=\"As a user, I want..., so that...\"\n            rows={3}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n          />\n        </div>\n\n        {/* Row 3: Description */}\n        <div>\n          <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n            Description\n          </label>\n          <textarea\n            {...register(\"description\")}\n            placeholder=\"Detailed description...\"\n            rows={3}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n          />\n        </div>\n\n        {/* Row 4: Assignee + Priority */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Assignee\n            </label>\n            <input\n              {...register(\"assignee\")}\n              type=\"text\"\n              placeholder=\"Assignee Name\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Priority\n            </label>\n            <select\n              {...register(\"priority\")}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            >\n              <option value=\"High\">High</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"Low\">Low</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Row 5: Created on + Complete by */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Created on\n            </label>\n            <p className=\"w-full px-4 py-2 border border-gray-300 rounded-lg\">\n              {fmtHuman(task.createdAt)}\n            </p>\n            {/* keep createdAt in payload (hidden input) */}\n            <input type=\"hidden\" {...register(\"createdAt\")} />\n          </div>\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Complete by\n            </label>\n            <input\n              type=\"date\"\n              {...register(\"dueDate\")}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex justify-between space-x-4 mt-6\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-semibold disabled:opacity-60\"\n        >\n          Save Task\n        </button>\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\n\ntype Props = {\n  onSave: (title: string) => void;\n  onCancel: () => void;\n};\n\nconst AddColumnModal: React.FC<Props> = ({ onSave, onCancel }) => {\n  const [title, setTitle] = useState<string>(\"\");\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    onSave(title);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-6\">\n      <h3 className=\"text-2xl font-bold mb-6 text-gray-800\">Add New Column</h3>\n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n            Column Title\n          </label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"e.g., Backlog\"\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"flex justify-between space-x-4 mt-6\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-semibold\"\n        >\n          Add Column\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddColumnModal;\n","import React from \"react\";\nimport type { Task } from \"../../../types/board\";\n\nconst priorityColors: Record<NonNullable<Task[\"priority\"]>, string> = {\n  High: \"border-l-4 border-red-500\",\n  Medium: \"border-l-4 border-yellow-500\",\n  Low: \"border-l-4 border-green-500\",\n};\n\nexport interface TaskCardProps {\n  task: Task;\n  onDragStart: (e: React.DragEvent<HTMLDivElement>) => void;\n  onEdit: () => void;\n  onDelete?: (taskId: string) => void; // not used in UI right now, kept for parity\n}\n\nconst TaskCard: React.FC<TaskCardProps> = ({ task, onDragStart, onEdit }) => {\n  return (\n    <div\n      className={`p-4 bg-white rounded-lg shadow-sm cursor-grab ${priorityColors[task.priority]} transition-transform duration-200 hover:scale-[1.02]`}\n      draggable\n      onDragStart={onDragStart}\n      onClick={onEdit}\n    >\n      <div className=\"flex justify-between items-center mb-2\">\n        {task.storyId && (\n          <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs bg-blue-50 text-blue-700\">\n            {task.storyId}\n          </span>\n        )}\n\n        {task.architecture && (\n          <span className=\"inline-block px-2 py-0.5 text-xs font-semibold rounded-full bg-gray-200 text-gray-700\">\n            {task.architecture}\n          </span>\n        )}\n      </div>\n\n      <h4 className=\"font-semibold text-gray-900\">{task.title}</h4>\n\n      {task.description && (\n        <p className=\"text-sm text-gray-600 break-words whitespace-pre-line mb-3\">\n          {task.description}\n        </p>\n      )}\n\n      <div className=\"space-y-1 text-xs text-gray-500 mb-2\">\n        <p>\n          {task.assignee\n            ? `Assigned to: ${String(task.assignee)}`\n            : \"Unassigned\"}\n        </p>\n        {task.createdAt && <p>Created on: {task.createdAt}</p>}\n        {task.dueDate && <p>Complete by: {task.dueDate}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCard;\n","// src/features/board/components/Column.tsx\nimport React from \"react\";\nimport TaskCard from \"./TaskCard\";\nimport type { ColumnProps } from \"../../../types/board\";\n\nconst Column: React.FC<ColumnProps> = ({\n  title,\n  id,\n  tasks,\n  onAddTask,\n  onDrop,\n  onDragOver,\n  onDragStart,\n  onEditTask,\n  onConfirmDeleteTask,\n  onConfirmDeleteColumn,\n}) => {\n  const columnTasks = tasks.filter((task) => task.status === id);\n\n  return (\n    <div\n      className=\"flex-1 min-w-[280px] max-w-xs bg-gray-100 rounded-xl p-4 m-2 shadow-md transition-all duration-300 transform hover:shadow-xl md:flex-grow-0 md:min-w-[300px]\"\n      onDragOver={onDragOver}\n      onDrop={(e) => onDrop(e, id)}\n    >\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-800\">\n          {title} ({columnTasks.length})\n        </h2>\n\n        <div className=\"flex space-x-2\">\n          {title === \"To Do\" ? (\n            <button\n              onClick={() => onAddTask(id)}\n              aria-label={`Add task to ${title}`}\n              className=\"p-1.5 rounded-full bg-blue-200 text-blue-600 hover:bg-blue-300 transition-colors\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 4v16m8-8H4\"\n                />\n              </svg>\n            </button>\n          ) : null}\n\n          {/* If you re-enable column delete, keep this handler:\n          <button\n            onClick={() => onConfirmDeleteColumn(id)}\n            aria-label={`Delete ${title} column`}\n            className=\"p-1.5 rounded-full bg-red-200 text-red-600 hover:bg-red-300 transition-colors\"\n          >\n            ...\n          </button>\n          */}\n        </div>\n      </div>\n\n      <div\n        className=\"flex flex-col space-y-3 overflow-y-auto\"\n        style={{ scrollbarWidth: \"thin\", scrollbarColor: \"#E2E8F0 #F7FAFC\" }}\n      >\n        {columnTasks.length === 0 ? (\n          <div className=\"text-sm text-gray-500 italic py-6 text-center select-none\">\n            No tasks here yet — click the ➕ to add one.\n          </div>\n        ) : (\n          columnTasks.map((task) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              onDragStart={(e: React.DragEvent<HTMLDivElement>) =>\n                onDragStart(e, task.id)\n              }\n              onEdit={() => onEditTask(task)}\n              onDelete={onConfirmDeleteTask}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Column;\n","// src/features/board/components/Sidebar.tsx\nimport React, { useState } from \"react\";\nimport { SidebarProps } from \"types/sidebar\";\n\nconst Sidebar: React.FC<SidebarProps> = ({\n  projects,\n  selectedProject,\n  onSelectProject,\n  onAddProject,\n  isSidebarOpen,\n  onToggleSidebar,\n  tasks,\n  onConfirmDeleteProject,\n  onOpenDocuments,\n}) => {\n  const [newProjectName, setNewProjectName] = useState(\"\");\n\n  const projectTasks = tasks.filter(\n    (task) => selectedProject && task.project === selectedProject.id\n  );\n  const todoCount = projectTasks.filter((t) => t.status === \"to-do\").length;\n  const inProgressCount = projectTasks.filter(\n    (t) => t.status === \"in-progress\"\n  ).length;\n  const doneCount = projectTasks.filter((t) => t.status === \"done\").length;\n  const totalTasks = projectTasks.length;\n  const progressPercentage =\n    totalTasks > 0 ? Math.round((doneCount / totalTasks) * 100) : 0;\n  const currentDate = new Date().toLocaleDateString(\"en-US\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  const handleAddProject = (e: React.FormEvent) => {\n    e.preventDefault();\n    const name = (newProjectName || \"\").trim();\n    if (!name) return;\n    const exists = projects.some(\n      (p) => p.name.trim().toLowerCase() === name.toLowerCase()\n    );\n    if (exists) return;\n\n    onAddProject(name);\n    setNewProjectName(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col h-full min-h-0 transition-all duration-300 pt-2\">\n      {/* Sidebar Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h3 className=\"text-xl font-bold\">Projects</h3>\n        <button\n          onClick={onToggleSidebar}\n          className=\"p-2 lg:hidden rounded-lg hover:bg-gray-700 transition-colors\"\n          aria-label=\"Close sidebar\"\n        >\n          <svg\n            className=\"w-6 h-6\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M6 18L18 6M6 6l12 12\"\n            />\n          </svg>\n        </button>\n      </div>\n\n      {/* Project List */}\n      <ul className=\"flex-1 space-y-2 mb-6 overflow-y-auto max-h-full min-h-0 pr-2 custom-scrollbar\">\n        {projects.length === 0 ? (\n          <li className=\"p-2 rounded-lg bg-gray-800/70 text-gray-300 text-sm select-none\">\n            Your project goes here\n          </li>\n        ) : (\n          projects.map((project) => (\n            <li\n              key={project.id}\n              className={`flex items-center justify-between p-2 rounded-lg cursor-pointer transition-colors ${\n                selectedProject?.id === project.id\n                  ? \"bg-blue-600 text-white\"\n                  : \"hover:bg-gray-700\"\n              }`}\n            >\n              <span\n                onClick={() => {\n                  onSelectProject(project);\n                  onToggleSidebar();\n                }}\n                className=\"flex-1 pr-2\"\n              >\n                {project.name}\n              </span>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onConfirmDeleteProject(project);\n                }}\n                className=\"p-1 rounded-full text-gray-400 hover:text-red-500 transition-colors\"\n                title=\"Delete Project\"\n                aria-label={`Delete project ${project.name}`}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-4 w-4\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </li>\n          ))\n        )}\n      </ul>\n\n      {/* Add Project */}\n      <form onSubmit={handleAddProject} className=\"mb-6 space-y-2\">\n        <input\n          type=\"text\"\n          value={newProjectName}\n          onChange={(e) => setNewProjectName(e.target.value)}\n          placeholder=\"New project name\"\n          className=\"w-full p-2 rounded-lg bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n        <button\n          type=\"submit\"\n          disabled={!newProjectName.trim()}\n          className={`w-full py-2 rounded-lg font-semibold transition\n            ${\n              newProjectName.trim()\n                ? \"bg-blue-600 hover:bg-blue-700 text-white\"\n                : \"bg-gray-600 text-gray-300 cursor-not-allowed\"\n            }`}\n        >\n          Add\n        </button>\n      </form>\n\n      {/* Dashboard Overview */}\n      <div className=\"p-4 bg-gray-800 rounded-lg\">\n        <h4 className=\"font-semibold mb-2\">Dashboard</h4>\n        <p className=\"text-sm mb-1\">\n          Total Tasks: <span className=\"font-bold\">{totalTasks}</span>\n        </p>\n        <ul className=\"text-xs space-y-1 mb-2\">\n          <li>To Do: {todoCount}</li>\n          <li>In Progress: {inProgressCount}</li>\n          <li>Done: {doneCount}</li>\n        </ul>\n        <p className=\"text-sm font-semibold\">\n          Progress: {progressPercentage}% Done\n        </p>\n        <div className=\"w-full bg-gray-700 rounded-full h-2.5 mt-2\">\n          <div\n            className=\"bg-blue-600 h-2.5 rounded-full\"\n            style={{ width: `${progressPercentage}%` }}\n          />\n        </div>\n\n        <p className=\"text-xs text-gray-400 mt-4\">{currentDate}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Modal, EmptyState } from \"packages/ui\";\nimport TaskForm from \"./components/TaskForm\"; // JS or TSX is fine\nimport AddColumnModal from \"./components/AddColumnModal\";\nimport Column from \"./components/Column\";\nimport Sidebar from \"./components/Sidebar\";\nimport { storage, BOARD_NS } from \"packages/storage\";\nimport { Link } from \"react-router-dom\";\n\nimport type { BoardColumn, Project, Task } from \"types/board\";\n\nconst DEFAULT_COLS: BoardColumn[] = [\n  { id: \"to-do\", title: \"To Do\" },\n  { id: \"in-progress\", title: \"In Progress\" },\n  { id: \"validation\", title: \"Validation\" },\n  { id: \"done\", title: \"Done\" },\n];\n\nconst BoardView: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [columns, setColumns] = useState<BoardColumn[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [selectedProject, setSelectedProject] = useState<Project | null>(null);\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const [isColumnModalOpen, setIsColumnModalOpen] = useState(false);\n  const [isDeleteTaskModalOpen, setIsDeleteTaskModalOpen] = useState(false);\n  const [taskToDeleteId, setTaskToDeleteId] = useState<string | null>(null);\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [columnToDeleteId, setColumnToDeleteId] = useState<string | null>(null);\n  const [isDeleteColumnModalOpen, setIsDeleteColumnModalOpen] = useState(false);\n  const [isProjectDeleteModalOpen, setIsProjectDeleteModalOpen] =\n    useState(false);\n  const [projectToDelete, setProjectToDelete] = useState<Project | null>(null);\n\n  const columnsRef = useRef<HTMLDivElement | null>(null);\n  const columnRefs = useRef<Record<string, HTMLDivElement | null>>({});\n\n  const setColumnRef = (id: string) => (el: HTMLDivElement | null) => {\n    columnRefs.current[id] = el;\n  };\n  // tabs/rail helpers\n  const scrollColumnsBy = (delta: number) => {\n    if (!columnsRef.current) return;\n    columnsRef.current.scrollBy({ left: delta, behavior: \"smooth\" });\n  };\n  const scrollToColumn = (colId: string) => {\n    const el = columnRefs.current[colId];\n    if (!el || !columnsRef.current) return;\n    const parent = columnsRef.current;\n    const left = el.offsetLeft - 16;\n    parent.scrollTo({ left, behavior: \"smooth\" });\n  };\n\n  // initial load\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      const savedProjects = storage.get<Project[]>(BOARD_NS, \"projects\", []);\n      const savedTasks = storage.get<Task[]>(BOARD_NS, \"tasks\", []);\n      const storedSelectedId = storage.get<string | null>(\n        BOARD_NS,\n        \"selectedProjectId\",\n        null\n      );\n\n      // normalize invalid statuses to \"to-do\"\n      const validStatuses = new Set([\n        \"to-do\",\n        \"in-progress\",\n        \"validation\",\n        \"done\",\n      ]);\n      const fixedTasks: Task[] = (savedTasks || []).map((t) => {\n        const status =\n          typeof t.status === \"string\" && validStatuses.has(t.status)\n            ? t.status\n            : \"to-do\";\n        return { ...t, status };\n      });\n\n      setTasks(fixedTasks);\n      if (JSON.stringify(fixedTasks) !== JSON.stringify(savedTasks)) {\n        storage.set(BOARD_NS, \"tasks\", fixedTasks);\n      }\n\n      setProjects(savedProjects);\n\n      if (savedProjects.length) {\n        const selected =\n          savedProjects.find((p) => p.id === storedSelectedId) || null;\n        setSelectedProject(selected);\n        setColumns(selected?.columns || []);\n      } else {\n        setSelectedProject(null);\n        setColumns([]);\n      }\n    } catch (e) {\n      console.error(\"Error loading board data:\", e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // mobile sidebar toggle (until we swap to Zustand UI store)\n  useEffect(() => {\n    const handler = () => setIsSidebarOpen((s) => !s);\n    window.addEventListener(\"app:toggleSidebar\", handler as EventListener);\n    return () =>\n      window.removeEventListener(\"app:toggleSidebar\", handler as EventListener);\n  }, []);\n\n  // project CRUD\n  const handleAddProject = (projectName: string) => {\n    if (!projectName) return;\n    const newProject: Project = {\n      id: `${projectName.toLowerCase().replace(/\\s+/g, \"-\")}-${Date.now()}`,\n      name: projectName,\n      columns: [...DEFAULT_COLS],\n    };\n    const updated = [...projects, newProject];\n    setProjects(updated);\n    storage.set(BOARD_NS, \"projects\", updated);\n\n    setSelectedProject(newProject);\n    setColumns([...DEFAULT_COLS]);\n    storage.set(BOARD_NS, \"selectedProjectId\", newProject.id);\n  };\n\n  const handleSelectProject = (project: Project | null) => {\n    setSelectedProject(project);\n    setColumns(project?.columns ?? DEFAULT_COLS);\n    project?.id\n      ? storage.set(BOARD_NS, \"selectedProjectId\", project.id)\n      : storage.remove(BOARD_NS, \"selectedProjectId\");\n  };\n\n  const confirmDeleteProject = (project: Project) => {\n    setProjectToDelete(project);\n    setIsProjectDeleteModalOpen(true);\n  };\n\n  const handleDeleteProject = () => {\n    if (!projectToDelete) return;\n    const updatedProjects = projects.filter((p) => p.id !== projectToDelete.id);\n    const updatedTasks = tasks.filter((t) => t.project !== projectToDelete.id);\n\n    setProjects(updatedProjects);\n    setTasks(updatedTasks);\n    storage.set(BOARD_NS, \"projects\", updatedProjects);\n    storage.set(BOARD_NS, \"tasks\", updatedTasks);\n\n    const nextSelected = updatedProjects[0] || null;\n    setSelectedProject(nextSelected);\n    setColumns(nextSelected?.columns || DEFAULT_COLS);\n    if (nextSelected) {\n      storage.set(BOARD_NS, \"selectedProjectId\", nextSelected.id);\n    } else {\n      storage.remove(BOARD_NS, \"selectedProjectId\");\n    }\n\n    setIsProjectDeleteModalOpen(false);\n    setProjectToDelete(null);\n  };\n\n  // drag/drop\n  const handleDragStart = (\n    e: React.DragEvent<HTMLDivElement>,\n    taskId: string\n  ) => {\n    e.dataTransfer.setData(\"taskId\", taskId);\n  };\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) =>\n    e.preventDefault();\n\n  const handleDrop = (\n    e: React.DragEvent<HTMLDivElement>,\n    newColumnId: string\n  ) => {\n    e.preventDefault();\n    const taskId = e.dataTransfer.getData(\"taskId\");\n    const nowISO = new Date().toISOString();\n\n    const updated = tasks.map((t) => {\n      if (t.id !== taskId) return t;\n      const wasDone = t.status === \"done\";\n      const willBeDone = newColumnId === \"done\";\n      return {\n        ...t,\n        status: newColumnId,\n        completedAt: willBeDone && !wasDone ? nowISO : (t.completedAt ?? null),\n      };\n    });\n\n    setTasks(updated);\n    storage.set(BOARD_NS, \"tasks\", updated);\n  };\n\n  // create/edit/delete\n  const handleAddTask = (columnId?: string | React.MouseEvent) => {\n    if (!selectedProject) return;\n    const isEventLike =\n      columnId &&\n      typeof columnId === \"object\" &&\n      (\"nativeEvent\" in columnId || \"target\" in columnId);\n    const status = isEventLike\n      ? \"to-do\"\n      : typeof columnId === \"string\"\n        ? columnId\n        : \"to-do\";\n\n    setEditingTask({\n      id: `temp-${Date.now()}`, // temporary until save\n      status,\n      title: \"\",\n      description: \"\",\n      assignee: \"\",\n      priority: \"Low\",\n      architecture: \"FE\",\n      project: selectedProject.id,\n      acceptanceCriteria: \"\",\n    });\n    setIsTaskModalOpen(true);\n  };\n\n  const handleEditTask = (task: Task) => {\n    setEditingTask(task);\n    setIsTaskModalOpen(true);\n  };\n\n  const confirmDeleteTask = (taskId: string) => {\n    setTaskToDeleteId(taskId);\n    setIsDeleteTaskModalOpen(true);\n  };\n\n  const handleDeleteTask = () => {\n    if (!taskToDeleteId) return;\n    const updated = tasks.filter((t) => t.id !== taskToDeleteId);\n    setTasks(updated);\n    storage.set(BOARD_NS, \"tasks\", updated);\n    setIsDeleteTaskModalOpen(false);\n    setTaskToDeleteId(null);\n  };\n\n  type DraftTask = Partial<Task> & { id?: string };\n\n  const handleSaveTask = (taskData: DraftTask) => {\n    const isNew = !taskData.id || taskData.id.startsWith(\"temp-\");\n    const dataToSave: Task = {\n      ...(taskData as Task),\n      id: isNew ? `task-${Date.now()}` : (taskData.id as string),\n      project: selectedProject?.id || (taskData.project as string),\n      storyId:\n        taskData.storyId ||\n        (isNew && selectedProject\n          ? nextStoryId(selectedProject.id)\n          : taskData.storyId),\n      acceptanceCriteria: taskData.acceptanceCriteria || \"\",\n    };\n\n    let updated: Task[];\n    if (editingTask && !isNew) {\n      updated = tasks.map((t) =>\n        t.id === dataToSave.id ? { ...dataToSave } : t\n      );\n    } else {\n      updated = [...tasks, dataToSave];\n    }\n\n    setTasks(updated);\n    storage.set(BOARD_NS, \"tasks\", updated);\n    setIsTaskModalOpen(false);\n    setEditingTask(null);\n  };\n\n  // columns\n  const confirmDeleteColumn = (columnId: string) => {\n    setColumnToDeleteId(columnId);\n    setIsDeleteColumnModalOpen(true);\n  };\n\n  const handleDeleteColumn = () => {\n    if (!selectedProject || !columnToDeleteId) return;\n    const updatedCols = columns.filter((c) => c.id !== columnToDeleteId);\n    const updatedTasks = tasks.filter((t) => t.status !== columnToDeleteId);\n\n    setColumns(updatedCols);\n    setTasks(updatedTasks);\n\n    const updatedProjects = projects.map((p) =>\n      p.id === selectedProject.id ? { ...p, columns: updatedCols } : p\n    );\n    setProjects(updatedProjects);\n\n    storage.set(BOARD_NS, \"projects\", updatedProjects);\n    storage.set(BOARD_NS, \"tasks\", updatedTasks);\n\n    setIsDeleteColumnModalOpen(false);\n    setColumnToDeleteId(null);\n  };\n\n  const handleAddColumn = (newTitle: string) => {\n    if (!newTitle || !selectedProject) return;\n    const newColumns = [\n      ...columns,\n      { id: newTitle.toLowerCase().replace(/\\s+/g, \"-\"), title: newTitle },\n    ];\n    setColumns(newColumns);\n\n    const updatedProjects = projects.map((p) =>\n      p.id === selectedProject.id ? { ...p, columns: newColumns } : p\n    );\n    setProjects(updatedProjects);\n    storage.set(BOARD_NS, \"projects\", updatedProjects);\n    setSelectedProject((prev) =>\n      prev && prev.id === selectedProject.id\n        ? { ...prev, columns: newColumns }\n        : prev\n    );\n\n    setIsColumnModalOpen(false);\n  };\n\n  // Per-project Story ID sequence (starts at 234567)\n  const nextStoryId = (projectId: string) => {\n    const map = storage.get<Record<string, number>>(BOARD_NS, \"storySeq\", {});\n    const current = Number(map[projectId] || 234567);\n    const id = `US${current}`;\n    map[projectId] = current + 1;\n    storage.set(BOARD_NS, \"storySeq\", map);\n    return id;\n  };\n\n  return (\n    <div className=\"h-screen w-full flex flex-col bg-gray-50 font-sans text-gray-800\">\n      {/* Middle row: sidebar + content */}\n      <div className=\"flex-1 min-h-0 w-full\">\n        <div className=\"relative h-full w-full flex overflow-hidden\">\n          {/* backdrop */}\n          <div\n            onClick={() => setIsSidebarOpen(false)}\n            className={`lg:hidden fixed inset-0 z-20 bg-black/40 transition-opacity duration-300 ${\n              isSidebarOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n            }`}\n          />\n          {/* Sidebar */}\n          <aside\n            aria-label=\"Documents sidebar\"\n            className={`\n              fixed lg:static inset-y-0 left-0 z-30 w-64 bg-gray-900 text-white\n              border-r border-gray-800 overflow-y-auto shrink-0\n              transform transition-transform duration-300 ease-in-out\n              ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n              lg:translate-x-0 lg:transform-none\n            `}\n          >\n            <div className=\"h-full p-4\">\n              <Sidebar\n                projects={projects}\n                selectedProject={selectedProject}\n                onSelectProject={handleSelectProject}\n                onAddProject={handleAddProject}\n                onConfirmDeleteProject={confirmDeleteProject}\n                isSidebarOpen={isSidebarOpen}\n                onToggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\n                tasks={tasks}\n              />\n            </div>\n          </aside>\n\n          {/* Right content */}\n          <main className=\"flex-1 min-w-0 h-full overflow-auto\">\n            <div className=\"h-full flex flex-col\">\n              {/* Title bar */}\n              <div className=\"bg-white border-b\">\n                {selectedProject && (\n                  <div className=\"mx-auto w-full max-w-7xl flex items-center justify-between px-6 py-4\">\n                    <div className=\"flex gap-2\">\n                      <h1 className=\"text-3xl font-bold text-gray-900\">\n                        {selectedProject\n                          ? `${selectedProject.name} Project`\n                          : \"Welcome\"}\n                      </h1>\n                      <button\n                        onClick={() => handleAddTask(\"to-do\")}\n                        className=\"px-4 py-2 rounded-lg shadow-md font-semibold bg-blue-500 text-white hover:bg-blue-600\"\n                      >\n                        Create Story\n                      </button>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <Link\n                        to=\"/board/stories\"\n                        className=\"px-4 py-2 rounded-lg border bg-white text-gray-700 hover:bg-gray-50 shadow-sm\"\n                        title=\"View all stories\"\n                      >\n                        US LookUp\n                      </Link>\n                      <button\n                        onClick={() =>\n                          selectedProject && setIsColumnModalOpen(true)\n                        }\n                        disabled={!selectedProject}\n                        className={`px-4 py-2 rounded-lg shadow-md font-semibold flex items-center ${\n                          selectedProject\n                            ? \"bg-green-500 text-white hover:bg-green-600\"\n                            : \"bg-gray-200 text-gray-400 cursor-not-allowed\"\n                        }`}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-5 w-5 mr-2\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                          stroke=\"currentColor\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                          />\n                        </svg>\n                        Add Column\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Content */}\n              {isLoading ? (\n                <div className=\"flex-1 flex items-center justify-center text-xl text-gray-600\">\n                  Loading board...\n                </div>\n              ) : !selectedProject ? (\n                <EmptyState\n                  title=\"Create your first project\"\n                  description={\n                    <>\n                      Use the{\" \"}\n                      <span className=\"font-medium\">“New project name”</span>{\" \"}\n                      field in the left sidebar to add a project. Once created,\n                      we’ll auto-add the columns <em>To Do</em>,{\" \"}\n                      <em>In Progress</em>, and <em>Done</em>.\n                    </>\n                  }\n                  bullets={[\n                    \"Your projects appear in the left panel.\",\n                    \"Click a project to open its board here.\",\n                    \"Use “Add Column” to customize the workflow.\",\n                  ]}\n                />\n              ) : (\n                <div className=\"flex-1 min-h-0 flex flex-col\">\n                  {/* Tabs bar */}\n                  <div className=\"bg-white border-b sticky top-0 z-10\">\n                    <div className=\"mx-auto w-full max-w-7xl flex items-center gap-3 px-4 py-3\">\n                      <button\n                        aria-label=\"Scroll left\"\n                        onClick={() => scrollColumnsBy(-320)}\n                        className={`${\n                          columns.length > 1 ? \"flex\" : \"hidden\"\n                        } h-8 w-8 shrink-0 items-center justify-center rounded-full border bg-white hover:bg-gray-50`}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-4 w-4\"\n                          viewBox=\"0 0 20 20\"\n                          fill=\"currentColor\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M12.293 15.707a1 1 0 010-1.414L8.414 10l3.879-4.293a1 1 0 10-1.586-1.414l-5 5a1 1 0 000 1.414l5 5a1 1 0 001.586-1.414z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </button>\n\n                      <div className=\"relative flex-1 overflow-hidden\">\n                        <div className=\"flex gap-2 overflow-x-auto tabs-scrollbar\">\n                          {columns.map((c) => (\n                            <button\n                              key={`tab-${c.id}`}\n                              onClick={() => scrollToColumn(c.id)}\n                              className=\"px-3 py-1.5 rounded-full text-sm border bg-gray-50 hover:bg-white hover:shadow-sm whitespace-nowrap\"\n                            >\n                              {c.title}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n\n                      <button\n                        aria-label=\"Scroll right\"\n                        onClick={() => scrollColumnsBy(320)}\n                        className={`${\n                          columns.length > 1 ? \"flex\" : \"hidden\"\n                        } h-8 w-8 shrink-0 items-center justify-center rounded-full border bg-white hover:bg-gray-50`}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-4 w-4\"\n                          viewBox=\"0 0 20 20\"\n                          fill=\"currentColor\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M7.707 4.293a1 1 0 010 1.414L11.586 10l-3.879 4.293a1 1 0 101.586 1.414l5-5a1 1 0 000-1.414l-5-5a1 1 0 00-1.586 0z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Columns rail */}\n                  <div className=\"flex-1 min-h-0\">\n                    <div\n                      ref={columnsRef}\n                      className=\"mx-auto w-full max-w-7xl h-full px-4 py-6 overflow-x-auto overflow-y-visible board-scrollbar\"\n                    >\n                      <div className=\"flex flex-row gap-2 pb-6\">\n                        {columns.map((column) => (\n                          <div\n                            key={`wrap-${column.id}`}\n                            ref={setColumnRef(column.id)}\n                            className=\"min-w-[320px] max-w-[360px]\"\n                          >\n                            <Column\n                              id={column.id}\n                              title={column.title}\n                              tasks={tasks.filter(\n                                (t) =>\n                                  selectedProject &&\n                                  t.project === selectedProject.id\n                              )}\n                              onAddTask={handleAddTask}\n                              onDrop={handleDrop}\n                              onDragOver={handleDragOver}\n                              onDragStart={handleDragStart}\n                              onEditTask={handleEditTask}\n                              onConfirmDeleteTask={confirmDeleteTask}\n                              onConfirmDeleteColumn={confirmDeleteColumn}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </main>\n        </div>\n      </div>\n\n      {/* Modals */}\n      <Modal\n        isOpen={isTaskModalOpen}\n        onClose={() => setIsTaskModalOpen(false)}\n        title={editingTask && editingTask.id ? \"Edit Story\" : \"New Story\"}\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <TaskForm\n          task={\n            editingTask || {\n              id: `temp-${Date.now()}`,\n              title: \"\",\n              description: \"\",\n              assignee: \"\",\n              priority: \"Low\",\n              architecture: \"FE\",\n              project: selectedProject?.id || \"\",\n              status: \"to-do\",\n            }\n          }\n          onSave={handleSaveTask}\n          onCancel={() => setIsTaskModalOpen(false)}\n        />\n      </Modal>\n\n      <Modal\n        isOpen={isColumnModalOpen}\n        onClose={() => setIsColumnModalOpen(false)}\n        title=\"Add Column\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <AddColumnModal\n          onSave={handleAddColumn}\n          onCancel={() => setIsColumnModalOpen(false)}\n        />\n      </Modal>\n\n      <Modal\n        isOpen={isDeleteTaskModalOpen}\n        onClose={() => setIsDeleteTaskModalOpen(false)}\n        title=\"Confirm Delete\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <p className=\"text-gray-700\">\n          Are you sure you want to delete this task?\n        </p>\n        <div className=\"flex justify-between space-x-4 mt-6\">\n          <button\n            onClick={() => setIsDeleteTaskModalOpen(false)}\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors duration-200\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleDeleteTask}\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n\n      <Modal\n        isOpen={isDeleteColumnModalOpen}\n        onClose={() => setIsDeleteColumnModalOpen(false)}\n        title=\"Confirm Delete\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <p className=\"text-gray-700\">\n          Are you sure you want to delete this column and all its tasks? This\n          action cannot be undone.\n        </p>\n        <div className=\"flex justify-between space-x-4 mt-6\">\n          <button\n            onClick={() => setIsDeleteColumnModalOpen(false)}\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors duration-200\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleDeleteColumn}\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n\n      <Modal\n        isOpen={isProjectDeleteModalOpen}\n        onClose={() => setIsProjectDeleteModalOpen(false)}\n        title=\"Confirm Delete Project\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <p className=\"text-gray-700\">\n          Are you sure you want to delete the project \"{projectToDelete?.name}\"?\n          This will permanently delete all associated tasks.\n        </p>\n        <div className=\"flex justify-between space-x-4 mt-6\">\n          <button\n            onClick={() => setIsProjectDeleteModalOpen(false)}\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors duration-200\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleDeleteProject}\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BoardView;\n","import React from 'react';\nimport BoardView from '../../features/board/BoardView';\n\nexport default function BoardApp() {\n  return <BoardView />;\n}\n","import React, { useRef, useState } from \"react\";\n\ntype Props = {\n  value: string[];\n  onChange: (next: string[]) => void;\n  placeholder?: string;\n  className?: string;\n  /** If true, trims and dedups automatically */\n  dedupe?: boolean;\n};\n\nconst ChipInput: React.FC<Props> = ({\n  value,\n  onChange,\n  placeholder = \"Add and press Enter\",\n  className = \"\",\n  dedupe = true,\n}) => {\n  const [draft, setDraft] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const commit = (raw: string) => {\n    const v = raw.trim();\n    if (!v) return;\n    const next = dedupe ? Array.from(new Set([...value, v])) : [...value, v];\n    onChange(next);\n    setDraft(\"\");\n  };\n\n  const splitAndCommit = (raw: string) => {\n    const parts = raw\n      .split(/[,;]/g)\n      .map((s) => s.trim())\n      .filter(Boolean);\n    if (!parts.length) return;\n    const base = new Set(value);\n    const next = dedupe\n      ? [...new Set([...value, ...parts])]\n      : [...value, ...parts];\n    if (next.length !== value.length || parts.some((p) => !base.has(p))) {\n      onChange(next);\n    }\n    setDraft(\"\");\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      // allow comma-separated on enter too\n      splitAndCommit(draft);\n    } else if (e.key === \"Backspace\" && !draft && value.length) {\n      // remove last chip\n      onChange(value.slice(0, -1));\n    } else if (e.key === \",\" || e.key === \";\") {\n      e.preventDefault();\n      splitAndCommit(draft);\n    }\n  };\n\n  const removeAt = (idx: number) => {\n    const next = value.filter((_, i) => i !== idx);\n    onChange(next);\n    // keep focus for fast editing\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div\n      className={[\n        \"flex flex-wrap gap-2 rounded border bg-white px-2 py-2\",\n        className,\n      ].join(\" \")}\n      onClick={() => inputRef.current?.focus()}\n    >\n      {value.map((chip, i) => (\n        <span\n          key={`${chip}-${i}`}\n          className=\"inline-flex items-center gap-1 rounded-full bg-gray-100 px-2 py-0.5 text-xs text-gray-800\"\n        >\n          {chip}\n          <button\n            type=\"button\"\n            aria-label={`Remove ${chip}`}\n            className=\"rounded p-0.5 hover:bg-gray-200\"\n            onClick={() => removeAt(i)}\n          >\n            ✕\n          </button>\n        </span>\n      ))}\n\n      <input\n        ref={inputRef}\n        value={draft}\n        onChange={(e) => setDraft(e.target.value)}\n        onKeyDown={onKeyDown}\n        onBlur={() => commit(draft)}\n        placeholder={value.length ? \"\" : placeholder}\n        className=\"min-w-[8ch] flex-1 outline-none text-sm placeholder:text-gray-400 bg-transparent\"\n      />\n    </div>\n  );\n};\n\nexport default ChipInput;\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  type?: \"button\" | \"submit\" | \"reset\";\n  className?: string;\n  title?: string;\n  disabled?: boolean;\n};\n\nconst IconButton: React.FC<Props> = ({\n  children,\n  onClick,\n  type = \"button\",\n  className = \"\",\n  title,\n  disabled,\n}) => (\n  <button\n    type={type}\n    title={title}\n    disabled={disabled}\n    onClick={onClick}\n    className={[\n      \"inline-flex items-center gap-1 rounded border px-3 py-1.5 text-sm\",\n      \"bg-white hover:bg-gray-50 text-gray-700\",\n      \"disabled:opacity-60 disabled:cursor-not-allowed\",\n      className,\n    ].join(\" \")}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import React from \"react\";\n\ntype EmptyStateProps = {\n  title: string;\n  description?: React.ReactNode;\n  bullets?: React.ReactNode[];\n  action?: React.ReactNode; // e.g. a CTA button\n  className?: string;\n};\n\nconst EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  bullets,\n  action,\n  className = \"rounded-xl border bg-white p-8\",\n}) => {\n  return (\n    <div className={className}>\n      <h2 className=\"text-2xl font-semibold text-gray-900\">{title}</h2>\n      {description && (\n        <div className=\"mt-2 text-gray-600 text-sm\">{description}</div>\n      )}\n      {bullets?.length ? (\n        <ul className=\"mt-3 list-disc pl-5 space-y-1 text-sm text-gray-700\">\n          {bullets.map((b, i) => (\n            <li key={i}>{b}</li>\n          ))}\n        </ul>\n      ) : null}\n      {action && <div className=\"mt-4\">{action}</div>}\n    </div>\n  );\n};\n\nexport default EmptyState;\n","import React from \"react\";\nimport useProjectHub from \"../../hooks/useProjectHub\";\n\ntype Props = { title: string; right?: React.ReactNode };\n\nconst SectionHeader: React.FC<Props> = ({ title, right }) => {\n  const { selected } = useProjectHub();\n  return (\n    <div className=\"flex items-center justify-between\">\n      <h2 className=\"text-2xl font-bold\">{title}</h2>\n      {right ?? (\n        <div className=\"text-sm text-gray-500\">\n          {selected ? `Project: ${selected.name}` : \"No project selected\"}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SectionHeader;\n","import React from \"react\";\n\ntype ModalProps = {\n    isOpen: boolean;\n    onClose: () => void;\n    title?: string;\n    children: React.ReactNode;\n    className?: string;\n    /** Optional: close when clicking the scrim (default true) */\n    closeOnBackdrop?: boolean;\n};\n\nconst Modal: React.FC<ModalProps> = ({\n    isOpen,\n    onClose,\n    title,\n    children,\n    className = \"bg-white rounded-xl shadow-lg p-6\",\n    closeOnBackdrop = true,\n}) => {\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"fixed inset-0 z-50\">\n            <div\n                className=\"absolute inset-0 bg-black/50\"\n                onClick={closeOnBackdrop ? onClose : undefined}\n            />\n            <div className=\"absolute left-1/2 top-20 -translate-x-1/2 w-full max-w-lg\">\n                <div className={className} role=\"dialog\" aria-modal>\n                    {title && (\n                        <div className=\"flex items-center justify-between mb-4\">\n                            <h3 className=\"text-lg font-semibold\">{title}</h3>\n                            <button\n                                aria-label=\"Close modal\"\n                                onClick={onClose}\n                                className=\"rounded p-1 hover:bg-gray-100\"\n                            >\n                                ✕\n                            </button>\n                        </div>\n                    )}\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Modal;","import { useProjectHubContext } from \"../features/projectHub/context\";\nimport type { ProjectHubContextValue } from \"../types/project-hub\";\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n","import React, { useState } from \"react\";\n\ntype Props = {\n  value: string;\n  className?: string;\n};\n\nconst SecretText: React.FC<Props> = ({ value, className }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className={[\"inline-flex items-center gap-2\", className].join(\" \")}>\n      <code className=\"rounded bg-gray-100 px-2 py-1\">\n        {show ? value : \"••••••••\"}\n      </code>\n      <button\n        type=\"button\"\n        onClick={() => setShow((s) => !s)}\n        className=\"text-xs rounded border px-2 py-1 hover:bg-gray-50\"\n      >\n        {show ? \"Hide\" : \"Show\"}\n      </button>\n    </div>\n  );\n};\n\nexport default SecretText;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { storage, HUB_NS } from \"../../packages/storage\";\nimport type {\n  HubProject,\n  ProjectHubContextValue,\n} from \"../../types/project-hub\";\n\nconst LIST_KEY = \"projects\"; // NOT \"hub:projects\" (ns already applied)\nconst SELECTED_KEY = \"selectedProjectId\";\n\nfunction loadProjects(): HubProject[] {\n  return storage.get<HubProject[]>(HUB_NS, LIST_KEY, []);\n}\nfunction persistProjects(list: HubProject[]) {\n  storage.set(HUB_NS, LIST_KEY, list);\n}\n\nexport const ProjectHubContext = createContext<\n  ProjectHubContextValue | undefined\n>(undefined);\nexport const useProjectHubContext = () => useContext(ProjectHubContext);\n\nexport function ProjectHubProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [projects, setProjects] = useState<HubProject[]>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  const refresh = () => setProjects(loadProjects());\n\n  useEffect(() => {\n    refresh();\n    setSelectedId(storage.get<string | null>(HUB_NS, SELECTED_KEY, null));\n  }, []);\n\n  useEffect(() => {\n    if (selectedId) storage.set(HUB_NS, SELECTED_KEY, selectedId);\n    else storage.remove(HUB_NS, SELECTED_KEY);\n  }, [selectedId]);\n\n  const selected = useMemo<HubProject | null>(\n    () => projects.find((p) => p.id === selectedId) || null,\n    [projects, selectedId]\n  );\n\n  const selectProject = (id: string | null) => setSelectedId(id);\n\n  const addProject = (name: string): HubProject | null => {\n    const n = (name || \"\").trim();\n    if (!n) return null;\n\n    // de-dup by case-insensitive name\n    if (projects.some((p) => p.name.toLowerCase() === n.toLowerCase()))\n      return null;\n\n    const id = `${n.toLowerCase().replace(/\\s+/g, \"-\")}-${Date.now()}`;\n    const proj: HubProject = { id, name: n, sections: {} };\n    const next = [...projects, proj];\n\n    setProjects(next);\n    persistProjects(next);\n    setSelectedId(id);\n    return proj;\n  };\n\n  // Hub-only delete (does NOT touch Board data)\n  const deleteProject = (id: string) => {\n    const next = projects.filter((p) => p.id !== id);\n    setProjects(next);\n    persistProjects(next);\n    if (selectedId === id) setSelectedId(null);\n  };\n\n  const updateSection = (sectionKey: string, data: unknown) => {\n    if (!selectedId) return;\n    const next = projects.map((p) =>\n      p.id !== selectedId\n        ? p\n        : { ...p, sections: { ...(p.sections || {}), [sectionKey]: data } }\n    );\n    setProjects(next);\n    persistProjects(next);\n  };\n\n  const value: ProjectHubContextValue = {\n    projects,\n    selected,\n    selectedId,\n    setSelectedId,\n    selectProject,\n    addProject,\n    deleteProject,\n    updateSection,\n    refresh,\n  };\n\n  return (\n    <ProjectHubContext.Provider value={value}>\n      {children}\n    </ProjectHubContext.Provider>\n  );\n}\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n"],"names":["fmtHuman","d","Date","toLocaleDateString","_unused","TaskForm","_ref","_task$title","_task$description","_task$acceptanceCrite","_task$assignee","_ref2","_ref3","_task$createdAt","_task$dueDate","task","onSave","onCancel","register","handleSubmit","formState","errors","isSubmitting","useForm","defaultValues","title","description","acceptanceCriteria","assignee","priority","architecture","createdAt","toISOString","slice","dueDate","id","project","status","storyId","_jsxs","onSubmit","data","_task$id","_task$project","_task$status","_task$storyId","_objectSpread","className","children","_jsx","required","type","placeholder","message","value","rows","onClick","disabled","setTitle","useState","e","preventDefault","onChange","target","priorityColors","High","Medium","Low","onDragStart","onEdit","concat","draggable","String","tasks","onAddTask","onDrop","onDragOver","onEditTask","onConfirmDeleteTask","onConfirmDeleteColumn","columnTasks","filter","length","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","style","scrollbarWidth","scrollbarColor","map","TaskCard","onDelete","projects","selectedProject","onSelectProject","onAddProject","isSidebarOpen","onToggleSidebar","onConfirmDeleteProject","onOpenDocuments","newProjectName","setNewProjectName","projectTasks","todoCount","t","inProgressCount","doneCount","totalTasks","progressPercentage","Math","round","currentDate","weekday","year","month","day","name","stopPropagation","trim","some","p","toLowerCase","width","DEFAULT_COLS","BoardView","setTasks","columns","setColumns","setProjects","setSelectedProject","setIsSidebarOpen","isTaskModalOpen","setIsTaskModalOpen","isColumnModalOpen","setIsColumnModalOpen","isDeleteTaskModalOpen","setIsDeleteTaskModalOpen","taskToDeleteId","setTaskToDeleteId","editingTask","setEditingTask","isLoading","setIsLoading","columnToDeleteId","setColumnToDeleteId","isDeleteColumnModalOpen","setIsDeleteColumnModalOpen","isProjectDeleteModalOpen","setIsProjectDeleteModalOpen","projectToDelete","setProjectToDelete","columnsRef","useRef","columnRefs","scrollColumnsBy","delta","current","scrollBy","left","behavior","useEffect","savedProjects","storage","get","BOARD_NS","savedTasks","storedSelectedId","validStatuses","Set","fixedTasks","has","JSON","stringify","set","selected","find","console","error","handler","s","window","addEventListener","removeEventListener","handleDragStart","taskId","dataTransfer","setData","handleDragOver","handleDrop","newColumnId","getData","nowISO","updated","_t$completedAt","wasDone","willBeDone","completedAt","handleAddTask","columnId","now","handleEditTask","confirmDeleteTask","confirmDeleteColumn","nextStoryId","projectId","Number","Sidebar","_project$columns","remove","projectName","newProject","replace","Link","to","fillRule","clipRule","c","colId","el","parent","offsetLeft","scrollTo","scrollToColumn","ref","column","Column","EmptyState","_Fragment","bullets","Modal","isOpen","onClose","taskData","isNew","startsWith","dataToSave","AddColumnModal","newTitle","newColumns","updatedProjects","prev","handleDeleteTask","handleDeleteColumn","updatedCols","updatedTasks","handleDeleteProject","nextSelected","BoardApp","dedupe","draft","setDraft","inputRef","splitAndCommit","raw","parts","split","Boolean","base","next","join","_inputRef$current2","focus","chip","i","idx","_inputRef$current","_","removeAt","onKeyDown","key","onBlur","v","Array","from","commit","action","b","right","useProjectHub","closeOnBackdrop","undefined","role","ctx","useProjectHubContext","Error","show","setShow","LIST_KEY","SELECTED_KEY","persistProjects","list","HUB_NS","ProjectHubContext","createContext","useContext","ProjectHubProvider","selectedId","setSelectedId","refresh","useMemo","selectProject","addProject","n","proj","sections","deleteProject","updateSection","sectionKey","Provider"],"sourceRoot":""}