{"version":3,"file":"static/js/6.43ef570d.chunk.js","mappings":"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","sources":["features/innovationLab/components/IdeaCard.tsx","features/innovationLab/ideaStorage.ts","features/innovationLab/GalleryView.tsx","features/innovationLab/DetailView.tsx","app/ideas/App.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  FiStar,\n  FiUsers,\n  FiTarget,\n  FiTrendingUp,\n  FiAlertTriangle,\n} from \"react-icons/fi\";\nimport type { Idea } from \"types/innovationLab\";\n\ntype Props = {\n  idea: Idea;\n  onOpen: (id: string) => void;\n  onToggleStar: (id: string) => void;\n};\n\nconst TYPE_TONES: Record<\n  NonNullable<Idea[\"ideaType\"]>,\n  { bg: string; border: string; chip: string }\n> = {\n  Product: {\n    bg: \"from-blue-50 to-white\",\n    border: \"border-blue-200\",\n    chip: \"bg-blue-100 text-blue-700\",\n  },\n  Feature: {\n    bg: \"from-violet-50 to-white\",\n    border: \"border-violet-200\",\n    chip: \"bg-violet-100 text-violet-700\",\n  },\n  Tooling: {\n    bg: \"from-amber-50 to-white\",\n    border: \"border-amber-200\",\n    chip: \"bg-amber-100 text-amber-800\",\n  },\n  Research: {\n    bg: \"from-emerald-50 to-white\",\n    border: \"border-emerald-200\",\n    chip: \"bg-emerald-100 text-emerald-700\",\n  },\n  Infra: {\n    bg: \"from-slate-50 to-white\",\n    border: \"border-slate-200\",\n    chip: \"bg-slate-100 text-slate-700\",\n  },\n};\n\nfunction Chip({\n  className = \"\",\n  children,\n}: React.PropsWithChildren<{ className?: string }>) {\n  return (\n    <span\n      className={`inline-flex items-center rounded-full px-2.5 py-1 text-xs font-medium ${className}`}\n    >\n      {children}\n    </span>\n  );\n}\n\nfunction iceTone(score: number) {\n  if (score >= 6) return \"bg-green-100 text-green-800 ring-1 ring-green-200\";\n  if (score >= 3) return \"bg-amber-100 text-amber-800 ring-1 ring-amber-200\";\n  return \"bg-rose-100 text-rose-800 ring-1 ring-rose-200\";\n}\n\nconst IdeaCard: React.FC<Props> = ({ idea, onOpen, onToggleStar }) => {\n  const tone = TYPE_TONES[idea.ideaType || \"Feature\"];\n  const ice = (idea.impact ?? 0) + (idea.confidence ?? 0) - (idea.effort ?? 0);\n  const updated = new Date(\n    idea.updatedAt || idea.createdAt\n  ).toLocaleDateString();\n\n  const tagList = (idea.tags ?? []).slice(0, 3);\n  const extraTags = (idea.tags?.length ?? 0) - tagList.length;\n\n  const audienceCount = idea.targetAudience?.length ?? 0;\n  const s = idea.swot || {\n    strengths: [],\n    weaknesses: [],\n    opportunities: [],\n    threats: [],\n  };\n\n  return (\n    <div\n      role=\"button\"\n      onClick={() => onOpen(idea.id)}\n      className={`group rounded-xl border ${tone.border} bg-gradient-to-br ${tone.bg} p-4 shadow-sm hover:shadow transition hover:-translate-y-0.5 cursor-pointer`}\n    >\n      {/* header actions */}\n      <div className=\"flex items-center justify-between\">\n        <button\n          type=\"button\"\n          className=\"shrink-0 p-1 rounded hover:bg-white/70\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onToggleStar(idea.id);\n          }}\n          aria-label={idea.starred ? \"Unstar\" : \"Star\"}\n          title={idea.starred ? \"Unstar\" : \"Star\"}\n        >\n          <FiStar\n            className={\n              idea.starred ? \"text-yellow-500 fill-yellow-400\" : \"text-gray-400\"\n            }\n          />\n        </button>\n\n        <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n          <span>Updated</span>\n          <span className=\"font-medium\">{updated}</span>\n        </div>\n      </div>\n\n      {/* title & one-liner */}\n      <div className=\"mt-2\">\n        <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-1\">\n          {idea.title || \"Untitled\"}\n        </h3>\n        {idea.oneLiner ? (\n          <p className=\"mt-1 text-sm text-gray-600 line-clamp-2\">\n            {idea.oneLiner}\n          </p>\n        ) : null}\n      </div>\n\n      {/* chips row */}\n      <div className=\"mt-3 flex flex-wrap items-center gap-2\">\n        <Chip className={`${tone.chip}`}>{idea.ideaType || \"Feature\"}</Chip>\n        <Chip className=\"bg-gray-100 text-gray-700\">{idea.status}</Chip>\n        <span className=\"text-xs text-gray-500\">ICE:</span>\n        <Chip className={iceTone(ice)}>ICE: {ice}</Chip>\n      </div>\n\n      {/* tags */}\n      {(tagList.length > 0 || audienceCount > 0) && (\n        <div className=\"mt-3 flex flex-wrap items-center gap-2\">\n          {tagList.map((t) => (\n            <Chip\n              key={t}\n              className=\"bg-white/80 text-gray-700 ring-1 ring-gray-200\"\n            >\n              {t}\n            </Chip>\n          ))}\n          {extraTags > 0 && (\n            <Chip className=\"bg-white/80 text-gray-600 ring-1 ring-gray-200\">\n              +{extraTags} more\n            </Chip>\n          )}\n          {audienceCount > 0 && (\n            <Chip className=\"ml-auto bg-sky-100 text-sky-800 ring-1 ring-sky-200\">\n              <FiUsers className=\"mr-1\" /> {audienceCount}\n            </Chip>\n          )}\n        </div>\n      )}\n\n      {/* SWOT micro-summary */}\n      {(s.strengths.length || s.opportunities.length) && (\n        <div className=\"mt-3 flex items-center gap-3 text-xs text-gray-600\">\n          {s.strengths.length > 0 && (\n            <span className=\"inline-flex items-center gap-1\">\n              <FiTrendingUp className=\"text-green-600\" /> {s.strengths.length}{\" \"}\n              Strength\n              {s.strengths.length > 1 ? \"s\" : \"\"}\n            </span>\n          )}\n          {s.opportunities.length > 0 && (\n            <span className=\"inline-flex items-center gap-1\">\n              <FiTarget className=\"text-indigo-600\" /> {s.opportunities.length}{\" \"}\n              Opp\n            </span>\n          )}\n          {s.threats.length > 0 && (\n            <span className=\"inline-flex items-center gap-1\">\n              <FiAlertTriangle className=\"text-rose-600\" /> {s.threats.length}{\" \"}\n              Threat\n              {s.threats.length > 1 ? \"s\" : \"\"}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default IdeaCard;\n","import { storage, IDEAS_NS } from \"packages/storage\";\nimport type { Idea } from \"types/innovationLab\";\n\nconst KEY = \"items\";\n\nexport function loadIdeas(): Idea[] {\n  return storage.get<Idea[]>(IDEAS_NS, KEY, []);\n}\nexport function saveIdeas(list: Idea[]) {\n  storage.set(IDEAS_NS, KEY, list);\n}\nexport function getIdeaById(id: string): Idea | null {\n  return loadIdeas().find((i) => i.id === id) ?? null;\n}\nexport function upsertIdea(idea: Idea): Idea[] {\n  const list = loadIdeas();\n  const ix = list.findIndex((i) => i.id === idea.id);\n  const next =\n    ix >= 0\n      ? [...list.slice(0, ix), idea, ...list.slice(ix + 1)]\n      : [idea, ...list];\n  saveIdeas(next);\n  return next;\n}\nexport function deleteIdea(id: string) {\n  saveIdeas(loadIdeas().filter((i) => i.id !== id));\n}\nexport function newIdeaSeed(): Idea {\n  const now = new Date().toISOString();\n  return {\n    id: `idea_${Date.now()}`,\n    title: \"\",\n    tags: [],\n    ideaType: \"Feature\",\n    status: \"Draft\",\n    impact: 0,\n    effort: 0,\n    confidence: 0,\n    swot: {\n      strengths: [],\n      weaknesses: [],\n      opportunities: [],\n      threats: [],\n    },\n    businessModel: \"\",\n    targetAudience: [],\n    createdAt: now,\n    updatedAt: now,\n  };\n}\n/** Very lightweight MD exporter (expand later as you add fields) */\nexport function ideaToMarkdown(i: Idea): string {\n  const ice = (i.impact ?? 0) + (i.confidence ?? 0) - (i.effort ?? 0);\n  const sw = i.swot ?? {\n    strengths: [],\n    weaknesses: [],\n    opportunities: [],\n    threats: [],\n  };\n\n  const swotBlock =\n    sw.strengths.length ||\n    sw.weaknesses.length ||\n    sw.opportunities.length ||\n    sw.threats.length\n      ? [\n          \"## SWOT\",\n          \"\",\n          \"### Strengths\",\n          sw.strengths.length\n            ? sw.strengths.map((s) => `- ${s}`).join(\"\\n\")\n            : \"- —\",\n          \"\",\n          \"### Weaknesses\",\n          sw.weaknesses.length\n            ? sw.weaknesses.map((s) => `- ${s}`).join(\"\\n\")\n            : \"- —\",\n          \"\",\n          \"### Opportunities\",\n          sw.opportunities.length\n            ? sw.opportunities.map((s) => `- ${s}`).join(\"\\n\")\n            : \"- —\",\n          \"\",\n          \"### Threats\",\n          sw.threats.length\n            ? sw.threats.map((s) => `- ${s}`).join(\"\\n\")\n            : \"- —\",\n          \"\",\n        ].join(\"\\n\")\n      : \"\";\n\n  const businessModelBlock = i.businessModel\n    ? `## Business Model\\n${i.businessModel}\\n`\n    : \"\";\n\n  const audienceBlock =\n    (i.targetAudience?.length ?? 0) > 0\n      ? `## Target Audience\\n${i.targetAudience!.map((a) => `- ${a}`).join(\"\\n\")}\\n`\n      : \"\";\n\n  return [\n    `# ${i.title || \"Untitled idea\"}`,\n    \"\",\n    `**Type:** ${i.ideaType}   **Status:** ${i.status}   **ICE:** ${ice}`,\n    i.oneLiner ? `\\n> ${i.oneLiner}\\n` : \"\",\n    i.problem ? `\\n## Problem\\n${i.problem}\\n` : \"\",\n    i.coreApproach ? `\\n## Core approach\\n${i.coreApproach}\\n` : \"\",\n    businessModelBlock,\n    audienceBlock,\n    swotBlock,\n    i.valueNotes ? `\\n## Value / Why now\\n${i.valueNotes}\\n` : \"\",\n    i.risks?.length ? `\\n## Risks\\n- ${i.risks.join(\"\\n- \")}\\n` : \"\",\n    i.links?.length\n      ? `\\n## Links\\n${i.links.map((l) => `- [${l.label || l.url}](${l.url})`).join(\"\\n\")}\\n`\n      : \"\",\n  ]\n    .filter(Boolean)\n    .join(\"\\n\");\n}\n","import React, { useMemo, useState } from \"react\";\nimport { FiPlus, FiSearch, FiFilter, FiStar } from \"react-icons/fi\";\nimport type { Idea, IdeaStatus, IdeaType } from \"types/ideas\";\nimport IdeaCard from \"./components/IdeaCard\";\nimport { loadIdeas, saveIdeas, newIdeaSeed } from \"./ideaStorage\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst STATUSES: IdeaStatus[] = [\n  \"Draft\",\n  \"Exploring\",\n  \"Planned\",\n  \"Building\",\n  \"Shipped\",\n  \"Archived\",\n];\nconst TYPES: IdeaType[] = [\n  \"Product\",\n  \"Feature\",\n  \"Tooling\",\n  \"Research\",\n  \"Infra\",\n];\n\nconst GalleryView: React.FC = () => {\n  const navigate = useNavigate();\n\n  // TS-safe lazy initializer: pass the function reference\n  const [ideas, setIdeas] = useState<Idea[]>(loadIdeas);\n\n  const [q, setQ] = useState(\"\");\n  const [status, setStatus] = useState<IdeaStatus | \"All\">(\"All\");\n  const [type, setType] = useState<IdeaType | \"All\">(\"All\");\n  const [onlyStarred, setOnlyStarred] = useState(false);\n  const [sortBy, setSortBy] = useState<\"updated\" | \"ice\">(\"ice\");\n\n  const filtered = useMemo(() => {\n    const ql = q.toLowerCase().trim();\n    let list = ideas.filter((i) => {\n      const text =\n        `${i.title} ${i.oneLiner ?? \"\"} ${i.tags?.join(\" \")}`.toLowerCase();\n      if (ql && !text.includes(ql)) return false;\n      if (status !== \"All\" && i.status !== status) return false;\n      if (type !== \"All\" && i.ideaType !== type) return false;\n      if (onlyStarred && !i.starred) return false;\n      return true;\n    });\n\n    if (sortBy === \"ice\") {\n      list = list.slice().sort((a, b) => {\n        const sa = (a.impact ?? 0) + (a.confidence ?? 0) - (a.effort ?? 0);\n        const sb = (b.impact ?? 0) + (b.confidence ?? 0) - (b.effort ?? 0);\n        return sb - sa;\n      });\n    } else {\n      list = list\n        .slice()\n        .sort(\n          (a, b) =>\n            new Date(b.updatedAt || b.createdAt).getTime() -\n            new Date(a.updatedAt || a.createdAt).getTime()\n        );\n    }\n    return list;\n  }, [ideas, q, status, type, onlyStarred, sortBy]);\n\n  const addIdea = () => {\n    const draft = newIdeaSeed();\n    draft.title = \"New idea\";\n    const next = [draft, ...ideas];\n    setIdeas(next);\n    saveIdeas(next);\n    navigate(`/ideas/${draft.id}`);\n  };\n\n  const openIdea = (id: string) => navigate(`/ideas/${id}`);\n\n  const toggleStar = (id: string) => {\n    const next = ideas.map((i) =>\n      i.id === id\n        ? { ...i, starred: !i.starred, updatedAt: new Date().toISOString() }\n        : i\n    );\n    setIdeas(next);\n    saveIdeas(next);\n  };\n\n  // Quick-pill helpers\n  const toggleStatusPill = (s: IdeaStatus) =>\n    setStatus((cur) => (cur === s ? \"All\" : s));\n  const toggleTypePill = (t: IdeaType) =>\n    setType((cur) => (cur === t ? \"All\" : t));\n\n  return (\n    <div className=\"h-full w-full\">\n      <div className=\"mx-auto w-full max-w-7xl p-4\">\n        {/* Header */}\n        <div className=\"flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"inline-flex h-7 w-7 items-center justify-center rounded-lg bg-indigo-600 text-white text-sm\">\n                💡\n              </span>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                Innovation Lab\n              </h1>\n            </div>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Capture sparks, filter by status/type, and prioritize by ICE.\n            </p>\n          </div>\n\n          <div className=\"flex items-center gap-3\">\n            <span className=\"hidden sm:inline text-sm text-gray-500\">\n              {filtered.length} result{filtered.length === 1 ? \"\" : \"s\"}\n            </span>\n            <button\n              onClick={addIdea}\n              className=\"inline-flex items-center gap-2 rounded-lg bg-gradient-to-r from-blue-600 to-indigo-600 px-4 py-2 text-white shadow-sm transition hover:from-blue-700 hover:to-indigo-700 active:translate-y-[1px]\"\n            >\n              <FiPlus className=\"text-base\" />\n              <span className=\"font-medium\">New Idea</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Sticky filter bar */}\n        <div className=\"sticky top-0 z-10 mt-4 rounded-xl border border-gray-200 bg-white/80 shadow-sm backdrop-blur supports-[backdrop-filter]:bg-white/65\">\n          <div className=\"grid grid-cols-1 gap-3 p-3 sm:grid-cols-5\">\n            {/* Search */}\n            <div className=\"relative sm:col-span-2\">\n              <FiSearch className=\"pointer-events-none absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\n              <input\n                value={q}\n                onChange={(e) => setQ(e.target.value)}\n                placeholder=\"Search ideas…\"\n                className=\"w-full rounded-lg border border-gray-200 bg-white px-9 py-2 text-sm outline-none focus:border-indigo-400\"\n              />\n            </div>\n\n            {/* Status */}\n            <div className=\"flex items-center gap-2\">\n              <FiFilter className=\"hidden text-gray-400 sm:block\" />\n              <select\n                value={status}\n                onChange={(e) => setStatus(e.target.value as any)}\n                className=\"w-full rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm outline-none focus:border-indigo-400\"\n              >\n                <option>All</option>\n                {STATUSES.map((s) => (\n                  <option key={s}>{s}</option>\n                ))}\n              </select>\n            </div>\n\n            {/* Type */}\n            <div>\n              <select\n                value={type}\n                onChange={(e) => setType(e.target.value as any)}\n                className=\"w-full rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm outline-none focus:border-indigo-400\"\n              >\n                <option>All</option>\n                {TYPES.map((t) => (\n                  <option key={t}>{t}</option>\n                ))}\n              </select>\n            </div>\n\n            {/* Star + Sort */}\n            {/* Star + Sort */}\n            <div className=\"flex items-center justify-between gap-2\">\n              <button\n                type=\"button\"\n                onClick={() => setOnlyStarred((v) => !v)}\n                className={`inline-flex items-center gap-2 rounded-full px-3 py-1.5 text-sm transition ${onlyStarred ? \"bg-yellow-100 text-yellow-800 ring-1 ring-yellow-200\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`}\n                title=\"Toggle starred\"\n              >\n                <FiStar\n                  className={onlyStarred ? \"text-yellow-500\" : \"text-gray-500\"}\n                />\n                Starred\n              </button>\n\n              <select\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value as any)}\n                className=\"rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm outline-none focus:border-indigo-400\"\n                title=\"Sort\"\n              >\n                <option value=\"ice\">Sort: ICE</option>\n                <option value=\"updated\">Sort: Updated</option>\n              </select>\n            </div>\n          </div>\n\n          {/* Quick pills */}\n          {/* Quick pills */}\n          <div className=\"flex flex-wrap items-center gap-2 border-t border-gray-100 px-3 py-2\">\n            <span className=\"text-xs font-medium text-gray-500\">Quick:</span>\n\n            {/* status pills */}\n            {[\"Draft\", \"Planned\", \"Building\", \"Shipped\"].map((s) => (\n              <button\n                key={`pill-s-${s}`}\n                onClick={() => toggleStatusPill(s as IdeaStatus)}\n                className={`rounded-full px-3 py-1 text-xs font-medium transition\n        ${status === s ? \"bg-indigo-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`}\n              >\n                {s}\n              </button>\n            ))}\n\n            <span className=\"mx-1 h-4 w-px bg-gray-200\" />\n\n            {/* type pills with color accents */}\n            {([\"Product\", \"Feature\", \"Tooling\"] as IdeaType[]).map((t) => {\n              const tone =\n                t === \"Product\"\n                  ? \"bg-blue-100 text-blue-700 hover:bg-blue-200\"\n                  : t === \"Feature\"\n                    ? \"bg-violet-100 text-violet-700 hover:bg-violet-200\"\n                    : \"bg-amber-100 text-amber-800 hover:bg-amber-200\";\n              const active =\n                t === \"Product\"\n                  ? \"bg-blue-600 text-white\"\n                  : t === \"Feature\"\n                    ? \"bg-violet-600 text-white\"\n                    : \"bg-amber-600 text-white\";\n              return (\n                <button\n                  key={`pill-t-${t}`}\n                  onClick={() => toggleTypePill(t)}\n                  className={`rounded-full px-3 py-1 text-xs font-medium transition ${type === t ? active : tone}`}\n                >\n                  {t}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Grid */}\n        <div className=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n          {filtered.length === 0 ? (\n            <div className=\"col-span-full rounded-xl border border-dashed border-gray-300 bg-white p-10 text-center text-gray-600\">\n              <p className=\"text-sm\">\n                No ideas match your filters. Try clearing filters or create a\n                new one.\n              </p>\n              <button\n                onClick={addIdea}\n                className=\"mt-4 inline-flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white shadow-sm transition hover:bg-blue-700 active:translate-y-[1px]\"\n              >\n                <FiPlus />\n                New Idea\n              </button>\n            </div>\n          ) : (\n            filtered.map((i) => (\n              <IdeaCard\n                key={i.id}\n                idea={i}\n                onOpen={openIdea}\n                onToggleStar={toggleStar}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GalleryView;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FiArrowLeft, FiDownload, FiSave, FiTrash2 } from \"react-icons/fi\";\nimport type { Idea, IdeaStatus, IdeaType } from \"types/innovationLab\";\nimport {\n  getIdeaById,\n  upsertIdea,\n  deleteIdea,\n  ideaToMarkdown,\n} from \"./ideaStorage\";\n\nconst STATUSES: IdeaStatus[] = [\n  \"Draft\",\n  \"Exploring\",\n  \"Planned\",\n  \"Building\",\n  \"Shipped\",\n  \"Archived\",\n];\nconst TYPES: IdeaType[] = [\n  \"Product\",\n  \"Feature\",\n  \"Tooling\",\n  \"Research\",\n  \"Infra\",\n];\n\n/* --------------------- small helpers --------------------- */\nfunction downloadText(filename: string, text: string) {\n  const blob = new Blob([text], { type: \"text/plain;charset=utf-8\" });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  a.click();\n  URL.revokeObjectURL(url);\n}\n\nfunction Chip({ children }: { children: React.ReactNode }) {\n  return (\n    <span className=\"inline-flex items-center gap-1 rounded-full bg-gray-100 px-2 py-0.5 text-xs text-gray-700\">\n      {children}\n    </span>\n  );\n}\n\nfunction TagInput({\n  value,\n  onChange,\n  placeholder = \"Add tag and press Enter\",\n}: {\n  value: string[];\n  onChange: (next: string[]) => void;\n  placeholder?: string;\n}) {\n  const [draft, setDraft] = useState(\"\");\n  const add = (t: string) => {\n    const v = t.trim();\n    if (!v) return;\n    if (value.includes(v)) return;\n    onChange([...value, v]);\n    setDraft(\"\");\n  };\n  return (\n    <div>\n      <div className=\"flex flex-wrap gap-2 mb-2\">\n        {value.map((t) => (\n          <Chip key={t}>\n            {t}\n            <button\n              className=\"ml-1 text-gray-400 hover:text-gray-700\"\n              onClick={() => onChange(value.filter((x) => x !== t))}\n              type=\"button\"\n              aria-label={`Remove ${t}`}\n              title=\"Remove\"\n            >\n              ×\n            </button>\n          </Chip>\n        ))}\n      </div>\n      <input\n        value={draft}\n        onChange={(e) => setDraft(e.target.value)}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            add(draft);\n          }\n        }}\n        placeholder={placeholder}\n        className=\"w-full rounded-md border px-3 py-2\"\n      />\n    </div>\n  );\n}\n\nfunction NumberChip({\n  label,\n  value,\n  onChange,\n  hint,\n}: {\n  label: string;\n  value: number | undefined;\n  onChange: (n: number) => void;\n  hint?: string;\n}) {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <span className=\"w-24 text-sm text-gray-600\">{label}</span>\n      <input\n        type=\"range\"\n        min={0}\n        max={5}\n        step={1}\n        value={value ?? 0}\n        onChange={(e) => onChange(parseInt(e.target.value, 10))}\n        className=\"flex-1\"\n      />\n      <Chip>{value ?? 0}/5</Chip>\n      {hint ? <span className=\"text-xs text-gray-400 ml-1\">{hint}</span> : null}\n    </div>\n  );\n}\n\n/* --------------------- main view --------------------- */\nconst DetailView: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n\n  const [idea, setIdea] = useState<Idea | null>(null);\n  const [notFound, setNotFound] = useState(false);\n\n  // initial load\n  useEffect(() => {\n    if (!id) return;\n    const rec = getIdeaById(id);\n    if (!rec) {\n      setNotFound(true);\n    } else {\n      // ensure defaults for new fields\n      setIdea({\n        ...rec,\n        swot: rec.swot ?? {\n          strengths: [],\n          weaknesses: [],\n          opportunities: [],\n          threats: [],\n        },\n        businessModel: rec.businessModel ?? \"\",\n        targetAudience: rec.targetAudience ?? [],\n      });\n    }\n  }, [id]);\n\n  // derived ICE score\n  const ice = useMemo(() => {\n    const i = idea;\n    if (!i) return 0;\n    return (i.impact ?? 0) + (i.confidence ?? 0) - (i.effort ?? 0);\n  }, [idea]);\n\n  const patch = <K extends keyof Idea>(key: K, value: Idea[K]) => {\n    if (!idea) return;\n    const next: Idea = {\n      ...idea,\n      [key]: value,\n      updatedAt: new Date().toISOString(),\n    };\n    setIdea(next);\n  };\n\n  const save = () => {\n    if (!idea) return;\n    upsertIdea(idea);\n    navigate(\"/ideas\");\n  };\n\n  const onExportMd = () => {\n    if (!idea) return;\n    const md = ideaToMarkdown(idea);\n    const safe = (idea.title || \"idea\").replace(/[^\\w.-]+/g, \"_\");\n    downloadText(`${safe}.md`, md);\n  };\n\n  const onDelete = () => {\n    if (!idea) return;\n    const ok = window.confirm(\"Delete this idea? This cannot be undone.\");\n    if (!ok) return;\n    deleteIdea(idea.id);\n    navigate(\"/ideas\");\n  };\n\n  if (notFound) {\n    return (\n      <div className=\"mx-auto w-full max-w-3xl p-4\">\n        <div className=\"rounded-lg border bg-white p-6\">\n          <p className=\"text-gray-700\">Idea not found.</p>\n          <button\n            className=\"mt-4 inline-flex items-center gap-2 rounded-md border px-3 py-2 hover:bg-gray-50\"\n            onClick={() => navigate(\"/ideas\")}\n          >\n            <FiArrowLeft /> Back to Innovation Lab\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!idea) return null;\n\n  return (\n    <div className=\"h-full w-full bg-gradient-to-b from-gray-50 to-white\">\n      <div className=\"mx-auto w-full max-w-5xl p-4 sm:p-6 space-y-5\">\n        {/* Top bar */}\n        <div className=\"sticky top-0 z-10 -mx-4 sm:-mx-6 mb-1 bg-white/70 backdrop-blur supports-[backdrop-filter]:bg-white/60 border-b border-gray-100 px-4 sm:px-6 py-2\">\n          <div className=\"mx-auto max-w-5xl flex items-center justify-between gap-2\">\n            <div className=\"flex items-center gap-2\">\n              <button\n                className=\"inline-flex items-center gap-2 rounded-lg border border-gray-200 bg-white/70 px-3 py-2 text-gray-700 hover:bg-white shadow-sm\"\n                onClick={() => navigate(\"/ideas\")}\n              >\n                <FiArrowLeft /> Back\n              </button>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                className=\"inline-flex items-center gap-2 rounded-lg border border-gray-200 bg-white/70 px-3 py-2 text-gray-700 hover:bg-white shadow-sm\"\n                onClick={onExportMd}\n                title=\"Export Markdown\"\n              >\n                <FiDownload /> Export\n              </button>\n              <button\n                className=\"inline-flex items-center gap-2 rounded-lg bg-gradient-to-r from-indigo-600 to-blue-600 px-3 py-2 text-white shadow-sm hover:from-indigo-700 hover:to-blue-700 active:translate-y-[1px]\"\n                onClick={save}\n              >\n                <FiSave /> Save\n              </button>\n              <button\n                className=\"inline-flex items-center gap-2 rounded-lg bg-rose-50 px-3 py-2 text-rose-700 hover:bg-rose-100 border border-rose-100\"\n                onClick={onDelete}\n              >\n                <FiTrash2 /> Delete\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Title & meta */}\n        <div className=\"rounded-lg border bg-white p-4 space-y-3\">\n          <input\n            value={idea.title}\n            onChange={(e) => patch(\"title\", e.target.value)}\n            placeholder=\"Idea title\"\n            className=\"w-full text-2xl font-semibold outline-none\"\n          />\n          <input\n            value={idea.oneLiner ?? \"\"}\n            onChange={(e) => patch(\"oneLiner\", e.target.value)}\n            placeholder=\"One-liner (what/why in one sentence)\"\n            className=\"w-full rounded-md border px-3 py-2\"\n          />\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-gray-600 w-16\">Status</span>\n              <select\n                value={idea.status}\n                onChange={(e) => patch(\"status\", e.target.value as IdeaStatus)}\n                className=\"flex-1 rounded-md border px-2 py-2\"\n              >\n                {STATUSES.map((s) => (\n                  <option key={s}>{s}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-gray-600 w-16\">Type</span>\n              <select\n                value={idea.ideaType}\n                onChange={(e) => patch(\"ideaType\", e.target.value as IdeaType)}\n                className=\"flex-1 rounded-md border px-2 py-2\"\n              >\n                {TYPES.map((t) => (\n                  <option key={t}>{t}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"flex items-center gap-2 justify-between\">\n              <span className=\"text-sm text-gray-600\">ICE score</span>\n              <Chip>{ice}</Chip>\n            </div>\n          </div>\n        </div>\n\n        {/* Scoring */}\n        <div className=\"rounded-lg border bg-white p-4 space-y-3\">\n          <h3 className=\"font-semibold mb-1\">Prioritization</h3>\n          <NumberChip\n            label=\"Impact\"\n            value={idea.impact}\n            onChange={(n) => patch(\"impact\", n)}\n            hint=\"0–5\"\n          />\n          <NumberChip\n            label=\"Confidence\"\n            value={idea.confidence}\n            onChange={(n) => patch(\"confidence\", n)}\n            hint=\"0–5\"\n          />\n          <NumberChip\n            label=\"Effort\"\n            value={idea.effort}\n            onChange={(n) => patch(\"effort\", n)}\n            hint=\"0–5 (lower is better)\"\n          />\n        </div>\n\n        {/* Tags */}\n        <div className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <h3 className=\"font-semibold mb-2\">Tags</h3>\n          <TagInput\n            value={idea.tags || []}\n            onChange={(v) => patch(\"tags\", v)}\n            placeholder=\"Add a tag and press Enter (e.g., 'education', 'ai', 'mvp')\"\n          />\n        </div>\n\n        {/* Sections */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n          <section className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n            <h3 className=\"font-semibold mb-2\">Problem</h3>\n            <textarea\n              rows={5}\n              value={idea.problem ?? \"\"}\n              onChange={(e) => patch(\"problem\", e.target.value)}\n              placeholder=\"What problem are you solving?\"\n              className=\"w-full rounded-md border px-3 py-2\"\n            />\n          </section>\n\n          <section className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n            <h3 className=\"font-semibold mb-2\">Core approach</h3>\n            <textarea\n              rows={5}\n              value={idea.coreApproach ?? \"\"}\n              onChange={(e) => patch(\"coreApproach\", e.target.value)}\n              placeholder=\"How will you solve it? (no AI integration yet)\"\n              className=\"w-full rounded-md border px-3 py-2\"\n            />\n          </section>\n\n          <section className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n            <h3 className=\"font-semibold mb-2\">Value / Why now</h3>\n            <textarea\n              rows={5}\n              value={idea.valueNotes ?? \"\"}\n              onChange={(e) => patch(\"valueNotes\", e.target.value)}\n              placeholder=\"What’s the user/business value? Why is now the right time?\"\n              className=\"w-full rounded-md border px-3 py-2\"\n            />\n          </section>\n\n          <section className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n            <h3 className=\"font-semibold mb-2\">Risks</h3>\n            <textarea\n              rows={5}\n              value={(idea.risks ?? []).join(\"\\n\")}\n              onChange={(e) =>\n                patch(\n                  \"risks\",\n                  e.target.value\n                    .split(\"\\n\")\n                    .map((s) => s.trim())\n                    .filter(Boolean)\n                )\n              }\n              placeholder=\"One risk per line\"\n              className=\"w-full rounded-md border px-3 py-2\"\n            />\n          </section>\n        </div>\n\n        {/* NEW: Target Audience */}\n        <div className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <h3 className=\"font-semibold mb-2\">Target audience</h3>\n          <TagInput\n            value={idea.targetAudience ?? []}\n            onChange={(v) => patch(\"targetAudience\", v)}\n            placeholder=\"Add a persona/segment and press Enter (e.g., 'CBSE students', 'Parents', 'School admins')\"\n          />\n        </div>\n\n        {/* NEW: Business Model */}\n        <div className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <h3 className=\"font-semibold mb-2\">Business model</h3>\n          <textarea\n            rows={6}\n            value={idea.businessModel ?? \"\"}\n            onChange={(e) => patch(\"businessModel\", e.target.value)}\n            placeholder=\"Describe value proposition, pricing, channels, costs, and how this becomes a business.\"\n            className=\"w-full rounded-md border px-3 py-2\"\n          />\n        </div>\n\n        {/* NEW: SWOT */}\n        <div className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <h3 className=\"font-semibold mb-3\">SWOT analysis</h3>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium mb-1\">Strengths</h4>\n              <TagInput\n                value={idea.swot?.strengths ?? []}\n                onChange={(v) =>\n                  patch(\"swot\", {\n                    strengths: v,\n                    weaknesses: idea.swot?.weaknesses ?? [],\n                    opportunities: idea.swot?.opportunities ?? [],\n                    threats: idea.swot?.threats ?? [],\n                  } as Idea[\"swot\"])\n                }\n                placeholder=\"Add a strength and press Enter\"\n              />\n            </div>\n            <div>\n              <h4 className=\"font-medium mb-1\">Weaknesses</h4>\n              <TagInput\n                value={idea.swot?.weaknesses ?? []}\n                onChange={(v) =>\n                  patch(\"swot\", {\n                    strengths: idea.swot?.strengths ?? [],\n                    weaknesses: v,\n                    opportunities: idea.swot?.opportunities ?? [],\n                    threats: idea.swot?.threats ?? [],\n                  } as Idea[\"swot\"])\n                }\n                placeholder=\"Add a weakness and press Enter\"\n              />\n            </div>\n            <div>\n              <h4 className=\"font-medium mb-1\">Opportunities</h4>\n              <TagInput\n                value={idea.swot?.opportunities ?? []}\n                onChange={(v) =>\n                  patch(\"swot\", {\n                    strengths: idea.swot?.strengths ?? [],\n                    weaknesses: idea.swot?.weaknesses ?? [],\n                    opportunities: v,\n                    threats: idea.swot?.threats ?? [],\n                  } as Idea[\"swot\"])\n                }\n                placeholder=\"Add an opportunity and press Enter\"\n              />\n            </div>\n            <div>\n              <h4 className=\"font-medium mb-1\">Threats</h4>\n              <TagInput\n                value={idea.swot?.threats ?? []}\n                onChange={(v) =>\n                  patch(\"swot\", {\n                    strengths: idea.swot?.strengths ?? [],\n                    weaknesses: idea.swot?.weaknesses ?? [],\n                    opportunities: idea.swot?.opportunities ?? [],\n                    threats: v,\n                  } as Idea[\"swot\"])\n                }\n                placeholder=\"Add a threat and press Enter\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Links */}\n        <div className=\"rounded-xl border border-gray-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <h3 className=\"font-semibold mb-2\">Links</h3>\n          <textarea\n            rows={4}\n            value={(idea.links ?? [])\n              .map((l) => `${l.label ?? \"\"}|${l.url}`)\n              .join(\"\\n\")}\n            onChange={(e) =>\n              patch(\n                \"links\",\n                e.target.value\n                  .split(\"\\n\")\n                  .map((row) => row.trim())\n                  .filter(Boolean)\n                  .map((row) => {\n                    const [label, url] = row.split(\"|\");\n                    return {\n                      label: label?.trim() || undefined,\n                      url: (url || label || \"\").trim(),\n                    };\n                  })\n              )\n            }\n            placeholder=\"Each line: Label|https://example.com  (Label optional)\"\n            className=\"w-full rounded-md border px-3 py-2 font-mono text-sm\"\n          />\n        </div>\n        {/* footer tip */}\n        <p className=\"text-xs text-gray-400 text-center\">\n          Changes update the draft locally; click <b>Save</b> to persist.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DetailView;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport GalleryView from \"features/innovationLab/GalleryView\";\nimport DetailView from \"features/innovationLab/DetailView\";\n\nexport default function IdeasApp() {\n  return (\n    <Routes>\n      <Route index element={<GalleryView />} />\n      <Route path=\":id\" element={<DetailView />} />\n    </Routes>\n  );\n}\n"],"names":["TYPE_TONES","Product","bg","border","chip","Feature","Tooling","Research","Infra","Chip","_ref","className","children","_jsx","concat","_ref2","_idea$impact","_idea$confidence","_idea$effort","_idea$tags","_idea$tags$length","_idea$tags2","_idea$targetAudience$","_idea$targetAudience","idea","onOpen","onToggleStar","tone","ideaType","ice","impact","confidence","effort","updated","Date","updatedAt","createdAt","toLocaleDateString","tagList","tags","slice","extraTags","length","audienceCount","targetAudience","s","swot","strengths","weaknesses","opportunities","threats","_jsxs","role","onClick","id","type","e","stopPropagation","starred","title","FiStar","oneLiner","status","score","map","t","FiUsers","FiTrendingUp","FiTarget","FiAlertTriangle","KEY","loadIdeas","storage","get","IDEAS_NS","saveIdeas","list","set","STATUSES","TYPES","GalleryView","navigate","useNavigate","ideas","setIdeas","useState","q","setQ","setStatus","setType","onlyStarred","setOnlyStarred","sortBy","setSortBy","filtered","useMemo","ql","toLowerCase","trim","filter","i","_i$oneLiner","_i$tags","text","join","includes","sort","a","b","_a$impact","_a$confidence","_a$effort","_b$impact","_b$confidence","_b$effort","sa","getTime","addIdea","draft","now","toISOString","businessModel","newIdeaSeed","next","openIdea","toggleStar","_objectSpread","FiPlus","FiSearch","value","onChange","target","placeholder","FiFilter","v","cur","toggleStatusPill","active","toggleTypePill","IdeaCard","TagInput","setDraft","x","onKeyDown","key","preventDefault","add","NumberChip","_ref3","label","hint","min","max","step","parseInt","DetailView","_idea$oneLiner","_idea$problem","_idea$coreApproach","_idea$valueNotes","_idea$risks","_idea$businessModel","_idea$swot$strengths","_idea$swot","_idea$swot$weaknesses2","_idea$swot5","_idea$swot$opportunit3","_idea$swot9","_idea$swot$threats4","_idea$swot11","_idea$links","useParams","setIdea","notFound","setNotFound","useEffect","rec","_loadIdeas$find","find","getIdeaById","_rec$swot","_rec$businessModel","_rec$targetAudience","_i$impact","_i$confidence","_i$effort","patch","FiArrowLeft","onExportMd","md","_i$swot","_i$targetAudience$len","_i$targetAudience","_i$risks","_i$links","sw","swotBlock","businessModelBlock","audienceBlock","problem","coreApproach","valueNotes","risks","links","l","url","Boolean","ideaToMarkdown","safe","replace","filename","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","downloadText","FiDownload","save","ix","findIndex","upsertIdea","FiSave","onDelete","window","confirm","deleteIdea","FiTrash2","n","rows","split","_idea$swot$weaknesses","_idea$swot2","_idea$swot$opportunit","_idea$swot3","_idea$swot$threats","_idea$swot4","_idea$swot$strengths2","_idea$swot6","_idea$swot$opportunit2","_idea$swot7","_idea$swot$threats2","_idea$swot8","_idea$swot$strengths3","_idea$swot0","_idea$swot$weaknesses3","_idea$swot1","_idea$swot$threats3","_idea$swot10","_idea$swot$strengths4","_idea$swot12","_idea$swot$weaknesses4","_idea$swot13","_idea$swot$opportunit4","_idea$swot14","_l$label","row","undefined","IdeasApp","Routes","Route","index","element","path"],"sourceRoot":""}