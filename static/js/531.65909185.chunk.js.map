{"version":3,"file":"static/js/531.65909185.chunk.js","mappings":"yIAWA,MA6FA,EA7FmCA,IAM5B,IAN6B,MAClCC,EAAK,SACLC,EAAQ,YACRC,EAAc,sBAAqB,UACnCC,EAAY,GAAE,OACdC,GAAS,GACVL,EACC,MAAOM,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC7BC,GAAWC,EAAAA,EAAAA,QAAgC,MAU3CC,EAAkBC,IACtB,MAAMC,EAAQD,EACXE,MAAM,SACNC,IAAKC,GAAMA,EAAEC,QACbC,OAAOC,SACV,IAAKN,EAAMO,OAAQ,OACnB,MAAMC,EAAO,IAAIC,IAAIrB,GACfsB,EAAOlB,EACT,IAAI,IAAIiB,IAAI,IAAIrB,KAAUY,KAC1B,IAAIZ,KAAUY,IACdU,EAAKH,SAAWnB,EAAMmB,QAAUP,EAAMW,KAAMC,IAAOJ,EAAKK,IAAID,MAC9DvB,EAASqB,GAEXhB,EAAS,KAwBX,OACEoB,EAAAA,EAAAA,MAAA,OACEvB,UAAW,CACT,yDACAA,GACAwB,KAAK,KACPC,QAASA,KAAA,IAAAC,EAAA,OAAsB,QAAtBA,EAAMrB,EAASsB,eAAO,IAAAD,OAAA,EAAhBA,EAAkBE,SAAQC,SAAA,CAExChC,EAAMc,IAAI,CAACmB,EAAMC,KAChBR,EAAAA,EAAAA,MAAA,QAEEvB,UAAU,4FAA2F6B,SAAA,CAEpGC,GACDE,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACL,uBAAAC,OAAsBJ,GACtB9B,UAAU,kCACVyB,QAASA,IAzBDU,KAAiB,IAADC,EAChC,MAAMjB,EAAOtB,EAAMiB,OAAO,CAACuB,EAAGN,IAAMA,IAAMI,GAC1CrC,EAASqB,GAEO,QAAhBiB,EAAA/B,EAASsB,eAAO,IAAAS,GAAhBA,EAAkBR,SAqBKU,CAASP,GAAGF,SAC5B,aAEQ,GAAAK,OAXDJ,EAAI,KAAAI,OAAIH,MAepBC,EAAAA,EAAAA,KAAA,SACEO,IAAKlC,EACLR,MAAOK,EACPJ,SAAW0C,GAAMrC,EAASqC,EAAEC,OAAO5C,OACnC6C,UAlD2DF,IACjD,UAAVA,EAAEG,KACJH,EAAEI,iBAEFrC,EAAeL,IACI,cAAVsC,EAAEG,MAAwBzC,GAASL,EAAMmB,OAElDlB,EAASD,EAAMgD,MAAM,GAAI,IACN,MAAVL,EAAEG,KAAyB,MAAVH,EAAEG,MAC5BH,EAAEI,iBACFrC,EAAeL,KAyCb4C,OAAQA,IA3EEtC,KACd,MAAMuC,EAAIvC,EAAIK,OACd,IAAKkC,EAAG,OACR,MAAM5B,EAAOlB,EAAS+C,MAAMC,KAAK,IAAI/B,IAAI,IAAIrB,EAAOkD,KAAO,IAAIlD,EAAOkD,GACtEjD,EAASqB,GACThB,EAAS,KAsES+C,CAAOhD,GACrBH,YAAaF,EAAMmB,OAAS,GAAKjB,EACjCC,UAAU,wF,uDCvFlB,MAwBA,EAxBoCJ,IAAA,IAAC,SACnCiC,EAAQ,QACRJ,EAAO,KACPQ,EAAO,SAAQ,UACfjC,EAAY,GAAE,MACdmD,EAAK,SACLC,GACDxD,EAAA,OACCoC,EAAAA,EAAAA,KAAA,UACEC,KAAMA,EACNkB,MAAOA,EACPC,SAAUA,EACV3B,QAASA,EACTzB,UAAW,CACT,oEACA,0CACA,kDACAA,GACAwB,KAAK,KAAKK,SAEXA,I,kICSL,MAAMwB,EAMDzD,IAA4D,IAA3D,QAAE0D,EAAO,WAAEC,EAAU,UAAEC,EAAS,OAAEC,EAAM,UAAEC,GAAW9D,EACzD,MAAO+D,EAAMC,IAAWxD,EAAAA,EAAAA,WAAS,IAC1ByD,EAAaC,IAAkB1D,EAAAA,EAAAA,WAAS,IACxC2D,EAAMC,IAAW5D,EAAAA,EAAAA,UAASkD,EAAQS,MAGnCE,GAAuB,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAAiBY,cAA0B,IAC1DC,EAAMC,IAAWhE,EAAAA,EAAAA,UAAS6D,IAC1BI,EAAaC,IAAkBlE,EAAAA,EAAAA,WAAS,GAGzCmE,EAAWA,KACf,MAAMC,EAAIT,EAAKlD,OACf,IAAK2D,GAAKA,IAAMlB,EAAQS,KAGtB,OAFAD,GAAe,QACfE,EAAQV,EAAQS,MAGlB,MAAM5C,GAAmBsD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBnB,GAAO,IACVS,KAAMS,EACNE,WAAW,IAAIC,MAAOC,iBAExBC,EAAAA,EAAAA,IAAc1D,GACd2C,GAAe,GACfJ,KAoBIoB,GACJvD,EAAAA,EAAAA,MAAA,QAAMvB,UAAU,wFAAuF6B,SAAA,CACpG0B,EAAW,QAAqB,IAAfA,EAAmB,IAAM,SAI/C,OACEhC,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,kFAAiF6B,SAAA,EAE9FN,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,gFAA+E6B,SAAA,EAC5FN,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,yCAAwC6B,SAAA,EACrDG,EAAAA,EAAAA,KAAA,UACEhC,UAAU,gEACVyB,QAASA,IAAMmC,EAASb,IAAOA,GAC/B,aAAW,SACXI,MAAOQ,EAAO,WAAa,SAAS9B,SAEnC8B,GAAO3B,EAAAA,EAAAA,KAAC+C,EAAAA,IAAa,KAAM/C,EAAAA,EAAAA,KAACgD,EAAAA,IAAc,OAG7ChD,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,oCAAmC6B,SAC9CgC,GAQA7B,EAAAA,EAAAA,KAAA,SACEiD,WAAS,EACTpF,MAAOkE,EACPjE,SAAW0C,GAAMwB,EAAQxB,EAAEC,OAAO5C,OAClCiD,OAAQyB,EACR7B,UAAYF,GAAgB,UAAVA,EAAEG,KAAmB4B,IACvCvE,UAAU,mHAbZuB,EAAAA,EAAAA,MAAA2D,EAAAA,SAAA,CAAArD,SAAA,EACEG,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,uCAAsC6B,SACnDyB,EAAQS,OAEVe,WAeTvD,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,oCAAmC6B,SAAA,EAC9CgC,IACAtC,EAAAA,EAAAA,MAAA,UACEE,QAASA,IAAMqC,GAAe,GAC9B9D,UAAU,sFAAqF6B,SAAA,EAE/FG,EAAAA,EAAAA,KAACmD,EAAAA,IAAO,CAACnF,UAAU,YAAY,cAGnCuB,EAAAA,EAAAA,MAAA,UACEE,QAzDK2D,KACRC,OAAOC,QAAQ,wBAADpD,OAAoBoB,EAAQS,KAAI,eACnDwB,EAAAA,EAAAA,IAAcjC,EAAQkC,IACtB9B,MAuDQ1D,UAAU,oGAAmG6B,SAAA,EAE7GG,EAAAA,EAAAA,KAACyD,EAAAA,IAAQ,CAACzF,UAAU,YAAY,cAElCuB,EAAAA,EAAAA,MAAA,UACEE,QAASgC,EACTzD,UAAU,yGACVmD,MAAM,aAAYtB,SAAA,EAElBG,EAAAA,EAAAA,KAAC0D,EAAAA,IAAc,CAAC1F,UAAU,YAAY,sBAO3C2D,IAASE,IACRtC,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,oBAAmB6B,SAAA,EAEhCG,EAAAA,EAAAA,KAAC2D,EAAkB,CACjB1B,YAAaA,EACbE,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,EAChBsB,OA9FOC,KACf,MAAM1E,GAAmBsD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBnB,GAAO,IACVY,YAAaC,EAAKtD,OAClB6D,WAAW,IAAIC,MAAOC,iBAExBC,EAAAA,EAAAA,IAAc1D,GACdmD,GAAe,GACfZ,QA0FM1B,EAAAA,EAAAA,KAAC8D,EAAW,CAACC,UAAWzC,EAAQkC,GAAI9B,UAAWA,WAUnDiC,EAODK,IAA0E,IAAzE,YAAE/B,EAAW,KAAEE,EAAI,QAAEC,EAAO,YAAEC,EAAW,eAAEC,EAAc,OAAEsB,GAAQI,EACvE,MAAM,QAAEC,EAAO,SAAEC,EAAQ,YAAEC,EAAW,WAAEC,GApK1C,SAAkBC,GAA8B,IAAhBC,EAAOC,UAAAvF,OAAA,QAAAwF,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACxC,MAAMH,EAAaC,EAAKrF,OAASsF,GAC1BJ,EAAUC,IAAe/F,EAAAA,EAAAA,WAAS,GAEzC,MAAO,CAAE6F,QADOG,IAAeF,EAAWG,EAAKxD,MAAM,EAAGyD,GAAW,SAAMD,EACvDH,WAAUC,cAAaC,aAC3C,CA+JyDK,CACrDxC,EACA,KAGF,OACE1C,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,sEAAqE6B,SAAA,EAClFN,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,yCAAwC6B,SAAA,EACrDN,EAAAA,EAAAA,MAAA,QAAMvB,UAAU,6DAA4D6B,SAAA,EAC1EG,EAAAA,EAAAA,KAAC0E,EAAAA,IAAU,CAAC1G,UAAU,oBAAoB,kBAG1CqE,IACArC,EAAAA,EAAAA,KAAA,UACEP,QAASA,IAAM6C,GAAe,GAC9BtE,UAAU,4DAA2D6B,SACtE,YAMJwC,GACC9C,EAAAA,EAAAA,MAAA2D,EAAAA,SAAA,CAAArD,SAAA,EACEG,EAAAA,EAAAA,KAAA,YACEnC,MAAOsE,EACPrE,SAAW0C,GAAM4B,EAAQ5B,EAAEC,OAAO5C,OAClCE,YAAY,gFACZ4G,KAAM,EACN3G,UAAU,8IAEZuB,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,2CAA0C6B,SAAA,EACvDG,EAAAA,EAAAA,KAAA,UACEP,QAASmE,EACT5F,UAAU,4FAA2F6B,SACtG,UAGDG,EAAAA,EAAAA,KAAA,UACEP,QAASA,IAAM6C,GAAe,GAC9BtE,UAAU,sFAAqF6B,SAChG,iBAKHoC,GACF1C,EAAAA,EAAAA,MAAA2D,EAAAA,SAAA,CAAArD,SAAA,EACEG,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,uEAAsE6B,SAChFoE,IACE,IACJG,IACC7E,EAAAA,EAAAA,MAAA,UACEE,QAASA,IAAM0E,GAAaD,GAC5BlG,UAAU,iEAAgE6B,SAAA,CAC3E,QACOqE,EAAW,OAAS,cAKhClE,EAAAA,EAAAA,KAAA,UACEP,QAASA,IAAM6C,GAAe,GAC9BtE,UAAU,4DAA2D6B,SACtE,0BAWHiE,EAGDc,IAA+B,IAA9B,UAAEb,EAAS,UAAErC,GAAWkD,EAE5B,MACMjF,GADYkF,EAAAA,EAAAA,MACQC,KAAMlG,GAAMA,EAAE0C,QAAQkC,KAAOO,GAUvD,OAAKpE,GAGHJ,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,gCAA+B6B,SAAA,EAC5CN,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,oCAAmC6B,SAAA,EAChDG,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,sCAAqC6B,SAAC,kBACpDN,EAAAA,EAAAA,MAAA,UACEE,QAfSsF,KAAO,IAADC,EACrB,MAAM7D,EAA6B,QAAxB6D,EAAGC,OAAO,sBAAc,IAAAD,OAAA,EAArBA,EAAuBnG,OACrC,IAAKsC,EAAO,OACZ,MAAMvC,GAAIsG,EAAAA,EAAAA,IAAanB,EAAW5C,IAClCgE,EAAAA,EAAAA,GAAYvG,GACZ8C,KAWM1D,UAAU,sFAAqF6B,SAAA,EAE/FG,EAAAA,EAAAA,KAACoF,EAAAA,IAAM,CAACpH,UAAU,YAAY,mBAIN,IAA3B2B,EAAQ0F,QAAQrG,QACfgB,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,wBAAuB6B,SAAC,qBAErCG,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,qCAAoC6B,SAC/CF,EAAQ0F,QAAQ1G,IAAKC,IACpBoB,EAAAA,EAAAA,KAAA,MAAehC,UAAU,iCAAgC6B,UACvDN,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,oCAAmC6B,SAAA,EAChDN,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,UAAS6B,SAAA,EACtBG,EAAAA,EAAAA,KAACsF,EAAAA,GAAI,CACHC,GAAE,gBAAArF,OAAkBtB,EAAE4E,IACtBxF,UAAU,4EACVmD,MAAM,oBAAmBtB,SAExBjB,EAAEuC,SAEL5B,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,+BAA8B6B,SAAA,CAC1CjB,EAAE4G,OAAO,IAAE5G,EAAE6G,OAAM,UAAAvF,OAAQtB,EAAE6G,OAAM,QAAS,UAGjDzF,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,0BAAyB6B,UACtCG,EAAAA,EAAAA,KAACsF,EAAAA,GAAI,CACHC,GAAE,gBAAArF,OAAkBtB,EAAE4E,IACtBxF,UAAU,uDAAsD6B,SACjE,eAlBEjB,EAAE4E,UAnBA,MAqDjBkC,EAAkCA,KACtC1F,EAAAA,EAAAA,KAAC2F,EAAAA,GAAU,CACTxE,MAAM,4BACNe,aACElC,EAAAA,EAAAA,KAAAkD,EAAAA,SAAA,CAAArD,SAAE,qEAEJ+F,QAAS,CACP,mCACA,qCACA,2DAKAC,EAAuDC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACxEvG,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,kEAAiE6B,SAAA,EAC9EG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,uCACHG,EAAAA,EAAAA,KAAA,UACEP,QAASsG,EACT/H,UAAU,+EAA8E6B,SACzF,+BAsFL,EAhFmCmG,KACjC,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,IAAUC,EAAAA,EAAAA,OACVC,EAAYC,IAAiBlI,EAAAA,EAAAA,UAAS,GACvCmI,EAAUA,IAAMD,EAAeE,GAAMA,EAAI,GAEzChF,EACJ2E,EAAOM,IAAI,YACXC,EAAAA,GAAQD,IAAYE,EAAAA,GAAU,oBAAqB,KACnD,GAEIC,GAAMC,EAAAA,EAAAA,SAAQ,KAAMhC,EAAAA,EAAAA,MAAoB,CAACwB,IACzCS,GAAYD,EAAAA,EAAAA,SAChB,IAAMD,EAAI9H,OAAQF,GAAMA,EAAE0C,QAAQE,YAAcA,GAChD,CAACoF,EAAKpF,KAGRuF,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAOA,IAAMV,EAAeE,GAAMA,EAAI,GAG5C,OAFAnD,OAAO4D,iBAAiB,mBAAoBD,GAC5C3D,OAAO4D,iBAAiB,qBAAsBD,GACvC,KACL3D,OAAO6D,oBAAoB,mBAAoBF,GAC/C3D,OAAO6D,oBAAoB,qBAAsBF,KAElD,IAEH,MAAMG,EAAaA,KAAO,IAADC,EACvB,IAAK5F,EAEH,YADA6F,MAAM,6CAGR,MAAMtF,EAA6B,QAAzBqF,EAAGnC,OAAO,uBAAe,IAAAmC,OAAA,EAAtBA,EAAwBvI,OACrC,IAAKkD,EAAM,OACX,MAAMuF,GAAIC,EAAAA,EAAAA,IAAe/F,EAAWO,GACnCuF,EAAUpF,YAAc,IACzBW,EAAAA,EAAAA,IAAcyE,GACdf,KAGF,OACEvG,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,qCAAoC6B,SAG/C2B,EAEuB,IAArBsF,EAAU9H,QACZgB,EAAAA,EAAAA,KAAC6F,EAAgB,CAACE,SAAUoB,KAE5B5H,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,kBAAiB6B,SAAA,EAC9BG,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,gHAA+G6B,UAC5HN,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,sFAAqF6B,SAAA,EAClGG,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,qBAAoB6B,SAAC,cACnCG,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,oDAAmD6B,UAChEN,EAAAA,EAAAA,MAAA,UACEE,QAAS0H,EACTnJ,UAAU,yGAAwG6B,SAAA,EAElHG,EAAAA,EAAAA,KAACoF,EAAAA,IAAM,CAACpH,UAAU,YAAY,wBAMrC8I,EAAUnI,IAAI6I,IAAA,IAAC,QAAElG,EAAO,QAAE+D,GAASmC,EAAA,OAClCxH,EAAAA,EAAAA,KAACqB,EAAU,CAETC,QAASA,EACTC,WAAY8D,EAAQrG,OACpBwC,UAAWA,EACXC,OAAQA,IAAMwE,EAAS,kBAAD/F,OAAmBoB,EAAQE,YACjDE,UAAW6E,GALNjF,EAAQkC,UArBnBxD,EAAAA,EAAAA,KAAC0F,EAAqB,M,uDCzY9B,MAyCA,EAzCoC9H,IAO7B,IAP8B,OACnC6J,EAAM,QACNC,EAAO,MACPvG,EAAK,SACLtB,EAAQ,UACR7B,EAAY,oCAAmC,gBAC/C2J,GAAkB,GACnB/J,EACC,OAAK6J,GAGHlI,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,qBAAoB6B,SAAA,EACjCG,EAAAA,EAAAA,KAAA,OACEhC,UAAU,+BACVyB,QAASkI,EAAkBD,OAAUlD,KAEvCxE,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,4DAA2D6B,UACxEN,EAAAA,EAAAA,MAAA,OACEvB,UAAS,uFAAAkC,OAAyFlC,GAClG4J,KAAK,SACL,gBAAU/H,SAAA,CAETsB,IACC5B,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,yCAAwC6B,SAAA,EACrDG,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,wBAAuB6B,SAAEsB,KACvCnB,EAAAA,EAAAA,KAAA,UACE,aAAW,cACXP,QAASiI,EACT1J,UAAU,gCAA+B6B,SAC1C,cAKJA,UA1BW,K,gDCjBP,SAASgI,IACtB,MAAMC,GAAMC,EAAAA,EAAAA,MACZ,IAAKD,EACH,MAAM,IAAIE,MAAM,wDAClB,OAAOF,CACT,C,2ICMA,MAAMG,EAAa,WACbC,EAAY,UACZC,EAAS,OAkBTC,EAGF,CACF,QAAS,QACT,cAAe,cACfC,WAAY,aACZC,KAAM,QAEFC,EAGF,CACF,QAAS,QACT,cAAe,cACfC,WAAY,aACZC,KAAM,QAIR,SAASC,IACPrF,OAAOsF,cAAc,IAAIC,MAAM,oBACjC,CAEA,SAASC,IACP,OAAOnC,EAAAA,GAAQD,IAAiBE,EAAAA,GAAU,QAAS,GACrD,CACA,SAASmC,EAAW3J,GAClBuH,EAAAA,GAAQqC,IAAIpC,EAAAA,GAAU,QAASxH,GAC/BkE,OAAOsF,cAAc,IAAIC,MAAM,sBACjC,CAsDO,SAASI,EAAgBC,EAAiBlF,GAAuB,IAADmF,EAAAC,EACrE,MAAMC,EAAWC,IAAcvE,KAC5BlG,IACG,OAADA,QAAC,IAADA,OAAC,EAADA,EAAW0K,WAAYL,EAAKK,UAC3BL,EAAKK,SAAW1K,EAAE4E,KAAQyF,EAAaK,SAGvCC,GAAM,IAAI5G,MAAOC,cAGjBtB,EAAUkI,EAAezF,GACzBvC,GAAmB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,YAAa,GAIlC5C,EACI,OAARwK,QAAQ,IAARA,EAAAA,EACC,CACC5F,IAAIyF,EAAKK,QAAO,SAAApJ,OAAYyC,KAAK4G,QACjCD,QANwBL,EAAKK,SAAWG,EAASjI,GAOjDuC,YACA5C,MAAO8H,EAAK9H,OAAS,WACrBqE,OAAwB,QAAlB0D,EAAEX,EAAIU,EAAKzD,eAAO,IAAA0D,EAAAA,EAAI,QAC5BQ,UAAWT,EAAKS,WAAaH,EAC7B7G,UAAW6G,EACX9D,OAAQ,MAUZ,GANA7G,EAAE4G,OAAyB,QAAnB2D,EAAGZ,EAAIU,EAAKzD,eAAO,IAAA2D,EAAAA,EAAI,QAC/BvK,EAAEuC,MAAQ8H,EAAK9H,OAASvC,EAAEuC,MAC1BvC,EAAE8D,UAAY6G,EACdpE,EAAYvG,GAGRqK,EAAKK,UAAa1K,EAAU0K,QAAS,CAIvCR,EAHcD,IAAYlK,IAAKgL,GAC7BA,EAAEnG,KAAOyF,EAAKzF,IAAEf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQkH,GAAC,IAAEL,QAAU1K,EAAU0K,UAAYK,GAG/D,CACF,CAIO,SAASC,IACd,OAAOlD,EAAAA,GAAQD,IAAeE,EAAAA,GAAUsB,EAAY,GACtD,CACO,SAAS4B,EAAaC,GAC3BpD,EAAAA,GAAQqC,IAAIpC,EAAAA,GAAUsB,EAAY6B,GAClCpB,GACF,CAEO,SAASW,IACd,OAAO3C,EAAAA,GAAQD,IAAaE,EAAAA,GAAUuB,EAAW,GACnD,CACO,SAAS6B,EAAYD,GAC1BpD,EAAAA,GAAQqC,IAAIpC,EAAAA,GAAUuB,EAAW4B,GACjCpB,GACF,CAEO,SAASsB,IACd,OAAOtD,EAAAA,GAAQD,IAAWE,EAAAA,GAAUwB,EAAQ,GAC9C,CACO,SAAS8B,EAASH,GACvBpD,EAAAA,GAAQqC,IAAIpC,EAAAA,GAAUwB,EAAQ2B,GAC9BpB,GACF,CAIA,MAAMwB,EAAO7K,GAAS,GAAAa,OACjBb,EAAC,KAAAa,OAAIyC,KAAK4G,MAAK,KAAArJ,OAAIiK,KAAKC,SAASC,SAAS,IAAIxJ,MAAM,EAAG,IAG5D,SAAS4I,EAASjI,GAChB,MAAM7C,EAAM+H,EAAAA,GAAQD,IAA4BE,EAAAA,GAAU,WAAY,CAAC,GACjEhH,EAAU2K,OAAO3L,EAAI6C,IAAc,QACnCgC,EAAE,KAAAtD,OAAQP,GAGhB,OAFAhB,EAAI6C,GAAa7B,EAAU,EAC3B+G,EAAAA,GAAQqC,IAAIpC,EAAAA,GAAU,WAAYhI,GAC3B6E,CACT,CAIO,SAAS+D,EACd/F,GAEU,IADVO,EAAIwC,UAAAvF,OAAA,QAAAwF,IAAAD,UAAA,GAAAA,UAAA,GAAG,cAEP,MAAMgF,GAAM,IAAI5G,MAAOC,cACvB,MAAO,CACLY,GAAI0G,EAAI,QACR1I,YACAO,OACA2H,UAAWH,EACX7G,UAAW6G,EACXgB,KAAM,GAEV,CAEO,SAASf,EAAehG,GAAgC,IAADgH,EAC5D,OAA8C,QAA9CA,EAAOZ,IAAe9E,KAAMwC,GAAMA,EAAE9D,KAAOA,UAAG,IAAAgH,EAAAA,EAAI,IACpD,CAEO,SAAStF,EAAanB,GAAmD,IAA7B5C,EAAKoD,UAAAvF,OAAA,QAAAwF,IAAAD,UAAA,GAAAA,UAAA,GAAG,YACzD,MAAMgF,GAAM,IAAI5G,MAAOC,cACjB0E,EAAIkC,EAAezF,GAEnB0G,EAAUhB,GADG,OAADnC,QAAC,IAADA,OAAC,EAADA,EAAG9F,YAAa,IAGlC,OAAAiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEe,GAAI0G,EAAI,UAEJ,CAAEZ,QAASmB,IAAS,IACxB1G,YACA5C,QACAqE,OAAQ,QACRkE,UAAWH,EACX7G,UAAW6G,EACX9D,OAAQ,MAEZ,CAIO,SAAS5C,EAAcyE,GAC5B,MAAMwC,EAAOF,IACPc,EAAKZ,EAAKa,UAAWC,GAAMA,EAAEpH,KAAO8D,EAAE9D,IACtCrE,EACJuL,GAAM,EAAI,IAAIZ,EAAKjJ,MAAM,EAAG6J,GAAKpD,KAAMwC,EAAKjJ,MAAM6J,EAAK,IAAM,CAACpD,KAAMwC,GAEtE,OADAD,EAAa1K,GACNA,CACT,CAEO,SAASoE,EAAcC,GAC5BqG,EAAaD,IAAe9K,OAAQwI,GAAMA,EAAE9D,KAAOA,IAEnD,MAAM6B,EAAUgE,IAAcvK,OAAQF,GAAMA,EAAEmF,YAAcP,GACtDqH,EAAW,IAAI3L,IAAImG,EAAQ1G,IAAKC,GAAMA,EAAE4E,KAC9CuG,EAAY1E,GACZ4E,EAASD,IAAWlL,OAAQgM,GAAMD,EAASvL,IAAIwL,EAAExB,UACnD,CAIO,SAASnE,EAAYvG,GAC1B,MAAMkL,EAAOT,IACPqB,EAAKZ,EAAKa,UAAWC,GAAMA,EAAEpH,KAAO5E,EAAE4E,IACtCrE,EACJuL,GAAM,EAAI,IAAIZ,EAAKjJ,MAAM,EAAG6J,GAAK9L,KAAMkL,EAAKjJ,MAAM6J,EAAK,IAAM,CAAC9L,KAAMkL,GACtEC,EAAY5K,GAGZ,MAAMmC,EAAUkI,EAAe5K,EAAEmF,WAIjC,OAHW,OAAPzC,QAAO,IAAPA,GAAAA,EAASE,WAlMR,SAA0BuJ,EAAcvJ,GAAoB,IAADwJ,EAChE,MAAMC,EAAQpC,IAGR4B,GACE,OAALM,QAAK,IAALA,OAAK,EAALA,EAAezB,UAEfyB,EAAMvH,GAEHkH,EAAKO,EAAMN,UAAWhB,GAAMA,EAAEL,UAAYmB,GAE1CxL,EAAkB,CACtBuE,GAAIkH,GAAM,EAAIO,EAAMP,GAAIlH,GAAE,QAAAtD,OAAWyC,KAAK4G,OAC1C2B,QAAS1J,EACT8H,QAASmB,EACTtJ,MAAO4J,EAAM5J,MACbqE,OAA6C,QAAvCwF,EAAE5C,EAAI2C,EAAMvF,eAA2B,IAAAwF,EAAAA,EAAI,QACjDtB,UAAWqB,EAAMrB,WAYnBZ,EARE4B,GAAM,EACF,IACKO,EAAMpK,MAAM,EAAG6J,IAAGjI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBwI,EAAMP,IAAQzL,MAChBgM,EAAMpK,MAAM6J,EAAK,IAEtB,CAACzL,KAASgM,GAGlB,CAqKIE,CAAiBvM,EAAG0C,EAAQE,WAEvBrC,CACT,CAMO,SAASiM,EAAY5H,GAC1B,MAAMoD,EAAMyC,IACNgC,EAASzE,EAAI9B,KAAMlG,GAAMA,EAAE4E,KAAOA,GACxCuG,EAAYnD,EAAI9H,OAAQF,GAAMA,EAAE4E,KAAOA,IACvCyG,EAASD,IAAWlL,OAAQgM,GAAMA,EAAExB,UAAY9F,IAGhD,MAAM8H,GAAe,OAAND,QAAM,IAANA,OAAM,EAANA,EAAgB/B,UAAW9F,EAlLrC,IAAiC+H,IAmLdD,EAjLxBxC,EADcD,IAAY/J,OAAQ6K,GAAMA,EAAEL,UAAYiC,GAmLxD,CAGO,SAASC,EAAUhI,EAAaiI,GACrC,MAAM7M,EAjBD,SAAsB4E,GAA4B,IAADkI,EACtD,OAA6C,QAA7CA,EAAOrC,IAAcvE,KAAMlG,GAAMA,EAAE4E,KAAOA,UAAG,IAAAkI,EAAAA,EAAI,IACnD,CAeYC,CAAanI,GAClB5E,IACLA,EAAE4G,OAASiG,EACX7M,EAAE8D,WAAY,IAAIC,MAAOC,cACzBuC,EAAYvG,GACd,CAGO,SAASgN,EAAgBnB,GAC9B,MAAM7L,EAAIyK,IAAcvE,KAAM8F,IAAQ,OAADA,QAAC,IAADA,OAAC,EAADA,EAAWtB,WAAYmB,GACxD7L,GAAGwM,EAAYxM,EAAE4E,GACvB,CAEO,SAASqI,EACdpB,EACAgB,GAEA,MAAM7M,EAAIyK,IAAcvE,KAAM8F,IAAQ,OAADA,QAAC,IAADA,OAAC,EAADA,EAAWtB,WAAYmB,GACvD7L,GACL4M,EAAU5M,EAAE4E,GAAIiI,EAClB,CAoCO,SAAS5G,IACd,MAAMiH,EAAWlC,IACXvE,EAAUgE,IACV0C,EAAO/B,IAEPgC,EAAgB,IAAIC,IAC1B5G,EAAQ6G,QAAStN,IAAO,IAADuN,EACrB,MAAMC,EAAoC,QAAjCD,EAAGH,EAAcvF,IAAI7H,EAAEmF,kBAAU,IAAAoI,EAAAA,EAAI,GAC9CC,EAAIC,KAAKzN,GACToN,EAAcjD,IAAInK,EAAEmF,UAAWqI,KAGjC,MAAME,EAAY,IAAIL,IAKtB,OAJAF,EAAKG,QAASpB,IAAC,IAAAyB,EAAA,OACbD,EAAUvD,IAAI+B,EAAExB,SAAkC,QAAzBiD,EAACD,EAAU7F,IAAIqE,EAAExB,gBAAQ,IAAAiD,EAAAA,EAAI,GAAK,KAGtDT,EAASnN,IAAK2C,IAAa,IAADkL,EAC/B,MAAMC,EAAkC,QAAhCD,EAAGR,EAAcvF,IAAInF,EAAQkC,WAAG,IAAAgJ,EAAAA,EAAI,GACtCE,EAAkC,CAAC,EAEzC,OADAD,EAAGP,QAAStN,IAAC,IAAA+N,EAAA,OAAMD,EAAO9N,EAAE4E,IAAyB,QAAtBmJ,EAAGL,EAAU7F,IAAI7H,EAAE4E,WAAG,IAAAmJ,EAAAA,EAAI,IAClD,CAAErL,UAAS+D,QAASoH,EAAIG,iBAAkBF,IAErD,CAEO,SAASG,EAAkBrL,GAChC,OAAKA,EACEoI,IAAe9K,OAAQwI,GAAMA,EAAE9F,YAAcA,GAD7B,EAEzB,C,+HClXA,MAyBA,EAzB8C5D,IAMvC,IANwC,MAC7CuD,EAAK,YACLe,EAAW,QACX0D,EAAO,OACPkH,EAAM,UACN9O,EAAY,kCACbJ,EACC,OACE2B,EAAAA,EAAAA,MAAA,OAAKvB,UAAWA,EAAU6B,SAAA,EACxBG,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,uCAAsC6B,SAAEsB,IACrDe,IACClC,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,6BAA4B6B,SAAEqC,IAEvC,OAAP0D,QAAO,IAAPA,GAAAA,EAAS5G,QACRgB,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,sDAAqD6B,SAChE+F,EAAQjH,IAAI,CAACmM,EAAG/K,KACfC,EAAAA,EAAAA,KAAA,MAAAH,SAAaiL,GAAJ/K,MAGX,KACH+M,IAAU9M,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,OAAM6B,SAAEiN,O,gFC3BjC,MAAMnG,EAAW,QACXoG,EAAS,MACTC,EAAU,OACVC,EAAQ,eACRC,EAAW,QAWlB1G,EAAIA,CAAC2G,EAAsBxM,IAAW,GAAAT,OAAQiN,EAAE,KAAAjN,OAAIS,GAenD,MAAM+F,EAAU,CACrBD,IAXF,SAAgB0G,EAAsBxM,EAAayM,GACjD,IACE,MAAM5O,EAAM6O,aAAaC,QAAQ9G,EAAE2G,EAAIxM,IACvC,OAAW,MAAPnC,EAA6B,OAAR4O,QAAQ,IAARA,EAAAA,EAAY,KAC9BG,KAAKC,MAAMhP,EACpB,CAAE,MAAAiP,GACA,OAAgB,OAARL,QAAQ,IAARA,EAAAA,EAAY,IACtB,CACF,EAIErE,GAAAA,CAAOoE,EAAsBxM,EAAa9C,GACxCwP,aAAaK,QAAQlH,EAAE2G,EAAIxM,GAAM4M,KAAKI,UAAU9P,GAClD,EACAuF,MAAAA,CAAO+J,EAAsBxM,GAC3B0M,aAAaO,WAAWpH,EAAE2G,EAAIxM,GAChC,EACAkN,KAAAA,CAAMV,GACJ,MAAMW,EAAM,GAAA5N,OAAMiN,EAAE,KACpB,IAAK,IAAIpN,EAAIsN,aAAarO,OAAS,EAAGe,GAAK,EAAGA,IAAK,CACjD,MAAMY,EAAM0M,aAAa1M,IAAIZ,GACzBY,GAAOA,EAAIoN,WAAWD,IAAST,aAAaO,WAAWjN,EAC7D,CACF,E,yDCxCF,MAkBA,EAlBoC/C,IAA2B,IAA1B,MAAEC,EAAK,UAAEG,GAAWJ,EACvD,MAAOoQ,EAAMC,IAAW7P,EAAAA,EAAAA,WAAS,GACjC,OACEmB,EAAAA,EAAAA,MAAA,OAAKvB,UAAW,CAAC,iCAAkCA,GAAWwB,KAAK,KAAKK,SAAA,EACtEG,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,gCAA+B6B,SAC5CmO,EAAOnQ,EAAQ,sDAElBmC,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLR,QAASA,IAAMwO,EAASrP,IAAOA,GAC/BZ,UAAU,oDAAmD6B,SAE5DmO,EAAO,OAAS,Y,uFCNzB,MAAME,EAAW,WACXC,EAAe,oBAKrB,SAASC,EAAgBtE,GACvBpD,EAAAA,GAAQqC,IAAIgE,EAAAA,GAAQmB,EAAUpE,EAChC,CAEO,MAAMuE,GAAoBC,EAAAA,EAAAA,oBAE/B9J,GACWuD,EAAuBA,KAAMwG,EAAAA,EAAAA,YAAWF,GAE9C,SAASG,EAAkB5Q,GAI9B,IAJ+B,SACjCiC,GAGDjC,EACC,MAAO6Q,EAAUC,IAAetQ,EAAAA,EAAAA,UAAuB,KAChDuQ,EAAYC,IAAiBxQ,EAAAA,EAAAA,UAAwB,MAEtDmI,EAAUA,IAAMmI,EAnBfhI,EAAAA,GAAQD,IAAkBsG,EAAAA,GAAQmB,EAAU,MAqBnDnH,EAAAA,EAAAA,WAAU,KACRR,IACAqI,EAAclI,EAAAA,GAAQD,IAAmBsG,EAAAA,GAAQoB,EAAc,QAC9D,KAEHpH,EAAAA,EAAAA,WAAU,KACJ4H,EAAYjI,EAAAA,GAAQqC,IAAIgE,EAAAA,GAAQoB,EAAcQ,GAC7CjI,EAAAA,GAAQtD,OAAO2J,EAAAA,GAAQoB,IAC3B,CAACQ,IAEJ,MAAME,GAAWhI,EAAAA,EAAAA,SACf,IAAM4H,EAAS3J,KAAMzF,GAAMA,EAAEmE,KAAOmL,IAAe,KACnD,CAACF,EAAUE,IA0CP9Q,EAAgC,CACpC4Q,WACAI,WACAF,aACAC,gBACAE,cA5CqBtL,GAAsBoL,EAAcpL,GA6CzDuL,WA3CkBhN,IAClB,MAAMS,GAAKT,GAAQ,IAAIlD,OACvB,IAAK2D,EAAG,OAAO,KAGf,GAAIiM,EAASrP,KAAMC,GAAMA,EAAE0C,KAAKiN,gBAAkBxM,EAAEwM,eAClD,OAAO,KAET,MAAMxL,EAAE,GAAAtD,OAAMsC,EAAEwM,cAAcC,QAAQ,OAAQ,KAAI,KAAA/O,OAAIyC,KAAK4G,OACrD2F,EAAmB,CAAE1L,KAAIzB,KAAMS,EAAG2M,SAAU,CAAC,GAC7ChQ,EAAO,IAAIsP,EAAUS,GAK3B,OAHAR,EAAYvP,GACZiP,EAAgBjP,GAChByP,EAAcpL,GACP0L,GA6BPE,cAzBqB5L,IACrB,MAAMrE,EAAOsP,EAAS3P,OAAQO,GAAMA,EAAEmE,KAAOA,GAC7CkL,EAAYvP,GACZiP,EAAgBjP,GACZwP,IAAenL,GAAIoL,EAAc,OAsBrCS,cAnBoBA,CAACC,EAAoBC,KACzC,IAAKZ,EAAY,OACjB,MAAMxP,EAAOsP,EAAS9P,IAAKU,GACzBA,EAAEmE,KAAOmL,EACLtP,GAACoD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIpD,GAAC,IAAE8P,UAAQ1M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQpD,EAAE8P,UAAY,CAAC,GAAG,CAAF,GAAG,CAACG,GAAaC,OAE/Db,EAAYvP,GACZiP,EAAgBjP,IAYhBoH,WAGF,OACEvG,EAAAA,EAAAA,KAACqO,EAAkBmB,SAAQ,CAAC3R,MAAOA,EAAMgC,SACtCA,GAGP,C","sources":["components/ui/ChipInput.tsx","components/ui/IconButton.tsx","features/board/features/FeatureDashboard.tsx","components/ui/Modal.tsx","hooks/useProjectHub.ts","features/board/features/storage.ts","components/ui/EmptyState.tsx","packages/storage/index.ts","components/ui/SecretText.tsx","features/projectHub/context.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\ntype Props = {\n  value: string[];\n  onChange: (next: string[]) => void;\n  placeholder?: string;\n  className?: string;\n  /** If true, trims and dedups automatically */\n  dedupe?: boolean;\n};\n\nconst ChipInput: React.FC<Props> = ({\n  value,\n  onChange,\n  placeholder = \"Add and press Enter\",\n  className = \"\",\n  dedupe = true,\n}) => {\n  const [draft, setDraft] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const commit = (raw: string) => {\n    const v = raw.trim();\n    if (!v) return;\n    const next = dedupe ? Array.from(new Set([...value, v])) : [...value, v];\n    onChange(next);\n    setDraft(\"\");\n  };\n\n  const splitAndCommit = (raw: string) => {\n    const parts = raw\n      .split(/[,;]/g)\n      .map((s) => s.trim())\n      .filter(Boolean);\n    if (!parts.length) return;\n    const base = new Set(value);\n    const next = dedupe\n      ? [...new Set([...value, ...parts])]\n      : [...value, ...parts];\n    if (next.length !== value.length || parts.some((p) => !base.has(p))) {\n      onChange(next);\n    }\n    setDraft(\"\");\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      // allow comma-separated on enter too\n      splitAndCommit(draft);\n    } else if (e.key === \"Backspace\" && !draft && value.length) {\n      // remove last chip\n      onChange(value.slice(0, -1));\n    } else if (e.key === \",\" || e.key === \";\") {\n      e.preventDefault();\n      splitAndCommit(draft);\n    }\n  };\n\n  const removeAt = (idx: number) => {\n    const next = value.filter((_, i) => i !== idx);\n    onChange(next);\n    // keep focus for fast editing\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div\n      className={[\n        \"flex flex-wrap gap-2 rounded border bg-white px-2 py-2\",\n        className,\n      ].join(\" \")}\n      onClick={() => inputRef.current?.focus()}\n    >\n      {value.map((chip, i) => (\n        <span\n          key={`${chip}-${i}`}\n          className=\"inline-flex items-center gap-1 rounded-full bg-gray-100 px-2 py-0.5 text-xs text-gray-800\"\n        >\n          {chip}\n          <button\n            type=\"button\"\n            aria-label={`Remove ${chip}`}\n            className=\"rounded p-0.5 hover:bg-gray-200\"\n            onClick={() => removeAt(i)}\n          >\n            ✕\n          </button>\n        </span>\n      ))}\n\n      <input\n        ref={inputRef}\n        value={draft}\n        onChange={(e) => setDraft(e.target.value)}\n        onKeyDown={onKeyDown}\n        onBlur={() => commit(draft)}\n        placeholder={value.length ? \"\" : placeholder}\n        className=\"min-w-[8ch] flex-1 outline-none text-sm placeholder:text-gray-400 bg-transparent\"\n      />\n    </div>\n  );\n};\n\nexport default ChipInput;\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  type?: \"button\" | \"submit\" | \"reset\";\n  className?: string;\n  title?: string;\n  disabled?: boolean;\n};\n\nconst IconButton: React.FC<Props> = ({\n  children,\n  onClick,\n  type = \"button\",\n  className = \"\",\n  title,\n  disabled,\n}) => (\n  <button\n    type={type}\n    title={title}\n    disabled={disabled}\n    onClick={onClick}\n    className={[\n      \"inline-flex items-center gap-1 rounded border px-3 py-1.5 text-sm\",\n      \"bg-white hover:bg-gray-50 text-gray-700\",\n      \"disabled:opacity-60 disabled:cursor-not-allowed\",\n      className,\n    ].join(\" \")}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import React, { useMemo, useState, useEffect } from \"react\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport {\n  featureSummaries,\n  newFeatureSeed,\n  upsertFeature,\n  deleteFeature,\n  newStorySeed,\n  upsertStory,\n} from \"./storage\";\nimport type { Feature } from \"types/boardFeatures\";\nimport { storage, BOARD_NS } from \"packages/storage\";\nimport { EmptyState } from \"packages/ui\";\nimport {\n  FiPlus,\n  FiChevronRight,\n  FiChevronDown,\n  FiEdit2,\n  FiTrash2,\n  FiExternalLink,\n  FiBookOpen,\n} from \"react-icons/fi\";\n\n/* ------------------------------\n   Description UI helpers\n------------------------------ */\nfunction useClamp(text: string, clampAt = 220) {\n  const needsClamp = text.length > clampAt;\n  const [expanded, setExpanded] = useState(false);\n  const display = needsClamp && !expanded ? text.slice(0, clampAt) + \"…\" : text;\n  return { display, expanded, setExpanded, needsClamp };\n}\n\n/* ───────────────────────────────────────────────────────────\n * Row (accordion) for a single Feature\n *  - rename / delete\n *  - polished Description UI (view + edit)\n *  - nested stories + bugs\n *  - “Open board” keeps ?project= in the URL\n * ─────────────────────────────────────────────────────────── */\nconst FeatureRow: React.FC<{\n  feature: Feature;\n  storyCount: number;\n  projectId: string;\n  onOpen: () => void;\n  onChanged: () => void;\n}> = ({ feature, storyCount, projectId, onOpen, onChanged }) => {\n  const [open, setOpen] = useState(false);\n  const [editingName, setEditingName] = useState(false);\n  const [name, setName] = useState(feature.name);\n\n  // description is optional; stored via upsertFeature with a safe cast\n  const initialDesc = ((feature as any)?.description as string) || \"\";\n  const [desc, setDesc] = useState(initialDesc);\n  const [editingDesc, setEditingDesc] = useState(false);\n  // ...existing imports\n\n  const saveName = () => {\n    const n = name.trim();\n    if (!n || n === feature.name) {\n      setEditingName(false);\n      setName(feature.name);\n      return;\n    }\n    const next: Feature & any = {\n      ...feature,\n      name: n,\n      updatedAt: new Date().toISOString(),\n    };\n    upsertFeature(next);\n    setEditingName(false);\n    onChanged();\n  };\n\n  const saveDesc = () => {\n    const next: Feature & any = {\n      ...feature,\n      description: desc.trim(),\n      updatedAt: new Date().toISOString(),\n    };\n    upsertFeature(next);\n    setEditingDesc(false);\n    onChanged();\n  };\n\n  const remove = () => {\n    if (!window.confirm(`Delete feature “${feature.name}”?`)) return;\n    deleteFeature(feature.id);\n    onChanged();\n  };\n\n  const countChip = (\n    <span className=\"inline-flex items-center rounded-full bg-slate-100 px-2 py-0.5 text-xs text-slate-700\">\n      {storyCount} stor{storyCount === 1 ? \"y\" : \"ies\"}\n    </span>\n  );\n\n  return (\n    <div className=\"rounded-xl border border-gray-200 bg-white shadow-sm transition hover:shadow-md\">\n      {/* Row header */}\n      <div className=\"flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between p-3 sm:p-4\">\n        <div className=\"flex items-start sm:items-center gap-3\">\n          <button\n            className=\"rounded-md border bg-white px-2 py-1 text-sm hover:bg-gray-50\"\n            onClick={() => setOpen((v) => !v)}\n            aria-label=\"Toggle\"\n            title={open ? \"Collapse\" : \"Expand\"}\n          >\n            {open ? <FiChevronDown /> : <FiChevronRight />}\n          </button>\n\n          <div className=\"flex flex-wrap items-center gap-2\">\n            {!editingName ? (\n              <>\n                <span className=\"truncate font-semibold text-gray-900\">\n                  {feature.name}\n                </span>\n                {countChip}\n              </>\n            ) : (\n              <input\n                autoFocus\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                onBlur={saveName}\n                onKeyDown={(e) => e.key === \"Enter\" && saveName()}\n                className=\"w-[min(28rem,80vw)] rounded-md border px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              />\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex flex-wrap items-center gap-2\">\n          {!editingName && (\n            <button\n              onClick={() => setEditingName(true)}\n              className=\"inline-flex items-center gap-1 rounded-md border px-2 py-1 text-sm hover:bg-gray-50\"\n            >\n              <FiEdit2 className=\"h-4 w-4\" /> Rename\n            </button>\n          )}\n          <button\n            onClick={remove}\n            className=\"inline-flex items-center gap-1 rounded-md border px-2 py-1 text-sm text-rose-700 hover:bg-rose-50\"\n          >\n            <FiTrash2 className=\"h-4 w-4\" /> Delete\n          </button>\n          <button\n            onClick={onOpen}\n            className=\"inline-flex items-center gap-1 rounded-md bg-blue-600 px-3 py-1.5 text-sm text-white hover:bg-blue-700\"\n            title=\"Open board\"\n          >\n            <FiExternalLink className=\"h-4 w-4\" />\n            Open board\n          </button>\n        </div>\n      </div>\n\n      {/* Body (collapsible) */}\n      {open && !editingName && (\n        <div className=\"px-3 pb-4 sm:px-4\">\n          {/* Description panel */}\n          <DescriptionSection\n            initialDesc={initialDesc}\n            desc={desc}\n            setDesc={setDesc}\n            editingDesc={editingDesc}\n            setEditingDesc={setEditingDesc}\n            onSave={saveDesc}\n          />\n\n          {/* Stories / Bugs */}\n          <FeatureBody featureId={feature.id} onChanged={onChanged} />\n        </div>\n      )}\n    </div>\n  );\n};\n\n/* ------------------------------\n   Description Section (polished)\n------------------------------ */\nconst DescriptionSection: React.FC<{\n  initialDesc: string;\n  desc: string;\n  setDesc: (v: string) => void;\n  editingDesc: boolean;\n  setEditingDesc: (v: boolean) => void;\n  onSave: () => void;\n}> = ({ initialDesc, desc, setDesc, editingDesc, setEditingDesc, onSave }) => {\n  const { display, expanded, setExpanded, needsClamp } = useClamp(\n    initialDesc,\n    280\n  );\n\n  return (\n    <div className=\"mb-4 rounded-lg border border-indigo-100 bg-indigo-50/60 p-3 sm:p-4\">\n      <div className=\"mb-2 flex items-center justify-between\">\n        <span className=\"inline-flex items-center gap-2 font-medium text-indigo-900\">\n          <FiBookOpen className=\"text-indigo-500\" />\n          Description\n        </span>\n        {!editingDesc && (\n          <button\n            onClick={() => setEditingDesc(true)}\n            className=\"text-xs font-medium text-indigo-700 hover:text-indigo-800\"\n          >\n            Edit\n          </button>\n        )}\n      </div>\n\n      {editingDesc ? (\n        <>\n          <textarea\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n            placeholder=\"Describe what this feature does, the goal, constraints, success metrics…\"\n            rows={4}\n            className=\"w-full rounded-md border border-indigo-200 bg-white px-3 py-2 text-sm shadow-inner focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          />\n          <div className=\"mt-2 flex items-center justify-end gap-2\">\n            <button\n              onClick={onSave}\n              className=\"rounded-md bg-indigo-600 px-3 py-1.5 text-xs font-semibold text-white hover:bg-indigo-700\"\n            >\n              Save\n            </button>\n            <button\n              onClick={() => setEditingDesc(false)}\n              className=\"rounded-md border border-indigo-200 bg-white px-3 py-1.5 text-xs hover:bg-indigo-50\"\n            >\n              Cancel\n            </button>\n          </div>\n        </>\n      ) : initialDesc ? (\n        <>\n          <p className=\"text-sm leading-6 text-indigo-900/90 whitespace-pre-wrap break-words\">\n            {display}\n          </p>{\" \"}\n          {needsClamp && (\n            <button\n              onClick={() => setExpanded(!expanded)}\n              className=\"mt-1 text-xs font-medium text-indigo-700 hover:text-indigo-800\"\n            >\n              Show {expanded ? \"less\" : \"more\"}\n            </button>\n          )}\n        </>\n      ) : (\n        <button\n          onClick={() => setEditingDesc(true)}\n          className=\"text-xs font-medium text-indigo-700 hover:text-indigo-800\"\n        >\n          + Add description\n        </button>\n      )}\n    </div>\n  );\n};\n\n/* ───────────────────────────────────────────────────────────\n * Stories + Bugs inside a feature row (same behavior)\n * ─────────────────────────────────────────────────────────── */\nconst FeatureBody: React.FC<{\n  featureId: string;\n  onChanged: () => void;\n}> = ({ featureId, onChanged }) => {\n  // Always read latest from storage so new stories show up immediately\n  const summaries = featureSummaries();\n  const current = summaries.find((s) => s.feature.id === featureId);\n\n  const addStory = () => {\n    const title = prompt(\"Story title\")?.trim();\n    if (!title) return;\n    const s = newStorySeed(featureId, title);\n    upsertStory(s);\n    onChanged();\n  };\n\n  if (!current) return null;\n\n  return (\n    <div className=\"border-t p-3 sm:p-4 space-y-3\">\n      <div className=\"flex items-center justify-between\">\n        <h4 className=\"text-sm font-semibold text-gray-800\">User stories</h4>\n        <button\n          onClick={addStory}\n          className=\"inline-flex items-center gap-1 rounded-md border px-2 py-1 text-sm hover:bg-gray-50\"\n        >\n          <FiPlus className=\"h-4 w-4\" /> Add Story\n        </button>\n      </div>\n\n      {current.stories.length === 0 ? (\n        <p className=\"text-sm text-gray-600\">No stories yet.</p>\n      ) : (\n        <ul className=\"grid gap-2 sm:gap-3 sm:grid-cols-2\">\n          {current.stories.map((s) => (\n            <li key={s.id} className=\"rounded-lg border bg-white p-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"min-w-0\">\n                  <Link\n                    to={`/board/story/${s.id}`}\n                    className=\"text-md font-medium text-indigo-700 hover:text-indigo-800 hover:underline\"\n                    title=\"Open Story detail\"\n                  >\n                    {s.title}\n                  </Link>\n                  <div className=\"mt-0.5 text-xs text-gray-500\">\n                    {s.status} {s.points ? `• ${s.points} pts` : \"\"}\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Link\n                    to={`/board/story/${s.id}`}\n                    className=\"rounded-md border px-2 py-1 text-xs hover:bg-gray-50\"\n                  >\n                    View\n                  </Link>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\n/* ───────────────────────────────────────────────────────────\n * Dashboard (project-scoped)\n * ─────────────────────────────────────────────────────────── */\nconst ProjectEmptyExplainer: React.FC = () => (\n  <EmptyState\n    title=\"Create your first project\"\n    description={\n      <>Create a project in the left sidebar, then you can add Features.</>\n    }\n    bullets={[\n      \"Projects live in the left panel.\",\n      \"Click a project to open its board.\",\n      \"Use “Add Feature” to group related stories.\",\n    ]}\n  />\n);\n\nconst FeatureListEmpty: React.FC<{ onCreate: () => void }> = ({ onCreate }) => (\n  <div className=\"rounded-xl border-2 border-dashed p-8 text-center text-gray-600\">\n    <p>No features yet for this project.</p>\n    <button\n      onClick={onCreate}\n      className=\"mt-3 rounded-md bg-blue-600 px-3 py-1.5 text-sm text-white hover:bg-blue-700\"\n    >\n      + Create first Feature\n    </button>\n  </div>\n);\n\nconst FeatureDashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const [search] = useSearchParams();\n  const [refreshKey, setRefreshKey] = useState(0);\n  const refresh = () => setRefreshKey((k) => k + 1);\n\n  const projectId =\n    search.get(\"project\") ||\n    storage.get<string>(BOARD_NS, \"selectedProjectId\", \"\") ||\n    \"\";\n\n  const all = useMemo(() => featureSummaries(), [refreshKey]);\n  const summaries = useMemo(\n    () => all.filter((s) => s.feature.projectId === projectId),\n    [all, projectId]\n  );\n  // inside FeatureDashboard component:\n  useEffect(() => {\n    const bump = () => setRefreshKey((k) => k + 1);\n    window.addEventListener(\"features:changed\", bump);\n    window.addEventListener(\"board:tasksUpdated\", bump);\n    return () => {\n      window.removeEventListener(\"features:changed\", bump);\n      window.removeEventListener(\"board:tasksUpdated\", bump);\n    };\n  }, []);\n\n  const addFeature = () => {\n    if (!projectId) {\n      alert(\"Pick a project in the left sidebar first.\");\n      return;\n    }\n    const name = prompt(\"Feature name\")?.trim();\n    if (!name) return;\n    const f = newFeatureSeed(projectId, name);\n    (f as any).description = \"\"; // allow empty description by default\n    upsertFeature(f);\n    refresh();\n  };\n\n  return (\n    <div className=\"mx-auto w-full max-w-6xl space-y-4\">\n      {/* Sticky header */}\n\n      {!projectId ? (\n        <ProjectEmptyExplainer />\n      ) : summaries.length === 0 ? (\n        <FeatureListEmpty onCreate={addFeature} />\n      ) : (\n        <div className=\"grid gap-3 px-4\">\n          <div className=\"sticky top-0 z-10 -mx-4 sm:mx-0 bg-gray-50/80 backdrop-blur supports-[backdrop-filter]:bg-gray-50/60 border-b\">\n            <div className=\"px-4 sm:px-0 py-3 flex flex-row items-center gap-2 justify-between sm:justify-start\">\n              <h1 className=\"text-2xl font-bold\">Features</h1>\n              <div className=\"flex flex-wrap items-center gap-2 ml-auto sm:ml-0\">\n                <button\n                  onClick={addFeature}\n                  className=\"inline-flex items-center gap-1 rounded-md bg-blue-600 px-3 py-1.5 text-sm text-white hover:bg-blue-700\"\n                >\n                  <FiPlus className=\"h-4 w-4\" />\n                  New Feature\n                </button>\n              </div>\n            </div>\n          </div>\n          {summaries.map(({ feature, stories }) => (\n            <FeatureRow\n              key={feature.id}\n              feature={feature}\n              storyCount={stories.length}\n              projectId={projectId}\n              onOpen={() => navigate(`/board?project=${feature.projectId}`)}\n              onChanged={refresh}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FeatureDashboard;\n","import React from \"react\";\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  children: React.ReactNode;\n  className?: string;\n  /** Optional: close when clicking the scrim (default true) */\n  closeOnBackdrop?: boolean;\n};\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  className = \"bg-white rounded-xl shadow-lg p-6\",\n  closeOnBackdrop = true,\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      <div\n        className=\"absolute inset-0 bg-black/50\"\n        onClick={closeOnBackdrop ? onClose : undefined}\n      />\n      <div className=\"absolute left-1/2 top-20 -translate-x-1/2 w-full max-w-lg\">\n        <div\n          className={`relative bg-white rounded-xl shadow-lg max-h-[90vh] md:max-h-[80vh] overflow-y-auto ${className}`}\n          role=\"dialog\"\n          aria-modal\n        >\n          {title && (\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold\">{title}</h3>\n              <button\n                aria-label=\"Close modal\"\n                onClick={onClose}\n                className=\"rounded p-1 hover:bg-gray-100\"\n              >\n                ✕\n              </button>\n            </div>\n          )}\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useProjectHubContext } from \"../features/projectHub/context\";\nimport type { ProjectHubContextValue } from \"../types/project-hub\";\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n","import { storage, BOARD_NS } from \"packages/storage\";\nimport type {\n  Feature,\n  Story,\n  Bug,\n  FeatureId,\n  StoryId,\n  BugId,\n  StoryStatus,\n  FeatureSummary,\n} from \"types/boardFeatures\";\n\n// ────────────────────────────────────────────────────────────\n// Keys\nconst K_FEATURES = \"features\";\nconst K_STORIES = \"stories\";\nconst K_BUGS = \"bugs\";\n\n// ---- Bridge: Board <-> Features -------------------------------------------\n\ntype BoardTask = {\n  id: string;\n  project: string;\n  storyId?: string; // human id like US234567\n  title: string;\n  status: \"to-do\" | \"in-progress\" | \"validation\" | \"done\";\n  assignee?: string;\n  priority?: \"High\" | \"Medium\" | \"Low\" | string;\n  createdAt?: string;\n  completedAt?: string | null;\n  acceptanceCriteria?: string;\n};\n\n// status maps\nconst S2T: Record<\n  \"To Do\" | \"In Progress\" | \"Validation\" | \"Done\",\n  BoardTask[\"status\"]\n> = {\n  \"To Do\": \"to-do\",\n  \"In Progress\": \"in-progress\",\n  Validation: \"validation\",\n  Done: \"done\",\n};\nconst T2S: Record<\n  BoardTask[\"status\"],\n  \"To Do\" | \"In Progress\" | \"Validation\" | \"Done\"\n> = {\n  \"to-do\": \"To Do\",\n  \"in-progress\": \"In Progress\",\n  validation: \"Validation\",\n  done: \"Done\",\n};\n\n// event helpers\nfunction broadcastFeatures() {\n  window.dispatchEvent(new Event(\"features:changed\"));\n}\n\nfunction readTasks(): BoardTask[] {\n  return storage.get<BoardTask[]>(BOARD_NS, \"tasks\", []);\n}\nfunction writeTasks(next: BoardTask[]) {\n  storage.set(BOARD_NS, \"tasks\", next);\n  window.dispatchEvent(new Event(\"board:tasksUpdated\"));\n}\n\n// Ensure there is a backlog feature for a project (used when creating from Board)\nexport function ensureBacklogFeature(projectId: string) {\n  const feats = loadFeatures();\n  const found = feats.find(\n    (f) => f.projectId === projectId && f.name === \"Backlog\"\n  );\n  if (found) return found;\n  const f = newFeatureSeed(projectId, \"Backlog\");\n  upsertFeature(f);\n  return f;\n}\n\n// Persist/update a board task for a story\nexport function syncStoryToBoard(story: Story, projectId: string) {\n  const tasks = readTasks();\n\n  // story may carry a human id (US234567) in an extra field\n  const humanId =\n    (story as any)?.storyId ||\n    // fallback: keep compatibility with older data by using the internal id\n    (story.id as string);\n\n  const ix = tasks.findIndex((t) => t.storyId === humanId);\n\n  const base: BoardTask = {\n    id: ix >= 0 ? tasks[ix].id : `task-${Date.now()}`,\n    project: projectId,\n    storyId: humanId,\n    title: story.title,\n    status: S2T[story.status as keyof typeof S2T] ?? \"to-do\",\n    createdAt: story.createdAt,\n  };\n\n  const next =\n    ix >= 0\n      ? [\n          ...tasks.slice(0, ix),\n          { ...tasks[ix], ...base },\n          ...tasks.slice(ix + 1),\n        ]\n      : [base, ...tasks];\n\n  writeTasks(next);\n}\n\n// Remove a board task when a story is deleted\nexport function removeBoardTaskForStory(storyIdOrHumanId: StoryId) {\n  const tasks = readTasks().filter((t) => t.storyId !== storyIdOrHumanId);\n  writeTasks(tasks);\n}\n\n// From a board task, ensure a Story exists under a feature\nexport function syncTaskToStory(task: BoardTask, featureId: FeatureId) {\n  const existing = loadStories().find(\n    (s) =>\n      (s as any)?.storyId === task.storyId ||\n      (!task.storyId && s.id === (task as any).storyId)\n  );\n\n  const now = new Date().toISOString();\n\n  // We need a human US id for the story if task doesn't have one yet\n  const feature = getFeatureById(featureId);\n  const projectId = feature?.projectId || \"\";\n\n  const ensureHumanId = () => task.storyId || nextUsId(projectId); // generate if missing\n\n  const s: Story =\n    existing ??\n    ({\n      id: task.storyId ? `story_${Date.now()}` : `story_${Date.now()}`,\n      storyId: ensureHumanId(), // store for future lookups\n      featureId,\n      title: task.title || \"Untitled\",\n      status: T2S[task.status] ?? \"To Do\",\n      createdAt: task.createdAt || now,\n      updatedAt: now,\n      points: null,\n    } as any);\n\n  // keep status/title in sync\n  s.status = T2S[task.status] ?? \"To Do\";\n  s.title = task.title || s.title;\n  s.updatedAt = now;\n  upsertStory(s);\n\n  // if Story was newly created or task didn't have the human id, remember it on the task\n  if (task.storyId !== (s as any).storyId) {\n    const tasks = readTasks().map((t) =>\n      t.id === task.id ? { ...t, storyId: (s as any).storyId } : t\n    );\n    writeTasks(tasks);\n  }\n}\n\n// ────────────────────────────────────────────────────────────\n// Load/save helpers\nexport function loadFeatures(): Feature[] {\n  return storage.get<Feature[]>(BOARD_NS, K_FEATURES, []);\n}\nexport function saveFeatures(list: Feature[]) {\n  storage.set(BOARD_NS, K_FEATURES, list);\n  broadcastFeatures();\n}\n\nexport function loadStories(): Story[] {\n  return storage.get<Story[]>(BOARD_NS, K_STORIES, []);\n}\nexport function saveStories(list: Story[]) {\n  storage.set(BOARD_NS, K_STORIES, list);\n  broadcastFeatures();\n}\n\nexport function loadBugs(): Bug[] {\n  return storage.get<Bug[]>(BOARD_NS, K_BUGS, []);\n}\nexport function saveBugs(list: Bug[]) {\n  storage.set(BOARD_NS, K_BUGS, list);\n  broadcastFeatures();\n}\n\n// ────────────────────────────────────────────────────────────\n// ID\nconst uid = (p: string) =>\n  `${p}_${Date.now()}_${Math.random().toString(36).slice(2, 8)}`;\n\n// Per-project Story ID sequence (starts at 234567) → US234567\nfunction nextUsId(projectId: string) {\n  const map = storage.get<Record<string, number>>(BOARD_NS, \"storySeq\", {});\n  const current = Number(map[projectId] || 234567);\n  const id = `US${current}`;\n  map[projectId] = current + 1;\n  storage.set(BOARD_NS, \"storySeq\", map);\n  return id;\n}\n\n// ────────────────────────────────────────────────────────────\n// Seeds\nexport function newFeatureSeed(\n  projectId: string,\n  name = \"New Feature\"\n): Feature {\n  const now = new Date().toISOString();\n  return {\n    id: uid(\"feat\"),\n    projectId,\n    name,\n    createdAt: now,\n    updatedAt: now,\n    tags: [],\n  };\n}\n\nexport function getFeatureById(id: FeatureId): Feature | null {\n  return loadFeatures().find((f) => f.id === id) ?? null;\n}\n\nexport function newStorySeed(featureId: FeatureId, title = \"New Story\"): Story {\n  const now = new Date().toISOString();\n  const f = getFeatureById(featureId);\n  const projectId = f?.projectId || \"\";\n  const humanId = nextUsId(projectId); // US###### visible id\n\n  return {\n    id: uid(\"story\"),\n    // store human id alongside for cross-refs (kept as extra field)\n    ...({ storyId: humanId } as any),\n    featureId,\n    title,\n    status: \"To Do\",\n    createdAt: now,\n    updatedAt: now,\n    points: null,\n  };\n}\n\n// ────────────────────────────────────────────────────────────\n/** Feature CRUD */\nexport function upsertFeature(f: Feature): Feature[] {\n  const list = loadFeatures();\n  const ix = list.findIndex((x) => x.id === f.id);\n  const next =\n    ix >= 0 ? [...list.slice(0, ix), f, ...list.slice(ix + 1)] : [f, ...list];\n  saveFeatures(next);\n  return next;\n}\n\nexport function deleteFeature(id: FeatureId) {\n  saveFeatures(loadFeatures().filter((f) => f.id !== id));\n  // cascade: orphan stories & bugs are removed\n  const stories = loadStories().filter((s) => s.featureId !== id);\n  const storyIds = new Set(stories.map((s) => s.id));\n  saveStories(stories);\n  saveBugs(loadBugs().filter((b) => storyIds.has(b.storyId)));\n}\n\n// ────────────────────────────────────────────────────────────\n/** Story CRUD */\nexport function upsertStory(s: Story): Story[] {\n  const list = loadStories();\n  const ix = list.findIndex((x) => x.id === s.id);\n  const next =\n    ix >= 0 ? [...list.slice(0, ix), s, ...list.slice(ix + 1)] : [s, ...list];\n  saveStories(next);\n\n  // bridge: mirror into board tasks\n  const feature = getFeatureById(s.featureId);\n  if (feature?.projectId) {\n    syncStoryToBoard(s, feature.projectId);\n  }\n  return next;\n}\n\nexport function getStoryById(id: StoryId): Story | null {\n  return loadStories().find((s) => s.id === id) ?? null;\n}\n\nexport function deleteStory(id: StoryId) {\n  const all = loadStories();\n  const doomed = all.find((s) => s.id === id);\n  saveStories(all.filter((s) => s.id !== id));\n  saveBugs(loadBugs().filter((b) => b.storyId !== id));\n\n  // bridge: remove matching board task by human id if we have it, else by internal id\n  const human = (doomed as any)?.storyId || id;\n  removeBoardTaskForStory(human);\n}\n\n// Convenience by internal id\nexport function moveStory(id: StoryId, nextStatus: StoryStatus) {\n  const s = getStoryById(id);\n  if (!s) return;\n  s.status = nextStatus;\n  s.updatedAt = new Date().toISOString();\n  upsertStory(s);\n}\n\n// Convenience by human id (US######) — used by BoardView\nexport function deleteStoryById(humanId: string) {\n  const s = loadStories().find((x) => (x as any)?.storyId === humanId);\n  if (s) deleteStory(s.id);\n}\n\nexport function moveStoryByStoryId(\n  humanId: string,\n  nextStatus: \"To Do\" | \"In Progress\" | \"Validation\" | \"Done\"\n) {\n  const s = loadStories().find((x) => (x as any)?.storyId === humanId);\n  if (!s) return;\n  moveStory(s.id, nextStatus);\n}\n\n// Queries\nexport function storiesByFeature(featureId: FeatureId): Story[] {\n  return loadStories().filter((s) => s.featureId === featureId);\n}\n\n// ────────────────────────────────────────────────────────────\n/** Bug CRUD */\nexport function upsertBug(b: Bug): Bug[] {\n  const list = loadBugs();\n  const ix = list.findIndex((x) => x.id === b.id);\n  const next =\n    ix >= 0 ? [...list.slice(0, ix), b, ...list.slice(ix + 1)] : [b, ...list];\n  saveBugs(next);\n  return next;\n}\n\nexport function getBugById(id: BugId): Bug | null {\n  return loadBugs().find((b) => b.id === id) ?? null;\n}\n\nexport function deleteBug(id: BugId) {\n  saveBugs(loadBugs().filter((b) => b.id !== id));\n}\n\nexport function bugsByStory(storyId: StoryId): Bug[] {\n  return loadBugs().filter((b) => b.storyId === storyId);\n}\n\nexport function selectedProjectId(): string {\n  return storage.get<string>(BOARD_NS, \"selectedProjectId\", \"\");\n}\n\n// ────────────────────────────────────────────────────────────\n// Dashboard helpers\nexport function featureSummaries(): FeatureSummary[] {\n  const features = loadFeatures();\n  const stories = loadStories();\n  const bugs = loadBugs();\n\n  const storiesByFeat = new Map<FeatureId, Story[]>();\n  stories.forEach((s) => {\n    const arr = storiesByFeat.get(s.featureId) ?? [];\n    arr.push(s);\n    storiesByFeat.set(s.featureId, arr);\n  });\n\n  const bugCounts = new Map<StoryId, number>();\n  bugs.forEach((b) =>\n    bugCounts.set(b.storyId, (bugCounts.get(b.storyId) ?? 0) + 1)\n  );\n\n  return features.map((feature) => {\n    const fs = storiesByFeat.get(feature.id) ?? [];\n    const counts: Record<StoryId, number> = {};\n    fs.forEach((s) => (counts[s.id] = bugCounts.get(s.id) ?? 0));\n    return { feature, stories: fs, bugCountsByStory: counts };\n  });\n}\n\nexport function featuresByProject(projectId: string): Feature[] {\n  if (!projectId) return [];\n  return loadFeatures().filter((f) => f.projectId === projectId);\n}\n","import React from \"react\";\n\ntype EmptyStateProps = {\n  title: string;\n  description?: React.ReactNode;\n  bullets?: React.ReactNode[];\n  action?: React.ReactNode; // e.g. a CTA button\n  className?: string;\n};\n\nconst EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  bullets,\n  action,\n  className = \"rounded-xl border bg-white p-8\",\n}) => {\n  return (\n    <div className={className}>\n      <h2 className=\"text-2xl font-semibold text-gray-900\">{title}</h2>\n      {description && (\n        <div className=\"mt-2 text-gray-600 text-sm\">{description}</div>\n      )}\n      {bullets?.length ? (\n        <ul className=\"mt-3 list-disc pl-5 space-y-1 text-sm text-gray-700\">\n          {bullets.map((b, i) => (\n            <li key={i}>{b}</li>\n          ))}\n        </ul>\n      ) : null}\n      {action && <div className=\"mt-4\">{action}</div>}\n    </div>\n  );\n};\n\nexport default EmptyState;\n","// Strongly-typed localStorage helpers with namespacing.\n// No behavior changes vs. the JS version.\n\nexport const BOARD_NS = \"board\" as const;\nexport const HUB_NS = \"hub\" as const;\nexport const DOCS_NS = \"docs\" as const;\nexport const RN_NS = \"releaseNotes\" as const;\nexport const IDEAS_NS = \"ideas\" as const;\n\n// packages/storage/index.ts  (append near other NS constants)\n\nexport type StorageNamespace =\n  | typeof BOARD_NS\n  | typeof HUB_NS\n  | typeof DOCS_NS\n  | typeof RN_NS\n  | typeof IDEAS_NS;\n\nconst k = (ns: StorageNamespace, key: string) => `${ns}:${key}`;\n\n// Define overloads outside the object\nfunction get<T>(ns: StorageNamespace, key: string): T | null;\nfunction get<T>(ns: StorageNamespace, key: string, fallback: T): T;\nfunction get<T>(ns: StorageNamespace, key: string, fallback?: T): T | null {\n  try {\n    const raw = localStorage.getItem(k(ns, key));\n    if (raw == null) return (fallback ?? null) as T | null;\n    return JSON.parse(raw) as T;\n  } catch {\n    return (fallback ?? null) as T | null;\n  }\n}\n\nexport const storage = {\n  get, // Reference the standalone get function\n  set<T>(ns: StorageNamespace, key: string, value: T): void {\n    localStorage.setItem(k(ns, key), JSON.stringify(value));\n  },\n  remove(ns: StorageNamespace, key: string): void {\n    localStorage.removeItem(k(ns, key));\n  },\n  clear(ns: StorageNamespace): void {\n    const prefix = `${ns}:`;\n    for (let i = localStorage.length - 1; i >= 0; i--) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(prefix)) localStorage.removeItem(key);\n    }\n  },\n} as const;\n","import React, { useState } from \"react\";\n\ntype Props = {\n  value: string;\n  className?: string;\n};\n\nconst SecretText: React.FC<Props> = ({ value, className }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className={[\"inline-flex items-center gap-2\", className].join(\" \")}>\n      <code className=\"rounded bg-gray-100 px-2 py-1\">\n        {show ? value : \"••••••••\"}\n      </code>\n      <button\n        type=\"button\"\n        onClick={() => setShow((s) => !s)}\n        className=\"text-xs rounded border px-2 py-1 hover:bg-gray-50\"\n      >\n        {show ? \"Hide\" : \"Show\"}\n      </button>\n    </div>\n  );\n};\n\nexport default SecretText;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { storage, HUB_NS } from \"../../packages/storage\";\nimport type {\n  HubProject,\n  ProjectHubContextValue,\n} from \"../../types/project-hub\";\n\nconst LIST_KEY = \"projects\"; // NOT \"hub:projects\" (ns already applied)\nconst SELECTED_KEY = \"selectedProjectId\";\n\nfunction loadProjects(): HubProject[] {\n  return storage.get<HubProject[]>(HUB_NS, LIST_KEY, []);\n}\nfunction persistProjects(list: HubProject[]) {\n  storage.set(HUB_NS, LIST_KEY, list);\n}\n\nexport const ProjectHubContext = createContext<\n  ProjectHubContextValue | undefined\n>(undefined);\nexport const useProjectHubContext = () => useContext(ProjectHubContext);\n\nexport function ProjectHubProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [projects, setProjects] = useState<HubProject[]>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  const refresh = () => setProjects(loadProjects());\n\n  useEffect(() => {\n    refresh();\n    setSelectedId(storage.get<string | null>(HUB_NS, SELECTED_KEY, null));\n  }, []);\n\n  useEffect(() => {\n    if (selectedId) storage.set(HUB_NS, SELECTED_KEY, selectedId);\n    else storage.remove(HUB_NS, SELECTED_KEY);\n  }, [selectedId]);\n\n  const selected = useMemo<HubProject | null>(\n    () => projects.find((p) => p.id === selectedId) || null,\n    [projects, selectedId]\n  );\n\n  const selectProject = (id: string | null) => setSelectedId(id);\n\n  const addProject = (name: string): HubProject | null => {\n    const n = (name || \"\").trim();\n    if (!n) return null;\n\n    // de-dup by case-insensitive name\n    if (projects.some((p) => p.name.toLowerCase() === n.toLowerCase()))\n      return null;\n\n    const id = `${n.toLowerCase().replace(/\\s+/g, \"-\")}-${Date.now()}`;\n    const proj: HubProject = { id, name: n, sections: {} };\n    const next = [...projects, proj];\n\n    setProjects(next);\n    persistProjects(next);\n    setSelectedId(id);\n    return proj;\n  };\n\n  // Hub-only delete (does NOT touch Board data)\n  const deleteProject = (id: string) => {\n    const next = projects.filter((p) => p.id !== id);\n    setProjects(next);\n    persistProjects(next);\n    if (selectedId === id) setSelectedId(null);\n  };\n\n  const updateSection = (sectionKey: string, data: unknown) => {\n    if (!selectedId) return;\n    const next = projects.map((p) =>\n      p.id !== selectedId\n        ? p\n        : { ...p, sections: { ...(p.sections || {}), [sectionKey]: data } }\n    );\n    setProjects(next);\n    persistProjects(next);\n  };\n\n  const value: ProjectHubContextValue = {\n    projects,\n    selected,\n    selectedId,\n    setSelectedId,\n    selectProject,\n    addProject,\n    deleteProject,\n    updateSection,\n    refresh,\n  };\n\n  return (\n    <ProjectHubContext.Provider value={value}>\n      {children}\n    </ProjectHubContext.Provider>\n  );\n}\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n"],"names":["_ref","value","onChange","placeholder","className","dedupe","draft","setDraft","useState","inputRef","useRef","splitAndCommit","raw","parts","split","map","s","trim","filter","Boolean","length","base","Set","next","some","p","has","_jsxs","join","onClick","_inputRef$current2","current","focus","children","chip","i","_jsx","type","concat","idx","_inputRef$current","_","removeAt","ref","e","target","onKeyDown","key","preventDefault","slice","onBlur","v","Array","from","commit","title","disabled","FeatureRow","feature","storyCount","projectId","onOpen","onChanged","open","setOpen","editingName","setEditingName","name","setName","initialDesc","description","desc","setDesc","editingDesc","setEditingDesc","saveName","n","_objectSpread","updatedAt","Date","toISOString","upsertFeature","countChip","FiChevronDown","FiChevronRight","autoFocus","_Fragment","FiEdit2","remove","window","confirm","deleteFeature","id","FiTrash2","FiExternalLink","DescriptionSection","onSave","saveDesc","FeatureBody","featureId","_ref2","display","expanded","setExpanded","needsClamp","text","clampAt","arguments","undefined","useClamp","FiBookOpen","rows","_ref3","featureSummaries","find","addStory","_prompt","prompt","newStorySeed","upsertStory","FiPlus","stories","Link","to","status","points","ProjectEmptyExplainer","EmptyState","bullets","FeatureListEmpty","_ref4","onCreate","FeatureDashboard","navigate","useNavigate","search","useSearchParams","refreshKey","setRefreshKey","refresh","k","get","storage","BOARD_NS","all","useMemo","summaries","useEffect","bump","addEventListener","removeEventListener","addFeature","_prompt2","alert","f","newFeatureSeed","_ref5","isOpen","onClose","closeOnBackdrop","role","useProjectHub","ctx","useProjectHubContext","Error","K_FEATURES","K_STORIES","K_BUGS","S2T","Validation","Done","T2S","validation","done","broadcastFeatures","dispatchEvent","Event","readTasks","writeTasks","set","syncTaskToStory","task","_T2S$task$status","_T2S$task$status2","existing","loadStories","storyId","now","getFeatureById","nextUsId","createdAt","t","loadFeatures","saveFeatures","list","saveStories","loadBugs","saveBugs","uid","Math","random","toString","Number","tags","_loadFeatures$find","humanId","ix","findIndex","x","storyIds","b","story","_S2T","tasks","project","syncStoryToBoard","deleteStory","doomed","human","storyIdOrHumanId","moveStory","nextStatus","_loadStories$find","getStoryById","deleteStoryById","moveStoryByStoryId","features","bugs","storiesByFeat","Map","forEach","_storiesByFeat$get","arr","push","bugCounts","_bugCounts$get","_storiesByFeat$get2","fs","counts","_bugCounts$get2","bugCountsByStory","featuresByProject","action","HUB_NS","DOCS_NS","RN_NS","IDEAS_NS","ns","fallback","localStorage","getItem","JSON","parse","_unused","setItem","stringify","removeItem","clear","prefix","startsWith","show","setShow","LIST_KEY","SELECTED_KEY","persistProjects","ProjectHubContext","createContext","useContext","ProjectHubProvider","projects","setProjects","selectedId","setSelectedId","selected","selectProject","addProject","toLowerCase","replace","proj","sections","deleteProject","updateSection","sectionKey","data","Provider"],"sourceRoot":""}