{"version":3,"file":"static/js/498.8c39fa08.chunk.js","mappings":"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","sources":["components/ui/ChipInput.tsx","components/ui/IconButton.tsx","features/projectHub/components/HubSidebar.tsx","features/projectHub/constants/setupDefaults.js","utils/immutables.ts","features/projectHub/sections/Setup.jsx","features/projectHub/constants/architectureDefault.ts","features/projectHub/sections/Architecture.jsx","features/projectHub/constants/databaseDefault.js","features/projectHub/sections/Database.jsx","features/projectHub/components/MarkdownEditor.jsx","features/projectHub/components/MarkdownView.jsx","features/projectHub/sections/MarkdownSectionBase.jsx","features/projectHub/sections/Links.jsx","features/projectHub/constants/defaultDeploymentGuide.js","features/projectHub/sections/Deployment.jsx","features/projectHub/ProjectHubView.tsx","features/projectHub/sections/Issues.jsx","features/projectHub/sections/POCs.jsx","features/projectHub/sections/Screenshots.jsx","features/projectHub/sections/Revenue.jsx","features/projectHub/sections/Value.jsx","features/projectHub/sections/Maintenance.jsx","features/projectHub/sections/Demand.jsx","features/projectHub/sections/TechRequirements.jsx","features/projectHub/sections/Releases.jsx","features/projectHub/sections/UX.jsx","features/projectHub/sections/Documents.jsx","app/project-hub/App.jsx","components/ui/Modal.tsx","hooks/useProjectHub.ts","components/ui/EmptyState.tsx","components/ui/SecretText.tsx","features/projectHub/context.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\ntype Props = {\n  value: string[];\n  onChange: (next: string[]) => void;\n  placeholder?: string;\n  className?: string;\n  /** If true, trims and dedups automatically */\n  dedupe?: boolean;\n};\n\nconst ChipInput: React.FC<Props> = ({\n  value,\n  onChange,\n  placeholder = \"Add and press Enter\",\n  className = \"\",\n  dedupe = true,\n}) => {\n  const [draft, setDraft] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const commit = (raw: string) => {\n    const v = raw.trim();\n    if (!v) return;\n    const next = dedupe ? Array.from(new Set([...value, v])) : [...value, v];\n    onChange(next);\n    setDraft(\"\");\n  };\n\n  const splitAndCommit = (raw: string) => {\n    const parts = raw\n      .split(/[,;]/g)\n      .map((s) => s.trim())\n      .filter(Boolean);\n    if (!parts.length) return;\n    const base = new Set(value);\n    const next = dedupe\n      ? [...new Set([...value, ...parts])]\n      : [...value, ...parts];\n    if (next.length !== value.length || parts.some((p) => !base.has(p))) {\n      onChange(next);\n    }\n    setDraft(\"\");\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      // allow comma-separated on enter too\n      splitAndCommit(draft);\n    } else if (e.key === \"Backspace\" && !draft && value.length) {\n      // remove last chip\n      onChange(value.slice(0, -1));\n    } else if (e.key === \",\" || e.key === \";\") {\n      e.preventDefault();\n      splitAndCommit(draft);\n    }\n  };\n\n  const removeAt = (idx: number) => {\n    const next = value.filter((_, i) => i !== idx);\n    onChange(next);\n    // keep focus for fast editing\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div\n      className={[\n        \"flex flex-wrap gap-2 rounded border bg-white px-2 py-2\",\n        className,\n      ].join(\" \")}\n      onClick={() => inputRef.current?.focus()}\n    >\n      {value.map((chip, i) => (\n        <span\n          key={`${chip}-${i}`}\n          className=\"inline-flex items-center gap-1 rounded-full bg-gray-100 px-2 py-0.5 text-xs text-gray-800\"\n        >\n          {chip}\n          <button\n            type=\"button\"\n            aria-label={`Remove ${chip}`}\n            className=\"rounded p-0.5 hover:bg-gray-200\"\n            onClick={() => removeAt(i)}\n          >\n            ✕\n          </button>\n        </span>\n      ))}\n\n      <input\n        ref={inputRef}\n        value={draft}\n        onChange={(e) => setDraft(e.target.value)}\n        onKeyDown={onKeyDown}\n        onBlur={() => commit(draft)}\n        placeholder={value.length ? \"\" : placeholder}\n        className=\"min-w-[8ch] flex-1 outline-none text-sm placeholder:text-gray-400 bg-transparent\"\n      />\n    </div>\n  );\n};\n\nexport default ChipInput;\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  type?: \"button\" | \"submit\" | \"reset\";\n  className?: string;\n  title?: string;\n  disabled?: boolean;\n};\n\nconst IconButton: React.FC<Props> = ({\n  children,\n  onClick,\n  type = \"button\",\n  className = \"\",\n  title,\n  disabled,\n}) => (\n  <button\n    type={type}\n    title={title}\n    disabled={disabled}\n    onClick={onClick}\n    className={[\n      \"inline-flex items-center gap-1 rounded border px-3 py-1.5 text-sm\",\n      \"bg-white hover:bg-gray-50 text-gray-700\",\n      \"disabled:opacity-60 disabled:cursor-not-allowed\",\n      className,\n    ].join(\" \")}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import React, { useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport type { SectionDef, SectionKey, HubProject } from \"../../../types/project-hub\";\n\ntype Props = {\n    sections: SectionDef[];\n    activeKey: SectionKey;\n    onSelect?: (key: SectionKey) => void;\n    onConfirmDelete?: (project: HubProject) => void;\n};\n\nconst HubSidebar: React.FC<Props> = ({ sections, activeKey, onSelect, onConfirmDelete }) => {\n    const { projects, selected, setSelectedId, addProject } = useProjectHub();\n    const [newName, setNewName] = useState(\"\");\n\n    return (\n        <div className=\"flex h-full flex-col\">\n            <h3 className=\"text-xl font-bold mb-4\">Projects</h3>\n\n            {/* Projects list */}\n            <ul className=\"space-y-2 mb-4 overflow-y-auto pr-1\">\n                {projects.map((p) => (\n                    <li\n                        key={p.id}\n                        className={`flex items-center justify-between p-2 rounded-lg cursor-pointer transition ${selected?.id === p.id ? \"bg-blue-600 text-white\" : \"hover:bg-gray-800\"\n                            }`}\n                    >\n                        <span onClick={() => setSelectedId(p.id)} className=\"flex-1 pr-2\">\n                            {p.name}\n                        </span>\n                        {projects.length > 0 && (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    onConfirmDelete?.(p);\n                                }}\n                                className=\"p-1 rounded text-gray-400 hover:text-red-500\"\n                                title=\"Remove from Project Hub\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"h-4 w-4\"\n                                    fill=\"none\"\n                                    viewBox=\"0 0 24 24\"\n                                    stroke=\"currentColor\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                                    />\n                                </svg>\n                            </button>\n                        )}\n                    </li>\n                ))}\n                {projects.length === 0 && <li className=\"text-sm text-gray-400\">No projects yet.</li>}\n            </ul>\n\n            {/* New project */}\n            <div className=\"mb-6 space-y-2\">\n                <input\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)}\n                    placeholder=\"New project name\"\n                    className=\"w-full p-2 rounded-lg bg-gray-800 text-white placeholder-gray-400 focus:outline-none\"\n                />\n                <button\n                    onClick={() => {\n                        const n = newName.trim();\n                        if (!n) return;\n                        addProject(n);\n                        setNewName(\"\");\n                    }}\n                    className={`w-full py-2 rounded-lg font-semibold transition\n            ${newName.trim() ? \"bg-blue-600 hover:bg-blue-700 text-white\" : \"bg-gray-600 text-gray-300 cursor-not-allowed\"}`}\n                >\n                    Add Project\n                </button>\n            </div>\n\n            {/* Sections */}\n            <div className=\"mt-auto\">\n                <h4 className=\"font-semibold mb-2\">Sections</h4>\n                <ul className=\"space-y-1 max-h-64 overflow-y-auto pr-1\">\n                    {sections.map((s) => (\n                        <li key={s.key}>\n                            <button\n                                onClick={() => onSelect?.(s.key)}\n                                disabled={!selected}\n                                className={`w-full text-left px-2 py-1 rounded ${activeKey === s.key ? \"bg-gray-700\" : \"hover:bg-gray-800\"\n                                    } ${!selected ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\n                            >\n                                {s.title}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n                {!selected && (\n                    <p className=\"mt-3 text-xs text-gray-400\">Create/select a project to enable sections.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HubSidebar;","export const DEFAULT_SETUP = {\n    summary: '',\n    repoUrl: '',\n    issueTrackerUrl: '',\n    designDocUrl: '',\n    license: 'MIT',\n    packageManager: 'npm',\n    nodeVersion: '',\n    framework: '',\n    branchStrategy: 'trunk',\n    techStack: ['React', 'TailwindCSS', 'FastAPI'],\n    commands: {\n        install: 'npm install',\n        start: 'npm start',\n        build: 'npm run build',\n        test: 'npm test',\n        lint: 'npm run lint',\n        format: 'npm run format',\n    },\n    environments: [\n        { name: 'Dev', appUrl: '', apiUrl: '' },\n        { name: 'Staging', appUrl: '', apiUrl: '' },\n        { name: 'Prod', appUrl: '', apiUrl: '' },\n    ],\n    envVars: [],\n    tooling: {\n        lint: 'ESLint',\n        format: 'Prettier',\n        typecheck: 'TypeScript (optional)',\n    },\n    contacts: [],\n};\n","/** Immutable update: patch object or updater fn */\nexport function updateAt<T>(\n  arr: readonly T[],\n  idx: number,\n  patch: Partial<T> | ((prev: T) => T)\n): T[] {\n  return arr.map((v, i) =>\n    i !== idx\n      ? (v as T)\n      : typeof patch === \"function\"\n        ? (patch as (p: T) => T)(v as T)\n        : ({ ...(v as any), ...(patch as any) } as T)\n  );\n}\n\nexport function removeAt<T>(arr: readonly T[], idx: number): T[] {\n  return arr.filter((_, i) => i !== idx) as T[];\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport useProjectHub from '../../../hooks/useProjectHub';\nimport IconButton from '../../../components/ui/IconButton';\nimport ChipInput from '../../../components/ui/ChipInput';\nimport SecretText from '../../../components/ui/SecretText';\nimport { DEFAULT_SETUP } from '../constants/setupDefaults';\nimport { updateAt, removeAt } from '../../../utils/immutables';\n\n/** NOTE:\n *  - Read mode = clean, card-like overview\n *  - Edit mode = structured forms\n *  - Data lives under project.sections.setup (persisted via context)\n */\n\nexport default function Setup() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.setup && typeof selected.sections.setup === 'object'\n                ? selected.sections.setup\n                : DEFAULT_SETUP,\n        [selected]\n    );\n\n    const [mode, setMode] = useState('read'); // 'read' | 'edit'\n    const [form, setForm] = useState(DEFAULT_SETUP);\n\n    useEffect(() => {\n        setForm(saved || DEFAULT_SETUP);\n        setMode('read');\n    }, [saved, selected?.id]);\n\n    const patch = (p) => setForm((f) => ({ ...f, ...p }));\n\n    /* === READ MODE === */\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to configure <strong>Setup</strong>.\n            </div>\n        );\n    }\n\n    if (mode === 'read') {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Setup</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    {/* Basics */}\n                    <Card title=\"Basics\">\n                        <DL\n                            rows={[\n                                ['Repository', linkOrDash(form.repoUrl)],\n                                ['Issue tracker', linkOrDash(form.issueTrackerUrl)],\n                                ['Design doc', linkOrDash(form.designDocUrl)],\n                                ['License', valueOrDash(form.license)],\n                                ['Package manager', valueOrDash(form.packageManager)],\n                                ['Node', valueOrDash(form.nodeVersion)],\n                                ['Framework', valueOrDash(form.framework)],\n                                ['Branching', valueOrDash(form.branchStrategy)],\n                            ]}\n                        />\n                    </Card>\n\n                    {/* Tech stack */}\n                    <Card title=\"Tech stack\">\n                        {form.techStack?.length ? (\n                            <div className=\"flex flex-wrap gap-2\">\n                                {form.techStack.map((t) => (\n                                    <span key={t} className=\"px-2 py-1 rounded bg-gray-100 text-xs\">\n                                        {t}\n                                    </span>\n                                ))}\n                            </div>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Commands */}\n                    <Card title=\"Commands\">\n                        {form.commands ? (\n                            <pre className=\"bg-gray-50 rounded p-3 text-xs overflow-auto\">\n                                {JSON.stringify(form.commands, null, 2)}\n                            </pre>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Tooling */}\n                    <Card title=\"Tooling\">\n                        <DL\n                            rows={[\n                                ['Lint', valueOrDash(form.tooling?.lint)],\n                                ['Format', valueOrDash(form.tooling?.format)],\n                                ['Typecheck', valueOrDash(form.tooling?.typecheck)],\n                            ]}\n                        />\n                    </Card>\n\n                    {/* Environments */}\n                    <Card className=\"lg:col-span-2\" title=\"Environments\">\n                        {form.environments?.length ? (\n                            <div className=\"grid md:grid-cols-3 gap-4\">\n                                {form.environments.map((env, i) => (\n                                    <div key={i} className=\"rounded border p-3 text-sm\">\n                                        <div className=\"font-semibold mb-1\">\n                                            {env.name || `Env ${i + 1}`}\n                                        </div>\n                                        <div className=\"text-gray-500\">App:</div>\n                                        <div className=\"break-all\">{linkOrDash(env.appUrl)}</div>\n                                        <div className=\"text-gray-500 mt-1\">API:</div>\n                                        <div className=\"break-all\">{linkOrDash(env.apiUrl)}</div>\n                                    </div>\n                                ))}\n                            </div>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Env vars */}\n                    <Card className=\"lg:col-span-2\" title=\"Environment variables\">\n                        {form.envVars?.length ? (\n                            <div className=\"overflow-auto\">\n                                <table className=\"min-w-full text-sm\">\n                                    <thead>\n                                        <tr className=\"text-left text-gray-500\">\n                                            <th className=\"py-2 pr-3\">Key</th>\n                                            <th className=\"py-2 pr-3\">Value</th>\n                                            <th className=\"py-2 pr-3\">Secret</th>\n                                            <th className=\"py-2\">Description</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {form.envVars.map((v, i) => (\n                                            <tr key={i} className=\"border-t\">\n                                                <td className=\"py-2 pr-3 font-mono\">{v.key || '—'}</td>\n                                                <td className=\"py-2 pr-3\">\n                                                    {v.secret ? (\n                                                        <SecretText>{v.value}</SecretText>\n                                                    ) : (\n                                                        <span className=\"font-mono\">{v.value || '—'}</span>\n                                                    )}\n                                                </td>\n                                                <td className=\"py-2 pr-3\">{v.secret ? 'Yes' : 'No'}</td>\n                                                <td className=\"py-2\">{v.description || '—'}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n\n                    {/* Contacts */}\n                    <Card className=\"lg:col-span-2\" title=\"Contacts\">\n                        {form.contacts?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.contacts.map((c, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">\n                                            {c.role || 'Contact'}\n                                        </span>{' '}\n                                        {c.name ? `— ${c.name}` : ''}{' '}\n                                        {c.email ? (\n                                            <a\n                                                className=\"text-blue-700 hover:underline\"\n                                                href={`mailto:${c.email}`}\n                                            >\n                                                {c.email}\n                                            </a>\n                                        ) : (\n                                            ''\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n\n    /* === EDIT MODE === */\n    const onSave = () => {\n        updateSection('setup', form);\n        setMode('read');\n    };\n\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Setup</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button\n                        type=\"submit\"\n                        className=\"px-3 py-2 rounded bg-blue-600 text-white\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n            {/* Basics */}\n            <Card title=\"Basics\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <TextField\n                        label=\"Repository URL\"\n                        value={form.repoUrl}\n                        onChange={(v) => patch({ repoUrl: v })}\n                        placeholder=\"https://github.com/you/repo\"\n                    />\n                    <TextField\n                        label=\"Issue tracker URL\"\n                        value={form.issueTrackerUrl}\n                        onChange={(v) => patch({ issueTrackerUrl: v })}\n                        placeholder=\"https://github.com/you/repo/issues\"\n                    />\n                    <TextField\n                        label=\"Design doc URL\"\n                        value={form.designDocUrl}\n                        onChange={(v) => patch({ designDocUrl: v })}\n                        placeholder=\"https://docs.google.com/…\"\n                    />\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <TextField\n                            label=\"License\"\n                            value={form.license}\n                            onChange={(v) => patch({ license: v })}\n                        />\n                        <SelectField\n                            label=\"Package manager\"\n                            value={form.packageManager}\n                            onChange={(v) => patch({ packageManager: v })}\n                            options={['npm', 'yarn', 'pnpm', 'bun']}\n                        />\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <TextField\n                            label=\"Node version\"\n                            value={form.nodeVersion}\n                            onChange={(v) => patch({ nodeVersion: v })}\n                            placeholder=\"e.g. 20.x\"\n                        />\n                        <TextField\n                            label=\"Framework\"\n                            value={form.framework}\n                            onChange={(v) => patch({ framework: v })}\n                            placeholder=\"e.g. React + Vite\"\n                        />\n                    </div>\n                    <SelectField\n                        label=\"Branch strategy\"\n                        value={form.branchStrategy}\n                        onChange={(v) => patch({ branchStrategy: v })}\n                        options={[\n                            { label: 'Trunk-based', value: 'trunk' },\n                            { label: 'GitFlow', value: 'gitflow' },\n                            { label: 'None', value: 'none' },\n                        ]}\n                    />\n                </div>\n            </Card>\n\n            {/* Tech stack */}\n            <Card title=\"Tech stack\">\n                <ChipInput\n                    value={form.techStack}\n                    onChange={(v) => patch({ techStack: v })}\n                    placeholder=\"Add a technology and press Enter\"\n                />\n            </Card>\n\n            {/* Commands */}\n            <Card title=\"Commands\">\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    {Object.entries(form.commands).map(([k, v]) => (\n                        <TextField\n                            key={k}\n                            label={k}\n                            value={v}\n                            onChange={(val) =>\n                                patch({ commands: { ...form.commands, [k]: val } })\n                            }\n                            className=\"font-mono\"\n                        />\n                    ))}\n                </div>\n            </Card>\n\n            {/* Environments */}\n            <Card title=\"Environments\">\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    {form.environments.map((env, i) => (\n                        <div key={i} className=\"rounded border p-3 space-y-2\">\n                            <div className=\"flex items-center justify-between\">\n                                <input\n                                    value={env.name}\n                                    onChange={(e) =>\n                                        patch({\n                                            environments: updateAt(form.environments, i, {\n                                                name: e.target.value,\n                                            }),\n                                        })\n                                    }\n                                    placeholder={`Env ${i + 1} name`}\n                                    className=\"w-40 rounded border px-2 py-1\"\n                                />\n                                <IconButton\n                                    variant=\"ghost\"\n                                    onClick={() =>\n                                        patch({ environments: removeAt(form.environments, i) })\n                                    }\n                                >\n                                    Remove\n                                </IconButton>\n                            </div>\n                            <TextField\n                                label=\"App URL\"\n                                value={env.appUrl}\n                                onChange={(v) =>\n                                    patch({\n                                        environments: updateAt(form.environments, i, {\n                                            appUrl: v,\n                                        }),\n                                    })\n                                }\n                            />\n                            <TextField\n                                label=\"API URL\"\n                                value={env.apiUrl}\n                                onChange={(v) =>\n                                    patch({\n                                        environments: updateAt(form.environments, i, {\n                                            apiUrl: v,\n                                        }),\n                                    })\n                                }\n                            />\n                        </div>\n                    ))}\n                </div>\n                <div className=\"mt-3\">\n                    <IconButton\n                        variant=\"neutral\"\n                        onClick={() =>\n                            patch({\n                                environments: [\n                                    ...form.environments,\n                                    { name: '', appUrl: '', apiUrl: '' },\n                                ],\n                            })\n                        }\n                    >\n                        Add environment\n                    </IconButton>\n                </div>\n            </Card>\n\n            {/* Env vars */}\n            <Card title=\"Environment variables\">\n                <div className=\"overflow-auto\">\n                    <table className=\"min-w-full text-sm\">\n                        <thead>\n                            <tr className=\"text-left text-gray-500\">\n                                <th className=\"py-2 pr-3\">Key</th>\n                                <th className=\"py-2 pr-3\">Value</th>\n                                <th className=\"py-2 pr-3\">Secret</th>\n                                <th className=\"py-2 pr-3\">Description</th>\n                                <th className=\"py-2\" />\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {form.envVars.map((row, i) => (\n                                <tr key={i} className=\"border-t\">\n                                    <td className=\"py-2 pr-3\">\n                                        <input\n                                            value={row.key}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        key: e.target.value,\n                                                    }),\n                                                })\n                                            }\n                                            className=\"w-full rounded border px-2 py-1 font-mono\"\n                                        />\n                                    </td>\n                                    <td className=\"py-2 pr-3\">\n                                        <input\n                                            value={row.value}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        value: e.target.value,\n                                                    }),\n                                                })\n                                            }\n                                            className=\"w-full rounded border px-2 py-1 font-mono\"\n                                        />\n                                    </td>\n                                    <td className=\"py-2 pr-3\">\n                                        <select\n                                            value={row.secret ? 'yes' : 'no'}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        secret: e.target.value === 'yes',\n                                                    }),\n                                                })\n                                            }\n                                            className=\"rounded border px-2 py-1\"\n                                        >\n                                            <option value=\"no\">No</option>\n                                            <option value=\"yes\">Yes</option>\n                                        </select>\n                                    </td>\n                                    <td className=\"py-2 pr-3\">\n                                        <input\n                                            value={row.description}\n                                            onChange={(e) =>\n                                                patch({\n                                                    envVars: updateAt(form.envVars, i, {\n                                                        description: e.target.value,\n                                                    }),\n                                                })\n                                            }\n                                            className=\"w-full rounded border px-2 py-1\"\n                                        />\n                                    </td>\n                                    <td className=\"py-2\">\n                                        <IconButton\n                                            variant=\"ghost\"\n                                            onClick={() =>\n                                                patch({ envVars: removeAt(form.envVars, i) })\n                                            }\n                                        >\n                                            Remove\n                                        </IconButton>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"mt-3\">\n                    <IconButton\n                        variant=\"neutral\"\n                        onClick={() =>\n                            patch({\n                                envVars: [\n                                    ...form.envVars,\n                                    { key: '', value: '', secret: false, description: '' },\n                                ],\n                            })\n                        }\n                    >\n                        Add variable\n                    </IconButton>\n                </div>\n            </Card>\n\n            {/* Tooling */}\n            <Card title=\"Tooling\">\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <TextField\n                        label=\"Lint\"\n                        value={form.tooling.lint}\n                        onChange={(v) =>\n                            patch({ tooling: { ...form.tooling, lint: v } })\n                        }\n                    />\n                    <TextField\n                        label=\"Format\"\n                        value={form.tooling.format}\n                        onChange={(v) =>\n                            patch({ tooling: { ...form.tooling, format: v } })\n                        }\n                    />\n                    <TextField\n                        label=\"Typecheck\"\n                        value={form.tooling.typecheck}\n                        onChange={(v) =>\n                            patch({ tooling: { ...form.tooling, typecheck: v } })\n                        }\n                    />\n                </div>\n            </Card>\n\n            {/* Contacts */}\n            <Card title=\"Contacts\">\n                <div className=\"space-y-3\">\n                    {form.contacts.map((c, i) => (\n                        <div key={i} className=\"grid md:grid-cols-3 gap-3 items-start\">\n                            <TextField\n                                label=\"Role\"\n                                value={c.role}\n                                onChange={(v) =>\n                                    patch({ contacts: updateAt(form.contacts, i, { role: v }) })\n                                }\n                                placeholder=\"Owner\"\n                            />\n                            <TextField\n                                label=\"Name\"\n                                value={c.name}\n                                onChange={(v) =>\n                                    patch({ contacts: updateAt(form.contacts, i, { name: v }) })\n                                }\n                            />\n                            <div className=\"flex gap-2\">\n                                <TextField\n                                    label=\"Email\"\n                                    value={c.email}\n                                    onChange={(v) =>\n                                        patch({\n                                            contacts: updateAt(form.contacts, i, { email: v }),\n                                        })\n                                    }\n                                    placeholder=\"email@domain.com\"\n                                    className=\"flex-1\"\n                                />\n                                <IconButton\n                                    variant=\"ghost\"\n                                    onClick={() =>\n                                        patch({ contacts: removeAt(form.contacts, i) })\n                                    }\n                                >\n                                    Remove\n                                </IconButton>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"mt-3\">\n                    <IconButton\n                        variant=\"neutral\"\n                        onClick={() =>\n                            patch({\n                                contacts: [\n                                    ...form.contacts,\n                                    { role: '', name: '', email: '' },\n                                ],\n                            })\n                        }\n                    >\n                        Add contact\n                    </IconButton>\n                </div>\n            </Card>\n        </form>\n    );\n}\n\n/* ---------- small presentational helpers ---------- */\n\nfunction Card({ title, children, className }) {\n    return (\n        <section className={`rounded border bg-white p-4 ${className || ''}`}>\n            {title ? <h4 className=\"font-semibold mb-3\">{title}</h4> : null}\n            {children}\n        </section>\n    );\n}\n\nfunction DL({ rows = [] }) {\n    return (\n        <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n            {rows.map(([dt, dd], i) => (\n                <React.Fragment key={i}>\n                    <dt className=\"text-gray-500\">{dt}</dt>\n                    <dd className=\"col-span-2\">{dd}</dd>\n                </React.Fragment>\n            ))}\n        </dl>\n    );\n}\n\nfunction Empty() {\n    return <p className=\"text-sm text-gray-500\">—</p>;\n}\n\nfunction linkOrDash(href) {\n    if (!href) return '—';\n    return (\n        <a\n            className=\"text-blue-700 hover:underline break-all\"\n            href={href}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n        >\n            {href}\n        </a>\n    );\n}\n\nfunction valueOrDash(v) {\n    return v ? <span>{v}</span> : '—';\n}\n\nfunction TextField({ label, value, onChange, className, ...rest }) {\n    return (\n        <div>\n            {label && (\n                <label className=\"block text-sm text-gray-600 mb-1\">{label}</label>\n            )}\n            <input\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                className={`w-full rounded border px-3 py-2 ${className || ''}`}\n                {...rest}\n            />\n        </div>\n    );\n}\n\nfunction SelectField({ label, value, onChange, options = [] }) {\n    const opts =\n        typeof options[0] === 'string'\n            ? options.map((o) => ({ label: o, value: o }))\n            : options;\n\n    return (\n        <div>\n            {label && (\n                <label className=\"block text-sm text-gray-600 mb-1\">{label}</label>\n            )}\n            <select\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                className=\"w-full rounded border px-3 py-2\"\n            >\n                {opts.map((o) => (\n                    <option key={o.value} value={o.value}>\n                        {o.label}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n}\n","// src/features/projectHub/constants/architectureDefault.js\nconst architectureDefault = {\n    overview: \"\",\n\n    diagrams: [\n        { label: 'System Context', url: '' }\n    ],\n\n    services: [\n        { name: 'web', language: 'TypeScript', runtime: 'Node 20', repoUrl: '', owner: 'App Team' }\n    ],\n\n    apis: [\n        { name: 'Tasks', method: 'GET', path: '/api/tasks', auth: 'JWT', service: 'web', description: '' }\n    ],\n\n    dataStores: [\n        { name: 'app-db', type: 'PostgreSQL', version: '15', purpose: 'Primary OLTP' }\n    ],\n\n    queues: [\n        { name: 'events', tech: 'Kafka', purpose: 'Domain events' }\n    ],\n\n    thirdParty: [\n        { name: 'Stripe', purpose: 'Payments', docsUrl: '' }\n    ],\n\n    observability: {\n        logs: \"CloudWatch\",\n        metrics: \"Prometheus\",\n        tracing: \"OpenTelemetry\",\n        dashboardsUrl: \"\",\n        alertsUrl: \"\",\n    },\n\n    security: {\n        encryptionAtRest: true,\n        encryptionInTransit: true,\n        threatModelUrl: \"\",\n        dataRetentionNotes: \"\",\n        corsPolicy: \"\",\n        cspNotes: \"\",\n    },\n\n    availability: {\n        sla: \"99.9%\",\n        slo: \"99.9%\",\n        rpo: \"15m\",\n        rto: \"30m\",\n    },\n\n    scaling: {\n        strategy: \"Horizontal\",\n        autoScaling: true,\n        notes: \"\",\n    },\n\n    decisions: [\n        { date: '2025-09-10', title: 'Pick Postgres', status: 'Accepted', link: '' }\n    ],\n\n    risks: [\n        { risk: 'Vendor lock-in', mitigation: 'Abstract provider' }\n    ],\n\n    tags: [\"microservice\", \"rest\"],\n};\n\nexport default architectureDefault;\n","// src/features/projectHub/sections/Architecture.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\nimport architectureDefault from \"../constants/architectureDefault\";\n\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\n/* ---------- small table editors ---------- */\nfunction ServicesEditor({ value = [], onChange }) {\n    const add = () =>\n        onChange([\n            ...value,\n            { name: \"\", language: \"\", runtime: \"\", repoUrl: \"\", owner: \"\" },\n        ]);\n    const set = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Name</th>\n                        <th className=\"py-2 pr-3\">Language</th>\n                        <th className=\"py-2 pr-3\">Runtime</th>\n                        <th className=\"py-2 pr-3\">Repo</th>\n                        <th className=\"py-2 pr-3\">Owner</th>\n                        <th className=\"py-2\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((s, i) => (\n                        <tr key={i} className=\"border-t\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.name}\n                                    onChange={(e) => set(i, { name: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.language}\n                                    onChange={(e) => set(i, { language: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.runtime}\n                                    onChange={(e) => set(i, { runtime: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.repoUrl}\n                                    onChange={(e) => set(i, { repoUrl: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={s.owner}\n                                    onChange={(e) => set(i, { owner: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add service</RowBtn>\n            </div>\n        </div>\n    );\n}\n\nfunction ApiEditor({ value = [], onChange }) {\n    const add = () =>\n        onChange([\n            ...value,\n            {\n                name: \"\",\n                method: \"GET\",\n                path: \"\",\n                auth: \"None\",\n                service: \"\",\n                description: \"\",\n            },\n        ]);\n    const set = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Name</th>\n                        <th className=\"py-2 pr-3\">Method</th>\n                        <th className=\"py-2 pr-3\">Path</th>\n                        <th className=\"py-2 pr-3\">Auth</th>\n                        <th className=\"py-2 pr-3\">Service</th>\n                        <th className=\"py-2 pr-3\">Description</th>\n                        <th className=\"py-2\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((a, i) => (\n                        <tr key={i} className=\"border-t\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={a.name}\n                                    onChange={(e) => set(i, { name: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={a.method}\n                                    onChange={(e) => set(i, { method: e.target.value })}\n                                >\n                                    {[\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"].map((m) => (\n                                        <option key={m}>{m}</option>\n                                    ))}\n                                </select>\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1 font-mono\"\n                                    value={a.path}\n                                    onChange={(e) => set(i, { path: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={a.auth}\n                                    onChange={(e) => set(i, { auth: e.target.value })}\n                                >\n                                    {[\"None\", \"API Key\", \"OAuth2\", \"JWT\"].map((m) => (\n                                        <option key={m}>{m}</option>\n                                    ))}\n                                </select>\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={a.service}\n                                    onChange={(e) => set(i, { service: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1\"\n                                    value={a.description}\n                                    onChange={(e) => set(i, { description: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add API</RowBtn>\n            </div>\n        </div>\n    );\n}\n\nfunction SimpleListEditor({ value = [], onChange, columns }) {\n    const addEmpty = () =>\n        onChange([...value, Object.fromEntries(columns.map((c) => [c.key, \"\"]))]);\n    const set = (i, key, v) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], [key]: v };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        {columns.map((c) => (\n                            <th key={c.key} className=\"py-2 pr-3\">\n                                {c.label}\n                            </th>\n                        ))}\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            {columns.map((c) => (\n                                <td key={c.key} className=\"py-2 pr-3\">\n                                    <input\n                                        className=\"w-full rounded border px-2 py-1\"\n                                        value={row[c.key] || \"\"}\n                                        onChange={(e) => set(i, c.key, e.target.value)}\n                                    />\n                                </td>\n                            ))}\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={addEmpty}>Add</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/* ---------- main ---------- */\nexport default function Architecture() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.architecture &&\n                typeof selected.sections.architecture === \"object\"\n                ? selected.sections.architecture\n                : architectureDefault,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\"); // 'read' | 'edit'\n    const [form, setForm] = useState(architectureDefault);\n\n    useEffect(() => {\n        setForm(saved || architectureDefault);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const onSave = () => {\n        updateSection(\"architecture\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage{\" \"}\n                <strong>Architecture</strong>.\n            </div>\n        );\n    }\n\n    /* ---------- READ MODE ---------- */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Architecture</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                {/* Overview & Diagrams */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Overview</h4>\n                        <p className=\"text-sm whitespace-pre-line\">\n                            {form.overview || \"—\"}\n                        </p>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Diagrams</h4>\n                        {form.diagrams?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.diagrams.map((d, i) => (\n                                    <li key={i}>\n                                        {d.label ? `${d.label}: ` : \"\"}\n                                        {d.url ? (\n                                            <a\n                                                className=\"text-blue-700 hover:underline break-all\"\n                                                href={d.url}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                {d.url}\n                                            </a>\n                                        ) : (\n                                            \"—\"\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* Key resources */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Services</h4>\n                        {form.services?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.services.map((s, i) => (\n                                    <li key={i} className=\"break-words\">\n                                        <span className=\"font-medium\">{s.name || \"Service\"}</span>{\" \"}\n                                        — {s.language || \"?\"} @ {s.runtime || \"?\"}\n                                        {s.repoUrl && (\n                                            <>\n                                                {\" \"}\n                                                (<a\n                                                    className=\"text-blue-700 hover:underline\"\n                                                    href={s.repoUrl}\n                                                    target=\"_blank\"\n                                                    rel=\"noreferrer\"\n                                                >\n                                                    repo\n                                                </a>\n                                                )\n                                            </>\n                                        )}\n                                        {s.owner ? ` — ${s.owner}` : \"\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Data stores</h4>\n                        {form.dataStores?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.dataStores.map((d, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{d.name || \"Store\"}</span>{\" \"}\n                                        — {d.type || \"Type\"} {d.version ? `(${d.version})` : \"\"} —{\" \"}\n                                        {d.purpose || \"—\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* APIs */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">APIs</h4>\n                    {form.apis?.length ? (\n                        <div className=\"overflow-auto\">\n                            <table className=\"min-w-full text-sm\">\n                                <thead>\n                                    <tr className=\"text-left text-gray-500\">\n                                        <th className=\"py-2 pr-3\">Name</th>\n                                        <th className=\"py-2 pr-3\">Method</th>\n                                        <th className=\"py-2 pr-3\">Path</th>\n                                        <th className=\"py-2 pr-3\">Auth</th>\n                                        <th className=\"py-2 pr-3\">Service</th>\n                                        <th className=\"py-2 pr-3\">Description</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {form.apis.map((a, i) => (\n                                        <tr key={i} className=\"border-t\">\n                                            <td className=\"py-2 pr-3\">{a.name || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.method || \"—\"}</td>\n                                            <td className=\"py-2 pr-3 font-mono\">{a.path || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.auth || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.service || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">{a.description || \"—\"}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                {/* Other lists */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Queues / streams</h4>\n                        {form.queues?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.queues.map((q, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{q.name || \"Queue\"}</span> —{\" \"}\n                                        {q.tech || \"Tech\"} — {q.purpose || \"—\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">3rd-party dependencies</h4>\n                        {form.thirdParty?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.thirdParty.map((t, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{t.name || \"Vendor\"}</span> —{\" \"}\n                                        {t.purpose || \"—\"}{\" \"}\n                                        {t.docsUrl && (\n                                            <a\n                                                className=\"text-blue-700 hover:underline break-all ml-1\"\n                                                href={t.docsUrl}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                docs\n                                            </a>\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* Ops & security */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Observability</h4>\n                        <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n                            <dt className=\"text-gray-500\">Logs</dt>\n                            <dd className=\"col-span-2\">{form.observability.logs || \"—\"}</dd>\n                            <dt className=\"text-gray-500\">Metrics</dt>\n                            <dd className=\"col-span-2\">\n                                {form.observability.metrics || \"—\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">Tracing</dt>\n                            <dd className=\"col-span-2\">\n                                {form.observability.tracing || \"—\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">Dashboards</dt>\n                            <dd className=\"col-span-2 break-all\">\n                                {form.observability.dashboardsUrl ? (\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={form.observability.dashboardsUrl}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {form.observability.dashboardsUrl}\n                                    </a>\n                                ) : (\n                                    \"—\"\n                                )}\n                            </dd>\n                            <dt className=\"text-gray-500\">Alerts</dt>\n                            <dd className=\"col-span-2 break-all\">\n                                {form.observability.alertsUrl ? (\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={form.observability.alertsUrl}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {form.observability.alertsUrl}\n                                    </a>\n                                ) : (\n                                    \"—\"\n                                )}\n                            </dd>\n                        </dl>\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Security</h4>\n                        <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n                            <dt className=\"text-gray-500\">At rest</dt>\n                            <dd className=\"col-span-2\">\n                                {form.security.encryptionAtRest ? \"Yes\" : \"No\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">In transit</dt>\n                            <dd className=\"col-span-2\">\n                                {form.security.encryptionInTransit ? \"Yes\" : \"No\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">Threat model</dt>\n                            <dd className=\"col-span-2 break-all\">\n                                {form.security.threatModelUrl ? (\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={form.security.threatModelUrl}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {form.security.threatModelUrl}\n                                    </a>\n                                ) : (\n                                    \"—\"\n                                )}\n                            </dd>\n                            <dt className=\"text-gray-500\">Retention</dt>\n                            <dd className=\"col-span-2\">\n                                {form.security.dataRetentionNotes || \"—\"}\n                            </dd>\n                            <dt className=\"text-gray-500\">CORS</dt>\n                            <dd className=\"col-span-2\">{form.security.corsPolicy || \"—\"}</dd>\n                            <dt className=\"text-gray-500\">CSP</dt>\n                            <dd className=\"col-span-2\">{form.security.cspNotes || \"—\"}</dd>\n                        </dl>\n                    </div>\n                </div>\n\n                {/* Availability & scaling */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Availability</h4>\n                        <ul className=\"text-sm\">\n                            <li>SLA: {form.availability.sla || \"—\"}</li>\n                            <li>SLO: {form.availability.slo || \"—\"}</li>\n                            <li>RPO: {form.availability.rpo || \"—\"}</li>\n                            <li>RTO: {form.availability.rto || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Scaling</h4>\n                        <ul className=\"text-sm\">\n                            <li>Strategy: {form.scaling.strategy || \"—\"}</li>\n                            <li>Autoscaling: {form.scaling.autoScaling ? \"Yes\" : \"No\"}</li>\n                            <li>Notes: {form.scaling.notes || \"—\"}</li>\n                        </ul>\n                    </div>\n                </div>\n\n                {/* Decisions & Risks */}\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Architecture decisions</h4>\n                        {form.decisions?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.decisions.map((d, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">\n                                            {d.date ? `${d.date}: ` : \"\"}\n                                            {d.title || \"Decision\"}\n                                        </span>{\" \"}\n                                        — {d.status || \"Status\"}{\" \"}\n                                        {d.link && (\n                                            <a\n                                                className=\"text-blue-700 hover:underline ml-1 break-all\"\n                                                href={d.link}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                link\n                                            </a>\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Risks</h4>\n                        {form.risks?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.risks.map((r, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{r.risk || \"Risk\"}</span> —{\" \"}\n                                        {r.mitigation || \"Mitigation TBD\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                {/* Tags */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Tags</h4>\n                    {form.tags?.length ? (\n                        <div className=\"flex flex-wrap gap-2\">\n                            {form.tags.map((t) => (\n                                <span\n                                    key={t}\n                                    className=\"px-2 py-1 rounded bg-gray-100 text-xs\"\n                                >\n                                    {t}\n                                </span>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /* ---------- EDIT MODE ---------- */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Architecture</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button\n                        type=\"submit\"\n                        className=\"px-3 py-2 rounded bg-blue-600 text-white\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            {/* Overview & diagrams */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={4}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"Brief description of the system, key components and how they interact…\"\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Diagrams</h4>\n                <SimpleListEditor\n                    value={form.diagrams}\n                    onChange={(v) => onChange({ diagrams: v })}\n                    columns={[\n                        { key: \"label\", label: \"Label\" },\n                        { key: \"url\", label: \"URL\" },\n                    ]}\n                />\n            </section>\n\n            {/* Services */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Services</h4>\n                <ServicesEditor\n                    value={form.services}\n                    onChange={(v) => onChange({ services: v })}\n                />\n            </section>\n\n            {/* APIs */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">APIs</h4>\n                <ApiEditor value={form.apis} onChange={(v) => onChange({ apis: v })} />\n            </section>\n\n            {/* Data stores */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Data stores</h4>\n                <SimpleListEditor\n                    value={form.dataStores}\n                    onChange={(v) => onChange({ dataStores: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"type\", label: \"Type\" },\n                        { key: \"version\", label: \"Version\" },\n                        { key: \"purpose\", label: \"Purpose\" },\n                    ]}\n                />\n            </section>\n\n            {/* Queues / streams */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Queues / streams</h4>\n                <SimpleListEditor\n                    value={form.queues}\n                    onChange={(v) => onChange({ queues: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"tech\", label: \"Tech\" },\n                        { key: \"purpose\", label: \"Purpose\" },\n                    ]}\n                />\n            </section>\n\n            {/* Third-party */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">3rd-party dependencies</h4>\n                <SimpleListEditor\n                    value={form.thirdParty}\n                    onChange={(v) => onChange({ thirdParty: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"purpose\", label: \"Purpose\" },\n                        { key: \"docsUrl\", label: \"Docs URL\" },\n                    ]}\n                />\n            </section>\n\n            {/* Observability */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Observability</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Logs</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.logs}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        logs: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Metrics</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.metrics}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        metrics: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Tracing</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.tracing}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        tracing: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Dashboards URL\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.dashboardsUrl}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        dashboardsUrl: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Alerts URL\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.observability.alertsUrl}\n                            onChange={(e) =>\n                                onChange({\n                                    observability: {\n                                        ...form.observability,\n                                        alertsUrl: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </section>\n\n            {/* Security */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Security</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.encryptionAtRest}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        encryptionAtRest: e.target.checked,\n                                    },\n                                })\n                            }\n                        />\n                        <span className=\"text-sm\">Encryption at rest</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.encryptionInTransit}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        encryptionInTransit: e.target.checked,\n                                    },\n                                })\n                            }\n                        />\n                        <span className=\"text-sm\">Encryption in transit</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Threat model URL\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.threatModelUrl}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        threatModelUrl: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Data retention notes\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.dataRetentionNotes}\n                            onChange={(e) =>\n                                onChange({\n                                    security: {\n                                        ...form.security,\n                                        dataRetentionNotes: e.target.value,\n                                    },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            CORS policy\n                        </label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.corsPolicy}\n                            onChange={(e) =>\n                                onChange({\n                                    security: { ...form.security, corsPolicy: e.target.value },\n                                })\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">CSP</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.cspNotes}\n                            onChange={(e) =>\n                                onChange({\n                                    security: { ...form.security, cspNotes: e.target.value },\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </section>\n\n            {/* Availability & Scaling */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Availability</h4>\n                <div className=\"grid md:grid-cols-4 gap-4\">\n                    {[\"sla\", \"slo\", \"rpo\", \"rto\"].map((k) => (\n                        <div key={k}>\n                            <label className=\"block text-sm text-gray-600 mb-1 uppercase\">\n                                {k}\n                            </label>\n                            <input\n                                className=\"w-full rounded border px-3 py-2\"\n                                value={form.availability[k] || \"\"}\n                                onChange={(e) =>\n                                    onChange({\n                                        availability: {\n                                            ...form.availability,\n                                            [k]: e.target.value,\n                                        },\n                                    })\n                                }\n                            />\n                        </div>\n                    ))}\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Scaling</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">\n                            Strategy\n                        </label>\n                        <select\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.scaling.strategy}\n                            onChange={(e) =>\n                                onChange({\n                                    scaling: { ...form.scaling, strategy: e.target.value },\n                                })\n                            }\n                        >\n                            <option>Horizontal</option>\n                            <option>Vertical</option>\n                            <option>Mixed</option>\n                        </select>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.scaling.autoScaling}\n                            onChange={(e) =>\n                                onChange({\n                                    scaling: { ...form.scaling, autoScaling: e.target.checked },\n                                })\n                            }\n                        />\n                        <span className=\"text-sm\">Enable autoscaling</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Notes</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.scaling.notes}\n                            onChange={(e) =>\n                                onChange({\n                                    scaling: { ...form.scaling, notes: e.target.value },\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </section>\n\n            {/* Decisions, Risks, Tags */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Architecture decisions (ADR)</h4>\n                <SimpleListEditor\n                    value={form.decisions}\n                    onChange={(v) => onChange({ decisions: v })}\n                    columns={[\n                        { key: \"date\", label: \"Date\" },\n                        { key: \"title\", label: \"Title\" },\n                        { key: \"status\", label: \"Status\" },\n                        { key: \"link\", label: \"Link\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Risks</h4>\n                <SimpleListEditor\n                    value={form.risks}\n                    onChange={(v) => onChange({ risks: v })}\n                    columns={[\n                        { key: \"risk\", label: \"Risk\" },\n                        { key: \"mitigation\", label: \"Mitigation\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Tags</h4>\n                <ChipInput\n                    value={form.tags || []}\n                    onChange={(v) => onChange({ tags: v })}\n                    placeholder=\"Add a tag and press Enter\"\n                />\n            </section>\n        </form>\n    );\n}\n","// src/features/projectHub/constants/databaseDefault.js\nconst databaseDefault = {\n    overview: \"\",\n\n    // One or more engines you use across environments\n    engines: [\n        { label: 'Primary OLTP', type: 'PostgreSQL', version: '15', host: '', port: 5432, dbName: '', user: '', url: '' }\n    ],\n\n    // Logical schemas/namespaces\n    schemas: [\n        { name: 'public', description: '' }\n    ],\n\n    // High-level entity registry (keep it practical; fields/indexes summarized)\n    entities: [\n        {\n            name: 'Task',\n            table: 'tasks',\n            description: 'User task items',\n            fields: [{ name: 'id', type: 'uuid', pk: true, nullable: false, default: '' }],\n            indexes: [{ name: 'tasks_pkey', columns: 'id', type: 'PRIMARY' }]\n        }\n    ],\n\n    // Foreign-key or conceptual relations\n    relationships: [\n        { from: 'tasks.project_id', to: 'projects.id', type: 'many-to-one', onDelete: 'cascade' }\n    ],\n\n    // Migrations/seeding\n    migrations: { tool: \"\", path: \"\", notes: \"\" },\n    seed: { strategy: \"idempotent scripts\", path: \"\" },\n\n    // Perf/scaling knobs\n    performance: {\n        poolMin: 0,\n        poolMax: 10,\n        timeoutMs: 10000,\n        readReplicas: 0,\n        partitioning: \"\",\n        sharding: \"\",\n        cachingLayer: \"\", // e.g., Redis\n    },\n\n    // Backups/retention\n    backups: {\n        enabled: true,\n        schedule: \"daily 02:00 UTC\",\n        retentionDays: 30,\n        location: \"\",\n        restoreTestCadence: \"monthly\",\n    },\n    dataRetention: [\n        { table: 'events', retention: '30d', policy: '' }\n    ],\n\n    // Security/compliance\n    security: {\n        atRest: true,\n        inTransit: true,\n        rowLevelSecurity: false,\n        accessModel: \"RBAC\",\n        piiTables: [\"users\"],\n    },\n\n    // Handy queries + incidents log\n    queriesOfInterest: [\n        { name: 'List tasks by project', sql: 'SELECT ...', notes: '' }\n    ],\n    incidents: [\n        { date: '2025-09-11', summary: 'Lock contention on tasks', actionItems: 'Add index on ...' }\n    ],\n\n    tags: [\"oltp\"],\n};\n\nexport default databaseDefault;\n","// src/features/projectHub/sections/Database.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\nimport databaseDefault from \"../constants/databaseDefault\";\n\n/* utilities */\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\nfunction SimpleListEditor({ value = [], onChange, columns }) {\n    const addEmpty = () =>\n        onChange([...value, Object.fromEntries(columns.map((c) => [c.key, \"\"]))]);\n    const set = (i, key, v) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], [key]: v };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        {columns.map((c) => (\n                            <th key={c.key} className=\"py-2 pr-3\">\n                                {c.label}\n                            </th>\n                        ))}\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            {columns.map((c) => (\n                                <td key={c.key} className=\"py-2 pr-3\">\n                                    <input\n                                        className=\"w-full rounded border px-2 py-1\"\n                                        value={row[c.key] || \"\"}\n                                        onChange={(e) => set(i, c.key, e.target.value)}\n                                    />\n                                </td>\n                            ))}\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={addEmpty}>Add</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/* a compact Entities editor\n   - fieldsString: \"id:uuid!, project_id:uuid, title:text\"\n   - indexesString: \"tasks_pkey(id), idx_tasks_project(project_id)\"\n*/\nfunction EntitiesEditor({ value = [], onChange }) {\n    const add = () =>\n        onChange([\n            ...value,\n            {\n                name: \"\",\n                table: \"\",\n                description: \"\",\n                fields: [],\n                indexes: [],\n            },\n        ]);\n\n    const toFieldsString = (fields = []) =>\n        fields\n            .map((f) => `${f.name}:${f.type}${f.nullable === false || f.pk ? \"!\" : \"\"}`)\n            .join(\", \");\n\n    const fromFieldsString = (s) =>\n        (s || \"\")\n            .split(\",\")\n            .map((x) => x.trim())\n            .filter(Boolean)\n            .map((pair) => {\n                const [n, tRaw] = pair.split(\":\").map((v) => (v || \"\").trim());\n                const req = (tRaw || \"\").endsWith(\"!\");\n                const type = req ? tRaw.slice(0, -1) : tRaw;\n                return { name: n, type, nullable: !req };\n            });\n\n    const toIndexesString = (idx = []) =>\n        idx\n            .map((i) => `${i.name}(${i.columns || \"\"})`)\n            .join(\", \");\n\n    const fromIndexesString = (s) =>\n        (s || \"\")\n            .split(\",\")\n            .map((x) => x.trim())\n            .filter(Boolean)\n            .map((chunk) => {\n                const name = chunk.split(\"(\")[0]?.trim();\n                const columns = chunk.match(/\\((.*)\\)/)?.[1]?.trim() || \"\";\n                return { name, columns, type: \"\" };\n            });\n\n    const setRow = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Entity</th>\n                        <th className=\"py-2 pr-3\">Table</th>\n                        <th className=\"py-2 pr-3\">Description</th>\n                        <th className=\"py-2 pr-3\">Fields</th>\n                        <th className=\"py-2 pr-3\">Indexes</th>\n                        <th className=\"py-2\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((e, i) => (\n                        <tr key={i} className=\"border-t align-top\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-40 rounded border px-2 py-1\"\n                                    value={e.name}\n                                    onChange={(ev) => setRow(i, { name: ev.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-40 rounded border px-2 py-1 font-mono\"\n                                    value={e.table}\n                                    onChange={(ev) => setRow(i, { table: ev.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-64 rounded border px-2 py-1\"\n                                    value={e.description || \"\"}\n                                    onChange={(ev) => setRow(i, { description: ev.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-72 rounded border px-2 py-1 font-mono\"\n                                    placeholder=\"id:uuid!, project_id:uuid, title:text\"\n                                    value={toFieldsString(e.fields)}\n                                    onChange={(ev) => setRow(i, { fields: fromFieldsString(ev.target.value) })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-72 rounded border px-2 py-1 font-mono\"\n                                    placeholder=\"tasks_pkey(id), idx_tasks_project(project_id)\"\n                                    value={toIndexesString(e.indexes)}\n                                    onChange={(ev) => setRow(i, { indexes: fromIndexesString(ev.target.value) })}\n                                />\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add entity</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/* ---------- main section ---------- */\nexport default function Database() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.database &&\n                typeof selected.sections.database === \"object\"\n                ? selected.sections.database\n                : databaseDefault,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\");\n    const [form, setForm] = useState(databaseDefault);\n\n    useEffect(() => {\n        setForm(saved || databaseDefault);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const onSave = () => {\n        updateSection(\"database\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage <strong>Database</strong>.\n            </div>\n        );\n    }\n\n    /* ---------- READ MODE ---------- */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Database</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Overview</h4>\n                    <p className=\"text-sm whitespace-pre-line\">{form.overview || \"—\"}</p>\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Engines</h4>\n                        {form.engines?.length ? (\n                            <ul className=\"text-sm space-y-2\">\n                                {form.engines.map((e, i) => (\n                                    <li key={i} className=\"break-words\">\n                                        <span className=\"font-medium\">{e.label || \"Engine\"}</span>{\" \"}\n                                        — {e.type || \"Type\"} {e.version ? `(${e.version})` : \"\"} —{\" \"}\n                                        {e.host || \"\"}{e.port ? `:${e.port}` : \"\"} {e.dbName ? `/${e.dbName}` : \"\"}\n                                        {e.url && (\n                                            <>\n                                                {\" \"}(\n                                                <a\n                                                    className=\"text-blue-700 hover:underline\"\n                                                    href={e.url}\n                                                    target=\"_blank\"\n                                                    rel=\"noreferrer\"\n                                                >\n                                                    url\n                                                </a>\n                                                )\n                                            </>\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Schemas</h4>\n                        {form.schemas?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.schemas.map((s, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{s.name || \"Schema\"}</span>{\" \"}\n                                        — {s.description || \"—\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Entities</h4>\n                    {form.entities?.length ? (\n                        <div className=\"overflow-auto\">\n                            <table className=\"min-w-full text-sm\">\n                                <thead>\n                                    <tr className=\"text-left text-gray-500\">\n                                        <th className=\"py-2 pr-3\">Entity</th>\n                                        <th className=\"py-2 pr-3\">Table</th>\n                                        <th className=\"py-2 pr-3\">Fields</th>\n                                        <th className=\"py-2 pr-3\">Indexes</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {form.entities.map((e, i) => (\n                                        <tr key={i} className=\"border-t align-top\">\n                                            <td className=\"py-2 pr-3\">\n                                                <span className=\"font-medium\">{e.name || \"—\"}</span>\n                                                <div className=\"text-gray-500\">{e.description || \"\"}</div>\n                                            </td>\n                                            <td className=\"py-2 pr-3 font-mono\">{e.table || \"—\"}</td>\n                                            <td className=\"py-2 pr-3\">\n                                                {(e.fields || []).length\n                                                    ? e.fields.map((f) => `${f.name}:${f.type}${f.nullable === false || f.pk ? \"!\" : \"\"}`).join(\", \")\n                                                    : \"—\"}\n                                            </td>\n                                            <td className=\"py-2 pr-3\">\n                                                {(e.indexes || []).length\n                                                    ? e.indexes.map((ix) => `${ix.name}(${ix.columns})`).join(\", \")\n                                                    : \"—\"}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Relationships</h4>\n                    {form.relationships?.length ? (\n                        <ul className=\"text-sm list-disc pl-5\">\n                            {form.relationships.map((r, i) => (\n                                <li key={i}>\n                                    {r.from || \"?\"} → {r.to || \"?\"} ({r.type || \"relation\"}){\" \"}\n                                    {r.onDelete ? `onDelete=${r.onDelete}` : \"\"}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Backups</h4>\n                        <ul className=\"text-sm\">\n                            <li>Enabled: {form.backups.enabled ? \"Yes\" : \"No\"}</li>\n                            <li>Schedule: {form.backups.schedule || \"—\"}</li>\n                            <li>Retention: {form.backups.retentionDays || \"—\"} days</li>\n                            <li>Location: {form.backups.location || \"—\"}</li>\n                            <li>Restore tests: {form.backups.restoreTestCadence || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Performance</h4>\n                        <ul className=\"text-sm\">\n                            <li>Pool: {form.performance.poolMin}-{form.performance.poolMax}</li>\n                            <li>Timeout: {form.performance.timeoutMs} ms</li>\n                            <li>Read replicas: {form.performance.readReplicas}</li>\n                            <li>Partitioning: {form.performance.partitioning || \"—\"}</li>\n                            <li>Sharding: {form.performance.sharding || \"—\"}</li>\n                            <li>Caching: {form.performance.cachingLayer || \"—\"}</li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Security</h4>\n                        <ul className=\"text-sm\">\n                            <li>At rest: {form.security.atRest ? \"Yes\" : \"No\"}</li>\n                            <li>In transit: {form.security.inTransit ? \"Yes\" : \"No\"}</li>\n                            <li>RLS: {form.security.rowLevelSecurity ? \"Enabled\" : \"Disabled\"}</li>\n                            <li>Access model: {form.security.accessModel || \"—\"}</li>\n                            <li>PII tables: {(form.security.piiTables || []).join(\", \") || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Data retention</h4>\n                        {form.dataRetention?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.dataRetention.map((r, i) => (\n                                    <li key={i}>\n                                        {r.table || \"table\"} — {r.retention || \"—\"} {r.policy ? `(${r.policy})` : \"\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Queries of interest</h4>\n                    {form.queriesOfInterest?.length ? (\n                        <ul className=\"text-sm space-y-3\">\n                            {form.queriesOfInterest.map((q, i) => (\n                                <li key={i}>\n                                    <div className=\"font-medium\">{q.name || \"Query\"}</div>\n                                    <pre className=\"bg-gray-50 rounded p-2 text-xs overflow-auto\">\n                                        {q.sql || \"\"}\n                                    </pre>\n                                    {q.notes && <div className=\"text-gray-500 text-xs mt-1\">{q.notes}</div>}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Migrations</h4>\n                        <ul className=\"text-sm\">\n                            <li>Tool: {form.migrations.tool || \"—\"}</li>\n                            <li>Path: {form.migrations.path || \"—\"}</li>\n                            <li>Notes: {form.migrations.notes || \"—\"}</li>\n                        </ul>\n                    </div>\n                    <div className=\"rounded border bg-white p-4\">\n                        <h4 className=\"font-semibold mb-2\">Incidents</h4>\n                        {form.incidents?.length ? (\n                            <ul className=\"text-sm list-disc pl-5\">\n                                {form.incidents.map((r, i) => (\n                                    <li key={i}>\n                                        <span className=\"font-medium\">{r.date || \"date\"}</span> — {r.summary || \"—\"}\n                                        {r.actionItems ? ` (actions: ${r.actionItems})` : \"\"}\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-sm text-gray-500\">—</p>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Tags</h4>\n                    {(form.tags || []).length ? (\n                        <div className=\"flex flex-wrap gap-2\">\n                            {form.tags.map((t) => (\n                                <span key={t} className=\"px-2 py-1 rounded bg-gray-100 text-xs\">\n                                    {t}\n                                </span>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /* ---------- EDIT MODE ---------- */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Database</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button type=\"submit\" className=\"px-3 py-2 rounded bg-blue-600 text-white\">\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={3}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"High-level DB strategy, OLTP/OLAP split, multi-tenant notes…\"\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Engines</h4>\n                <SimpleListEditor\n                    value={form.engines}\n                    onChange={(v) => onChange({ engines: v })}\n                    columns={[\n                        { key: \"label\", label: \"Label\" },\n                        { key: \"type\", label: \"Type\" },\n                        { key: \"version\", label: \"Version\" },\n                        { key: \"host\", label: \"Host\" },\n                        { key: \"port\", label: \"Port\" },\n                        { key: \"dbName\", label: \"DB\" },\n                        { key: \"user\", label: \"User\" },\n                        { key: \"url\", label: \"URL\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Schemas</h4>\n                <SimpleListEditor\n                    value={form.schemas}\n                    onChange={(v) => onChange({ schemas: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"description\", label: \"Description\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Entities</h4>\n                <EntitiesEditor\n                    value={form.entities}\n                    onChange={(v) => onChange({ entities: v })}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Relationships</h4>\n                <SimpleListEditor\n                    value={form.relationships}\n                    onChange={(v) => onChange({ relationships: v })}\n                    columns={[\n                        { key: \"from\", label: \"From\" },\n                        { key: \"to\", label: \"To\" },\n                        { key: \"type\", label: \"Type\" },\n                        { key: \"onDelete\", label: \"onDelete\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Migrations</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Tool</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.migrations.tool}\n                            onChange={(e) => onChange({ migrations: { ...form.migrations, tool: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Path</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.migrations.path}\n                            onChange={(e) => onChange({ migrations: { ...form.migrations, path: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Notes</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.migrations.notes}\n                            onChange={(e) => onChange({ migrations: { ...form.migrations, notes: e.target.value } })}\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Performance</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Pool min</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.poolMin}\n                            onChange={(e) => onChange({ performance: { ...form.performance, poolMin: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Pool max</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.poolMax}\n                            onChange={(e) => onChange({ performance: { ...form.performance, poolMax: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Timeout (ms)</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.timeoutMs}\n                            onChange={(e) => onChange({ performance: { ...form.performance, timeoutMs: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Read replicas</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.readReplicas}\n                            onChange={(e) => onChange({ performance: { ...form.performance, readReplicas: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Partitioning</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.partitioning}\n                            onChange={(e) => onChange({ performance: { ...form.performance, partitioning: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Sharding</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.sharding}\n                            onChange={(e) => onChange({ performance: { ...form.performance, sharding: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Caching layer</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.performance.cachingLayer}\n                            onChange={(e) => onChange({ performance: { ...form.performance, cachingLayer: e.target.value } })}\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Backups</h4>\n                <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.backups.enabled}\n                            onChange={(e) => onChange({ backups: { ...form.backups, enabled: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Enabled</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Schedule</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.schedule}\n                            onChange={(e) => onChange({ backups: { ...form.backups, schedule: e.target.value } })}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Retention (days)</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.retentionDays}\n                            onChange={(e) => onChange({ backups: { ...form.backups, retentionDays: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Location</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.location}\n                            onChange={(e) => onChange({ backups: { ...form.backups, location: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">Restore test cadence</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.backups.restoreTestCadence}\n                            onChange={(e) => onChange({ backups: { ...form.backups, restoreTestCadence: e.target.value } })}\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Data retention</h4>\n                <SimpleListEditor\n                    value={form.dataRetention}\n                    onChange={(v) => onChange({ dataRetention: v })}\n                    columns={[\n                        { key: \"table\", label: \"Table\" },\n                        { key: \"retention\", label: \"Retention\" },\n                        { key: \"policy\", label: \"Policy/notes\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Security</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.atRest}\n                            onChange={(e) => onChange({ security: { ...form.security, atRest: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Encryption at rest</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.inTransit}\n                            onChange={(e) => onChange({ security: { ...form.security, inTransit: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Encryption in transit</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                        <input\n                            type=\"checkbox\"\n                            checked={!!form.security.rowLevelSecurity}\n                            onChange={(e) => onChange({ security: { ...form.security, rowLevelSecurity: e.target.checked } })}\n                        />\n                        <span className=\"text-sm\">Row-level security</span>\n                    </div>\n                    <div>\n                        <label className=\"block text-sm text-gray-600 mb-1\">Access model</label>\n                        <input\n                            className=\"w-full rounded border px-3 py-2\"\n                            value={form.security.accessModel}\n                            onChange={(e) => onChange({ security: { ...form.security, accessModel: e.target.value } })}\n                        />\n                    </div>\n                    <div className=\"md:col-span-2\">\n                        <label className=\"block text-sm text-gray-600 mb-1\">PII tables</label>\n                        <ChipInput\n                            value={form.security.piiTables || []}\n                            onChange={(v) => onChange({ security: { ...form.security, piiTables: v } })}\n                            placeholder=\"Add table and press Enter\"\n                        />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Queries of interest</h4>\n                <SimpleListEditor\n                    value={form.queriesOfInterest}\n                    onChange={(v) => onChange({ queriesOfInterest: v })}\n                    columns={[\n                        { key: \"name\", label: \"Name\" },\n                        { key: \"sql\", label: \"SQL\" },\n                        { key: \"notes\", label: \"Notes\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Incidents</h4>\n                <SimpleListEditor\n                    value={form.incidents}\n                    onChange={(v) => onChange({ incidents: v })}\n                    columns={[\n                        { key: \"date\", label: \"Date\" },\n                        { key: \"summary\", label: \"Summary\" },\n                        { key: \"actionItems\", label: \"Action items\" },\n                    ]}\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Tags</h4>\n                <ChipInput\n                    value={form.tags || []}\n                    onChange={(v) => onChange({ tags: v })}\n                    placeholder=\"Add a tag and press Enter\"\n                />\n            </section>\n        </form>\n    );\n}\n","import React from 'react';\n\nexport default function MarkdownEditor({ value, onChange, placeholder }) {\n    return (\n        <textarea\n            value={value}\n            onChange={(e) => onChange?.(e.target.value)}\n            placeholder={placeholder}\n            className=\"w-full min-h-[220px] border rounded p-3 focus:outline-none\"\n        />\n    );\n}\n","import React from 'react';\nimport { marked } from 'marked';\n\n// Force links to open in new tab\nconst renderer = new marked.Renderer();\nrenderer.link = (href, title, text) => {\n    const t = title ? ` title=\"${title}\"` : '';\n    return `<a href=\"${href}\"${t} target=\"_blank\" rel=\"noopener noreferrer\">${text}</a>`;\n};\nmarked.setOptions({ breaks: true });\n\nexport default function MarkdownView({ text }) {\n    const html = marked.parse(text || '', { renderer });\n    return <div className=\"prose max-w-none\" dangerouslySetInnerHTML={{ __html: html }} />;\n}\n","import React, { useState, useEffect } from 'react';\nimport useProjectHub from '../../../hooks/useProjectHub';\nimport MarkdownEditor from '../components/MarkdownEditor';\nimport MarkdownView from '../components/MarkdownView';\n\nexport default function MarkdownSectionBase({ sectionKey, placeholder }) {\n    const { selected, updateSection } = useProjectHub();\n    const [mode, setMode] = useState('read');\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        setText(selected?.sections?.[sectionKey] || '');\n    }, [selected, sectionKey]);\n\n    const onSave = () => {\n        updateSection(sectionKey, text);\n        setMode('read');\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to edit this section.\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"space-y-3\">\n            <div className=\"flex items-center gap-2\">\n                <div className=\"ml-auto flex gap-2\">\n                    {mode === 'read' ? (\n                        <button onClick={() => setMode('edit')} className=\"px-3 py-2 rounded bg-gray-200\">Edit</button>\n                    ) : (\n                        <>\n                            <button onClick={() => setMode('read')} className=\"px-3 py-2 rounded bg-gray-200\">Cancel</button>\n                            <button onClick={onSave} className=\"px-3 py-2 rounded bg-blue-600 text-white\">Save</button>\n                        </>\n                    )}\n                </div>\n            </div>\n\n            {mode === 'read' ? (\n                text?.trim() ? (\n                    <div className=\"rounded border bg-white p-4\">\n                        <MarkdownView text={text} />\n                    </div>\n                ) : (\n                    <div className=\"rounded-lg border bg-white p-8 text-gray-500\">\n                        Nothing here yet. Click <strong>Edit</strong> to add content.\n                    </div>\n                )\n            ) : (\n                <MarkdownEditor value={text} onChange={setText} placeholder={placeholder} />\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\n\n/** ---------- defaults (kept local for this section) ---------- */\nconst defaultLinks = {\n    overview: \"\",\n    bookmarks: [\n        { label: 'Production', url: 'https://app.example.com', notes: '' }\n    ],\n    // Curated groups you’ll likely use; you can rename / add / remove in edit mode\n    categories: [\n        { name: \"Repositories\", links: [] },\n        { name: \"Documentation\", links: [] },\n        { name: \"Design\", links: [] },\n        { name: \"Monitoring\", links: [] },\n        { name: \"Dashboards\", links: [] },\n        { name: \"Services / Vendors\", links: [] },\n        { name: \"Environments\", links: [] },\n    ],\n    tags: [],\n};\n\n/** ---------- small reusable bits for this file ---------- */\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\nfunction TableEditor({ value = [], onChange, columns }) {\n    const addEmpty = () =>\n        onChange([...value, Object.fromEntries(columns.map((c) => [c.key, \"\"]))]);\n\n    const set = (i, key, v) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], [key]: v };\n        onChange(copy);\n    };\n\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        {columns.map((c) => (\n                            <th key={c.key} className=\"py-2 pr-3\">\n                                {c.label}\n                            </th>\n                        ))}\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            {columns.map((c) => (\n                                <td key={c.key} className=\"py-2 pr-3\">\n                                    <input\n                                        className=\"w-full rounded border px-2 py-1\"\n                                        value={row[c.key] || \"\"}\n                                        onChange={(e) => set(i, c.key, e.target.value)}\n                                        placeholder={c.placeholder}\n                                    />\n                                </td>\n                            ))}\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={addEmpty}>Add</RowBtn>\n            </div>\n        </div>\n    );\n}\n\n/** ---------- main component ---------- */\nexport default function Links() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.links && typeof selected.sections.links === \"object\"\n                ? selected.sections.links\n                : defaultLinks,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\"); // 'read' | 'edit'\n    const [form, setForm] = useState(defaultLinks);\n\n    useEffect(() => {\n        setForm(saved || defaultLinks);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const onSave = () => {\n        updateSection(\"links\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage <strong>Links</strong>.\n            </div>\n        );\n    }\n\n    /** ---------- READ MODE ---------- */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Links</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                {/* Overview */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Overview</h4>\n                    <p className=\"text-sm whitespace-pre-line\">\n                        {form.overview || \"—\"}\n                    </p>\n                </div>\n\n                {/* Quick bookmarks */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Quick bookmarks</h4>\n                    {form.bookmarks?.length ? (\n                        <ul className=\"text-sm space-y-2\">\n                            {form.bookmarks.map((b, i) => (\n                                <li key={i} className=\"break-words\">\n                                    <a\n                                        className=\"text-blue-700 hover:underline\"\n                                        href={b.url || \"#\"}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {b.label || b.url || \"Link\"}\n                                    </a>\n                                    {b.notes ? <span className=\"text-gray-500\"> — {b.notes}</span> : null}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n\n                {/* Grouped categories */}\n                <div className=\"space-y-6\">\n                    {form.categories?.map((cat, idx) => (\n                        <div key={idx} className=\"rounded border bg-white p-4\">\n                            <h4 className=\"font-semibold mb-2\">{cat.name || \"Category\"}</h4>\n                            {cat.links?.length ? (\n                                <ul className=\"text-sm space-y-2\">\n                                    {cat.links.map((l, i) => (\n                                        <li key={i} className=\"break-words\">\n                                            <a\n                                                className=\"text-blue-700 hover:underline\"\n                                                href={l.url || \"#\"}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                {l.label || l.url || \"Link\"}\n                                            </a>\n                                            {l.notes ? (\n                                                <span className=\"text-gray-500\"> — {l.notes}</span>\n                                            ) : null}\n                                        </li>\n                                    ))}\n                                </ul>\n                            ) : (\n                                <p className=\"text-sm text-gray-500\">—</p>\n                            )}\n                        </div>\n                    ))}\n                </div>\n\n                {/* Tags */}\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Tags</h4>\n                    {(form.tags || []).length ? (\n                        <div className=\"flex flex-wrap gap-2\">\n                            {form.tags.map((t) => (\n                                <span key={t} className=\"px-2 py-1 rounded bg-gray-100 text-xs\">\n                                    {t}\n                                </span>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-gray-500\">—</p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /** ---------- EDIT MODE ---------- */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Links</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button\n                        type=\"submit\"\n                        className=\"px-3 py-2 rounded bg-blue-600 text-white\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            {/* Overview */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={3}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"What belongs here? e.g., where to find repos, docs, dashboards, service consoles…\"\n                />\n            </section>\n\n            {/* Bookmarks */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Quick bookmarks</h4>\n                <TableEditor\n                    value={form.bookmarks}\n                    onChange={(v) => onChange({ bookmarks: v })}\n                    columns={[\n                        { key: \"label\", label: \"Label\", placeholder: \"Production\" },\n                        { key: \"url\", label: \"URL\", placeholder: \"https://…\" },\n                        { key: \"notes\", label: \"Notes\", placeholder: \"What is this?\" },\n                    ]}\n                />\n            </section>\n\n            {/* Categories */}\n            <section className=\"rounded border bg-white p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                    <h4 className=\"font-semibold\">Categories</h4>\n                    <RowBtn\n                        onClick={() =>\n                            onChange({\n                                categories: [...(form.categories || []), { name: \"\", links: [] }],\n                            })\n                        }\n                    >\n                        Add category\n                    </RowBtn>\n                </div>\n\n                <div className=\"grid lg:grid-cols-2 gap-6\">\n                    {(form.categories || []).map((cat, ci) => {\n                        const setCat = (patch) => {\n                            const copy = [...form.categories];\n                            copy[ci] = { ...copy[ci], ...patch };\n                            onChange({ categories: copy });\n                        };\n                        const addLink = () =>\n                            setCat({\n                                links: [\n                                    ...(cat.links || []),\n                                    { label: \"\", url: \"\", notes: \"\" },\n                                ],\n                            });\n                        const setLink = (i, patch) => {\n                            const links = [...(cat.links || [])];\n                            links[i] = { ...links[i], ...patch };\n                            setCat({ links });\n                        };\n                        const removeLink = (i) =>\n                            setCat({ links: (cat.links || []).filter((_, idx) => idx !== i) });\n\n                        return (\n                            <div key={ci} className=\"rounded border p-4\">\n                                <div className=\"flex items-center justify-between mb-3\">\n                                    <input\n                                        className=\"w-64 rounded border px-2 py-1 font-semibold\"\n                                        value={cat.name}\n                                        onChange={(e) => setCat({ name: e.target.value })}\n                                        placeholder=\"Category name (e.g., Repositories)\"\n                                    />\n                                    <RowBtn\n                                        onClick={() =>\n                                            onChange({\n                                                categories: form.categories.filter((_, i) => i !== ci),\n                                            })\n                                        }\n                                    >\n                                        Remove\n                                    </RowBtn>\n                                </div>\n\n                                {(cat.links || []).length === 0 ? (\n                                    <button\n                                        type=\"button\"\n                                        onClick={addLink}\n                                        className=\"text-sm text-blue-700 hover:underline\"\n                                    >\n                                        Add first link\n                                    </button>\n                                ) : (\n                                    <div className=\"space-y-3\">\n                                        {(cat.links || []).map((l, li) => (\n                                            <div key={li} className=\"grid md:grid-cols-3 gap-2\">\n                                                <input\n                                                    className=\"rounded border px-2 py-1\"\n                                                    value={l.label}\n                                                    onChange={(e) => setLink(li, { label: e.target.value })}\n                                                    placeholder=\"Label (e.g., Frontend)\"\n                                                />\n                                                <input\n                                                    className=\"rounded border px-2 py-1\"\n                                                    value={l.url}\n                                                    onChange={(e) => setLink(li, { url: e.target.value })}\n                                                    placeholder=\"https://…\"\n                                                />\n                                                <div className=\"flex gap-2\">\n                                                    <input\n                                                        className=\"flex-1 rounded border px-2 py-1\"\n                                                        value={l.notes || \"\"}\n                                                        onChange={(e) => setLink(li, { notes: e.target.value })}\n                                                        placeholder=\"Notes (optional)\"\n                                                    />\n                                                    <RowBtn onClick={() => removeLink(li)}>Remove</RowBtn>\n                                                </div>\n                                            </div>\n                                        ))}\n                                        <RowBtn onClick={addLink}>Add link</RowBtn>\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </section>\n\n            {/* Tags */}\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Tags</h4>\n                <ChipInput\n                    value={form.tags || []}\n                    onChange={(v) => onChange({ tags: v })}\n                    placeholder=\"Add a tag and press Enter\"\n                />\n            </section>\n        </form>\n    );\n}\n","// Default structure for a deployment guide across environments.\n// Tweak engines/tools to match your stack.\n\nconst defaultDeploymentGuide = {\n    overview:\n        \"How we build, ship, verify, and roll back the app across environments.\",\n\n    global: {\n        repository: \"\",\n        pipeline: \"\",                 // e.g. GitHub Actions workflow name\n        artifactRegistry: \"\",         // e.g. GHCR / ECR / GCR\n        runtimeNotes: \"Node 20 / Python 3.11\",\n        onCallContact: \"\",            // name/email/slack\n    },\n\n    environments: [\n        {\n            key: \"dev\",\n            label: \"Development\",\n            domains: { app: \"\", api: \"\" },\n\n            frontend: {\n                buildCmd: \"npm ci && npm run build\",\n                artifact: \"\",             // e.g. s3://bucket/app-dev-<sha>.zip\n                container: { image: \"\", tag: \"latest\", registry: \"\" },\n                deployCmd: \"npx wrangler pages deploy ./dist\",\n                cdn: \"Cloudflare\",\n                notes: \"\",\n            },\n\n            backend: {\n                runtime: \"FastAPI / Uvicorn\",\n                buildCmd: \"poetry install && poetry build\",\n                container: { image: \"\", tag: \"latest\", registry: \"\" },\n                migrationsCmd: \"alembic upgrade head\",\n                deployCmd: \"kubectl apply -f k8s/dev\",\n                notes: \"\",\n            },\n\n            database: {\n                engine: \"PostgreSQL\",\n                version: \"\",\n                host: \"\",\n                name: \"\",\n                user: \"\",\n                migrationTool: \"Alembic\",\n                backupPolicy: \"Daily (7 days)\",\n                readReplicas: false,\n                notes: \"\",\n            },\n\n            envVars: [\n                { key: \"APP_URL\", value: \"\", secret: false },\n                { key: \"API_URL\", value: \"\", secret: false },\n            ],\n\n            preChecks: [\n                \"CI pipeline green\",\n                \"No critical open incidents\",\n            ],\n            postChecks: [\n                \"Basic smoke tests pass\",\n                \"Error rate < 1% for 10 min\",\n            ],\n\n            rollback: {\n                strategy: \"Re-deploy previous image tag\",\n                command: \"\",\n                notes: \"\",\n            },\n        },\n\n        {\n            key: \"staging\",\n            label: \"Staging\",\n            domains: { app: \"\", api: \"\" },\n\n            frontend: {\n                buildCmd: \"npm ci && npm run build\",\n                artifact: \"\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                deployCmd: \"aws s3 sync dist s3://my-site-staging\",\n                cdn: \"CloudFront\",\n                notes: \"\",\n            },\n\n            backend: {\n                runtime: \"FastAPI / Uvicorn\",\n                buildCmd: \"poetry install && poetry build\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                migrationsCmd: \"alembic upgrade head\",\n                deployCmd: \"kubectl apply -f k8s/staging\",\n                notes: \"\",\n            },\n\n            database: {\n                engine: \"PostgreSQL\",\n                version: \"\",\n                host: \"\",\n                name: \"\",\n                user: \"\",\n                migrationTool: \"Alembic\",\n                backupPolicy: \"Daily (14 days)\",\n                readReplicas: true,\n                notes: \"\",\n            },\n\n            envVars: [\n                { key: \"APP_URL\", value: \"\", secret: false },\n                { key: \"API_URL\", value: \"\", secret: false },\n            ],\n\n            preChecks: [\n                \"Staging parity with prod (schema/flags)\",\n                \"Change request approved\",\n            ],\n            postChecks: [\n                \"QA smoke tests pass\",\n                \"Synthetic checks green\",\n            ],\n\n            rollback: {\n                strategy: \"Previous image tag / DB restore (if needed)\",\n                command: \"\",\n                notes: \"\",\n            },\n        },\n\n        {\n            key: \"prod\",\n            label: \"Production\",\n            domains: { app: \"\", api: \"\" },\n\n            frontend: {\n                buildCmd: \"npm ci && npm run build\",\n                artifact: \"\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                deployCmd: \"aws s3 sync dist s3://my-site-prod --delete\",\n                cdn: \"CloudFront\",\n                notes: \"Invalidate CDN after deploy.\",\n            },\n\n            backend: {\n                runtime: \"FastAPI / Uvicorn (HA)\",\n                buildCmd: \"poetry install && poetry build\",\n                container: { image: \"\", tag: \"\", registry: \"\" },\n                migrationsCmd: \"alembic upgrade head\",\n                deployCmd: \"kubectl rollout restart deploy/api -n prod\",\n                notes: \"Blue/green or canary preferred.\",\n            },\n\n            database: {\n                engine: \"PostgreSQL (managed)\",\n                version: \"\",\n                host: \"\",\n                name: \"\",\n                user: \"\",\n                migrationTool: \"Alembic\",\n                backupPolicy: \"Point-in-time, 30 days\",\n                readReplicas: true,\n                notes: \"\",\n            },\n\n            envVars: [\n                { key: \"APP_URL\", value: \"\", secret: false },\n                { key: \"API_URL\", value: \"\", secret: false },\n            ],\n\n            preChecks: [\n                \"Change freeze respected\",\n                \"SLOs healthy\",\n                \"On-call aware\",\n            ],\n            postChecks: [\n                \"Business smoke tests pass\",\n                \"No alert spikes\",\n                \"CDN cache invalidation completed\",\n            ],\n\n            rollback: {\n                strategy: \"Rollback to previous deployment revision\",\n                command: \"kubectl rollout undo deploy/api -n prod\",\n                notes: \"If schema changed, run down migration cautiously.\",\n            },\n        },\n    ],\n};\n\nexport default defaultDeploymentGuide;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport useProjectHub from \"../../../hooks/useProjectHub\";\nimport IconButton from \"../../../components/ui/IconButton\";\nimport ChipInput from \"../../../components/ui/ChipInput\";\nimport defaultDeploymentGuide from \"../constants/defaultDeploymentGuide\";\n\n/* Local tiny helpers (kept simple & self-contained) */\nconst RowBtn = ({ onClick, children }) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"px-2 py-1 rounded border text-xs hover:bg-gray-50\"\n    >\n        {children}\n    </button>\n);\n\nfunction EnvVarTable({ value = [], onChange }) {\n    const set = (i, patch) => {\n        const copy = [...value];\n        copy[i] = { ...copy[i], ...patch };\n        onChange(copy);\n    };\n    const add = () =>\n        onChange([...value, { key: \"\", value: \"\", secret: false }]);\n    const remove = (i) => onChange(value.filter((_, idx) => idx !== i));\n\n    return (\n        <div className=\"overflow-auto\">\n            <table className=\"min-w-full text-sm\">\n                <thead>\n                    <tr className=\"text-left text-gray-500\">\n                        <th className=\"py-2 pr-3\">Key</th>\n                        <th className=\"py-2 pr-3\">Value</th>\n                        <th className=\"py-2 pr-3\">Secret</th>\n                        <th className=\"py-2\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {value.map((row, i) => (\n                        <tr key={i} className=\"border-t\">\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1 font-mono\"\n                                    value={row.key}\n                                    onChange={(e) => set(i, { key: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <input\n                                    className=\"w-full rounded border px-2 py-1 font-mono\"\n                                    value={row.value}\n                                    onChange={(e) => set(i, { value: e.target.value })}\n                                />\n                            </td>\n                            <td className=\"py-2 pr-3\">\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={row.secret ? \"yes\" : \"no\"}\n                                    onChange={(e) => set(i, { secret: e.target.value === \"yes\" })}\n                                >\n                                    <option value=\"no\">No</option>\n                                    <option value=\"yes\">Yes</option>\n                                </select>\n                            </td>\n                            <td className=\"py-2\">\n                                <RowBtn onClick={() => remove(i)}>Remove</RowBtn>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <RowBtn onClick={add}>Add variable</RowBtn>\n            </div>\n        </div>\n    );\n}\n\nexport default function Deployment() {\n    const { selected, updateSection } = useProjectHub();\n\n    const saved = useMemo(\n        () =>\n            selected?.sections?.deployment &&\n                typeof selected.sections.deployment === \"object\"\n                ? selected.sections.deployment\n                : defaultDeploymentGuide,\n        [selected]\n    );\n\n    const [mode, setMode] = useState(\"read\");\n    const [form, setForm] = useState(defaultDeploymentGuide);\n\n    useEffect(() => {\n        setForm(saved || defaultDeploymentGuide);\n        setMode(\"read\");\n    }, [saved, selected?.id]);\n\n    const onChange = (patch) => setForm((f) => ({ ...f, ...patch }));\n    const setEnv = (key, patch) =>\n        onChange({\n            environments: form.environments.map((e) =>\n                e.key === key ? { ...e, ...patch } : e\n            ),\n        });\n\n    const onSave = () => {\n        updateSection(\"deployment\", form);\n        setMode(\"read\");\n    };\n\n    if (!selected) {\n        return (\n            <div className=\"rounded-lg border bg-white p-8 text-gray-600\">\n                Create or select a project on the left to manage the{\" \"}\n                <strong>Deployment guide</strong>.\n            </div>\n        );\n    }\n\n    /* READ MODE */\n    if (mode === \"read\") {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold\">Deployment guide</h3>\n                    <IconButton onClick={() => setMode(\"edit\")}>Edit</IconButton>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Overview</h4>\n                    <p className=\"text-sm whitespace-pre-line\">\n                        {form.overview || \"—\"}\n                    </p>\n                </div>\n\n                <div className=\"rounded border bg-white p-4\">\n                    <h4 className=\"font-semibold mb-2\">Global</h4>\n                    <dl className=\"grid grid-cols-3 gap-y-2 text-sm\">\n                        <dt className=\"text-gray-500\">Repository</dt>\n                        <dd className=\"col-span-2 break-all\">\n                            {form.global.repository ? (\n                                <a\n                                    className=\"text-blue-700 hover:underline\"\n                                    href={form.global.repository}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    {form.global.repository}\n                                </a>\n                            ) : (\n                                \"—\"\n                            )}\n                        </dd>\n                        <dt className=\"text-gray-500\">Pipeline</dt>\n                        <dd className=\"col-span-2\">{form.global.pipeline || \"—\"}</dd>\n                        <dt className=\"text-gray-500\">Artifact registry</dt>\n                        <dd className=\"col-span-2\">\n                            {form.global.artifactRegistry || \"—\"}\n                        </dd>\n                        <dt className=\"text-gray-500\">Runtime</dt>\n                        <dd className=\"col-span-2\">{form.global.runtimeNotes || \"—\"}</dd>\n                        <dt className=\"text-gray-500\">On-call</dt>\n                        <dd className=\"col-span-2\">{form.global.onCallContact || \"—\"}</dd>\n                    </dl>\n                </div>\n\n                {/* Environments */}\n                {form.environments.map((env) => (\n                    <div key={env.key} className=\"rounded border bg-white p-4 space-y-4\">\n                        <h4 className=\"font-semibold text-lg\">{env.label}</h4>\n\n                        <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div className=\"rounded border p-3\">\n                                <div className=\"text-xs text-gray-500 mb-1\">App URL</div>\n                                <div className=\"break-all\">\n                                    {env.domains.app ? (\n                                        <a\n                                            className=\"text-blue-700 hover:underline\"\n                                            href={env.domains.app}\n                                            target=\"_blank\"\n                                            rel=\"noreferrer\"\n                                        >\n                                            {env.domains.app}\n                                        </a>\n                                    ) : (\n                                        \"—\"\n                                    )}\n                                </div>\n                                <div className=\"text-xs text-gray-500 mt-2 mb-1\">API URL</div>\n                                <div className=\"break-all\">\n                                    {env.domains.api ? (\n                                        <a\n                                            className=\"text-blue-700 hover:underline\"\n                                            href={env.domains.api}\n                                            target=\"_blank\"\n                                            rel=\"noreferrer\"\n                                        >\n                                            {env.domains.api}\n                                        </a>\n                                    ) : (\n                                        \"—\"\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Frontend</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Build</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.frontend.buildCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Deploy</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.frontend.deployCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">CDN</dt>\n                                    <dd className=\"col-span-2\">{env.frontend.cdn || \"—\"}</dd>\n                                </dl>\n                                {env.frontend.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.frontend.notes}</p>\n                                ) : null}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Backend</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Runtime</dt>\n                                    <dd className=\"col-span-2\">{env.backend.runtime || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Build</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.backend.buildCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Migrations</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.backend.migrationsCmd || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Deploy</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.backend.deployCmd || \"—\"}\n                                    </dd>\n                                </dl>\n                                {env.backend.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.backend.notes}</p>\n                                ) : null}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Database</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Engine</dt>\n                                    <dd className=\"col-span-2\">{env.database.engine || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Host</dt>\n                                    <dd className=\"col-span-2 break-all\">\n                                        {env.database.host || \"—\"}\n                                    </dd>\n                                    <dt className=\"text-gray-500\">Name</dt>\n                                    <dd className=\"col-span-2\">{env.database.name || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Backups</dt>\n                                    <dd className=\"col-span-2\">\n                                        {env.database.backupPolicy || \"—\"}\n                                    </dd>\n                                </dl>\n                                {env.database.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.database.notes}</p>\n                                ) : null}\n                            </div>\n                        </div>\n\n                        <div className=\"rounded border p-3\">\n                            <div className=\"font-semibold mb-2\">Environment variables</div>\n                            {env.envVars?.length ? (\n                                <div className=\"overflow-auto\">\n                                    <table className=\"min-w-full text-sm\">\n                                        <thead>\n                                            <tr className=\"text-left text-gray-500\">\n                                                <th className=\"py-2 pr-3\">Key</th>\n                                                <th className=\"py-2 pr-3\">Value</th>\n                                                <th className=\"py-2 pr-3\">Secret</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {env.envVars.map((v, i) => (\n                                                <tr key={i} className=\"border-t\">\n                                                    <td className=\"py-2 pr-3 font-mono\">{v.key || \"—\"}</td>\n                                                    <td className=\"py-2 pr-3 font-mono\">{v.value || \"—\"}</td>\n                                                    <td className=\"py-2 pr-3\">{v.secret ? \"Yes\" : \"No\"}</td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            ) : (\n                                <p className=\"text-sm text-gray-500\">—</p>\n                            )}\n                        </div>\n\n                        <div className=\"grid md:grid-cols-3 gap-4\">\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Pre-deployment checks</div>\n                                {(env.preChecks || []).length ? (\n                                    <ul className=\"list-disc list-inside text-sm space-y-1\">\n                                        {env.preChecks.map((c, i) => (\n                                            <li key={i}>{c}</li>\n                                        ))}\n                                    </ul>\n                                ) : (\n                                    <p className=\"text-sm text-gray-500\">—</p>\n                                )}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Post-deployment checks</div>\n                                {(env.postChecks || []).length ? (\n                                    <ul className=\"list-disc list-inside text-sm space-y-1\">\n                                        {env.postChecks.map((c, i) => (\n                                            <li key={i}>{c}</li>\n                                        ))}\n                                    </ul>\n                                ) : (\n                                    <p className=\"text-sm text-gray-500\">—</p>\n                                )}\n                            </div>\n\n                            <div className=\"rounded border p-3\">\n                                <div className=\"font-semibold mb-2\">Rollback</div>\n                                <dl className=\"grid grid-cols-3 gap-y-1 text-sm\">\n                                    <dt className=\"text-gray-500\">Strategy</dt>\n                                    <dd className=\"col-span-2\">{env.rollback.strategy || \"—\"}</dd>\n                                    <dt className=\"text-gray-500\">Command</dt>\n                                    <dd className=\"col-span-2 font-mono\">\n                                        {env.rollback.command || \"—\"}\n                                    </dd>\n                                </dl>\n                                {env.rollback.notes ? (\n                                    <p className=\"text-xs text-gray-600 mt-2\">{env.rollback.notes}</p>\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n            </div>\n        );\n    }\n\n    /* EDIT MODE */\n    return (\n        <form\n            className=\"space-y-6\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSave();\n            }}\n        >\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold\">Edit Deployment guide</h3>\n                <div className=\"flex gap-2\">\n                    <IconButton onClick={() => setMode(\"read\")}>Cancel</IconButton>\n                    <button type=\"submit\" className=\"px-3 py-2 rounded bg-blue-600 text-white\">\n                        Save\n                    </button>\n                </div>\n            </div>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Overview</h4>\n                <textarea\n                    rows={3}\n                    className=\"w-full rounded border px-3 py-2\"\n                    value={form.overview}\n                    onChange={(e) => onChange({ overview: e.target.value })}\n                    placeholder=\"Summarize how we deploy, verify, and roll back.\"\n                />\n            </section>\n\n            <section className=\"rounded border bg-white p-4\">\n                <h4 className=\"font-semibold mb-3\">Global</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Repository URL\"\n                        value={form.global.repository}\n                        onChange={(e) => onChange({ global: { ...form.global, repository: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Pipeline (e.g. GH Actions workflow)\"\n                        value={form.global.pipeline}\n                        onChange={(e) => onChange({ global: { ...form.global, pipeline: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Artifact registry\"\n                        value={form.global.artifactRegistry}\n                        onChange={(e) => onChange({ global: { ...form.global, artifactRegistry: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2\"\n                        placeholder=\"Runtime notes\"\n                        value={form.global.runtimeNotes}\n                        onChange={(e) => onChange({ global: { ...form.global, runtimeNotes: e.target.value } })}\n                    />\n                    <input\n                        className=\"rounded border px-3 py-2 md:col-span-2\"\n                        placeholder=\"On-call contact (name/email/slack)\"\n                        value={form.global.onCallContact}\n                        onChange={(e) => onChange({ global: { ...form.global, onCallContact: e.target.value } })}\n                    />\n                </div>\n            </section>\n\n            {form.environments.map((env) => (\n                <section key={env.key} className=\"rounded border bg-white p-4 space-y-4\">\n                    <h4 className=\"font-semibold text-lg\">{env.label}</h4>\n\n                    {/* URLs */}\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                        <input\n                            className=\"rounded border px-3 py-2\"\n                            placeholder=\"App URL\"\n                            value={env.domains.app}\n                            onChange={(e) => setEnv(env.key, { domains: { ...env.domains, app: e.target.value } })}\n                        />\n                        <input\n                            className=\"rounded border px-3 py-2\"\n                            placeholder=\"API URL\"\n                            value={env.domains.api}\n                            onChange={(e) => setEnv(env.key, { domains: { ...env.domains, api: e.target.value } })}\n                        />\n                    </div>\n\n                    {/* Frontend */}\n                    <div className=\"rounded border p-3 space-y-2\">\n                        <div className=\"font-semibold\">Frontend</div>\n                        <div className=\"grid md:grid-cols-2 gap-3\">\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Build command\"\n                                value={env.frontend.buildCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, buildCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Deploy command\"\n                                value={env.frontend.deployCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, deployCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Artifact (optional)\"\n                                value={env.frontend.artifact}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, artifact: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"CDN (optional)\"\n                                value={env.frontend.cdn}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, cdn: e.target.value } })\n                                }\n                            />\n                            <textarea\n                                rows={2}\n                                className=\"md:col-span-2 rounded border px-3 py-2\"\n                                placeholder=\"Notes\"\n                                value={env.frontend.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { frontend: { ...env.frontend, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n\n                    {/* Backend */}\n                    <div className=\"rounded border p-3 space-y-2\">\n                        <div className=\"font-semibold\">Backend</div>\n                        <div className=\"grid md:grid-cols-2 gap-3\">\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Runtime (e.g. FastAPI / Uvicorn)\"\n                                value={env.backend.runtime}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, runtime: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Build command\"\n                                value={env.backend.buildCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, buildCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Migrations command\"\n                                value={env.backend.migrationsCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, migrationsCmd: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2 font-mono\"\n                                placeholder=\"Deploy command\"\n                                value={env.backend.deployCmd}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, deployCmd: e.target.value } })\n                                }\n                            />\n                            <textarea\n                                rows={2}\n                                className=\"md:col-span-2 rounded border px-3 py-2\"\n                                placeholder=\"Notes\"\n                                value={env.backend.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { backend: { ...env.backend, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n\n                    {/* Database */}\n                    <div className=\"rounded border p-3 space-y-2\">\n                        <div className=\"font-semibold\">Database</div>\n                        <div className=\"grid md:grid-cols-2 gap-3\">\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Engine (e.g. PostgreSQL)\"\n                                value={env.database.engine}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, engine: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Version\"\n                                value={env.database.version}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, version: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Host\"\n                                value={env.database.host}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, host: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"DB name\"\n                                value={env.database.name}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, name: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"DB user\"\n                                value={env.database.user}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, user: e.target.value } })\n                                }\n                            />\n                            <input\n                                className=\"rounded border px-3 py-2\"\n                                placeholder=\"Backup policy\"\n                                value={env.database.backupPolicy}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, backupPolicy: e.target.value } })\n                                }\n                            />\n                            <div className=\"md:col-span-2\">\n                                <label className=\"text-sm text-gray-600 mr-2\">Read replicas</label>\n                                <select\n                                    className=\"rounded border px-2 py-1\"\n                                    value={env.database.readReplicas ? \"yes\" : \"no\"}\n                                    onChange={(e) =>\n                                        setEnv(env.key, {\n                                            database: { ...env.database, readReplicas: e.target.value === \"yes\" },\n                                        })\n                                    }\n                                >\n                                    <option value=\"no\">No</option>\n                                    <option value=\"yes\">Yes</option>\n                                </select>\n                            </div>\n                            <textarea\n                                rows={2}\n                                className=\"md:col-span-2 rounded border px-3 py-2\"\n                                placeholder=\"Notes\"\n                                value={env.database.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { database: { ...env.database, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n\n                    {/* Env vars */}\n                    <div className=\"rounded border p-3\">\n                        <div className=\"font-semibold mb-2\">Environment variables</div>\n                        <EnvVarTable\n                            value={env.envVars}\n                            onChange={(v) => setEnv(env.key, { envVars: v })}\n                        />\n                    </div>\n\n                    {/* Checks */}\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                        <div className=\"rounded border p-3\">\n                            <div className=\"font-semibold mb-2\">Pre-deployment checks</div>\n                            <ChipInput\n                                value={env.preChecks || []}\n                                onChange={(v) => setEnv(env.key, { preChecks: v })}\n                                placeholder=\"Add check and press Enter\"\n                            />\n                        </div>\n                        <div className=\"rounded border p-3\">\n                            <div className=\"font-semibold mb-2\">Post-deployment checks</div>\n                            <ChipInput\n                                value={env.postChecks || []}\n                                onChange={(v) => setEnv(env.key, { postChecks: v })}\n                                placeholder=\"Add check and press Enter\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Rollback */}\n                    <div className=\"rounded border p-3 grid md:grid-cols-2 gap-3\">\n                        <div>\n                            <label className=\"block text-sm text-gray-600 mb-1\">Rollback strategy</label>\n                            <input\n                                className=\"w-full rounded border px-3 py-2\"\n                                value={env.rollback.strategy}\n                                onChange={(e) =>\n                                    setEnv(env.key, { rollback: { ...env.rollback, strategy: e.target.value } })\n                                }\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm text-gray-600 mb-1\">Rollback command</label>\n                            <input\n                                className=\"w-full rounded border px-3 py-2 font-mono\"\n                                value={env.rollback.command}\n                                onChange={(e) =>\n                                    setEnv(env.key, { rollback: { ...env.rollback, command: e.target.value } })\n                                }\n                            />\n                        </div>\n                        <div className=\"md:col-span-2\">\n                            <label className=\"block text-sm text-gray-600 mb-1\">Notes</label>\n                            <textarea\n                                rows={2}\n                                className=\"w-full rounded border px-3 py-2\"\n                                value={env.rollback.notes}\n                                onChange={(e) =>\n                                    setEnv(env.key, { rollback: { ...env.rollback, notes: e.target.value } })\n                                }\n                            />\n                        </div>\n                    </div>\n                </section>\n            ))}\n        </form>\n    );\n}\n","import React, { JSX, useEffect, useMemo, useState } from \"react\";\nimport HubSidebar from \"./components/HubSidebar\";\nimport { ProjectHubProvider } from \"./context\";\nimport { EmptyState } from \"packages/ui\";\n\n// Sections\nimport Setup from \"./sections/Setup\";\nimport Architecture from \"./sections/Architecture\";\nimport Database from \"./sections/Database\";\nimport UX from \"./sections/UX\";\nimport Documents from \"./sections/Documents\";\nimport Links from \"./sections/Links\";\nimport Issues from \"./sections/Issues\";\nimport POCs from \"./sections/POCs\";\nimport Screenshots from \"./sections/Screenshots\";\nimport Revenue from \"./sections/Revenue\";\nimport Value from \"./sections/Value\";\nimport Maintenance from \"./sections/Maintenance\";\nimport Demand from \"./sections/Demand\";\nimport TechRequirements from \"./sections/TechRequirements\";\nimport Deployment from \"./sections/Deployment\";\nimport Releases from \"./sections/Releases\";\n\nimport useProjectHub from \"../../hooks/useProjectHub\";\nimport Modal from \"../../components/ui/Modal\";\n\nimport { storage, HUB_NS } from \"packages/storage\";\nimport type {\n  SectionDef,\n  HubProject,\n  SectionKey,\n  UseProjectHubShape,\n} from \"types/project-hub\";\n/** ---- Types (co-located for now; feel free to move to src/types/hub.ts) ---- */\n\n/** ---- Static section map ---- */\n\nconst SECTIONS: SectionDef[] = [\n  { key: \"setup\", title: \"Setup\", comp: Setup },\n  { key: \"architecture\", title: \"Architecture\", comp: Architecture },\n  { key: \"database\", title: \"Database\", comp: Database },\n  { key: \"links\", title: \"Links\", comp: Links },\n  { key: \"deployment\", title: \"Deployment guide\", comp: Deployment },\n  { key: \"issues\", title: \"Issues faced\", comp: Issues },\n  { key: \"pocs\", title: \"Proof of concepts\", comp: POCs },\n  { key: \"screenshots\", title: \"Screenshots\", comp: Screenshots },\n  { key: \"revenue\", title: \"Revenue\", comp: Revenue },\n  { key: \"value\", title: \"Immediate value\", comp: Value },\n  { key: \"maintenance\", title: \"Maintenance\", comp: Maintenance },\n  { key: \"demand\", title: \"Demand\", comp: Demand },\n  { key: \"tech\", title: \"Tech Requirements\", comp: TechRequirements },\n  { key: \"releases\", title: \"Releases\", comp: Releases },\n  { key: \"ux\", title: \"UX\", comp: UX },\n  { key: \"documents\", title: \"Documents\", comp: Documents },\n];\n\n/** ---- Public component ---- */\n\nexport default function ProjectHubView() {\n  return (\n    <ProjectHubProvider>\n      <ProjectHubInner />\n    </ProjectHubProvider>\n  );\n}\n\n/** ---- Inner (uses the hub context) ---- */\n\nfunction ProjectHubInner(): JSX.Element {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState<HubProject | null>(\n    null\n  );\n\n  // initial section from storage; fall back to first valid section\n  const initialKey: SectionKey = useMemo(() => {\n    const saved = storage.get<SectionKey>(HUB_NS, \"activeSection\");\n    const valid = SECTIONS.some((s) => s.key === saved);\n    return (valid ? saved : SECTIONS[0].key) as SectionKey;\n  }, []);\n  const [activeKey, setActiveKey] = useState<SectionKey>(initialKey);\n\n  const ActiveComp = SECTIONS.find((s) => s.key === activeKey)?.comp ?? Setup;\n\n  // Delete modal state from hub hook (typed minimally for this file)\n  const { deleteProject, selected } = useProjectHub() as UseProjectHubShape;\n\n  // persist active section\n  useEffect(() => {\n    storage.set(HUB_NS, \"activeSection\", activeKey);\n  }, [activeKey]);\n\n  // listen for global sidebar toggle (same pattern used elsewhere)\n  useEffect(() => {\n    const handler = () => setIsSidebarOpen((s) => !s);\n    window.addEventListener(\"app:toggleSidebar\", handler);\n    return () => window.removeEventListener(\"app:toggleSidebar\", handler);\n  }, []);\n\n  // delete modal helpers\n  const openDelete = (proj: HubProject) => {\n    setProjectToDelete(proj);\n    setIsDeleteOpen(true);\n  };\n  const closeDelete = () => {\n    setProjectToDelete(null);\n    setIsDeleteOpen(false);\n  };\n  const confirmDelete = () => {\n    if (projectToDelete) deleteProject(projectToDelete.id);\n    closeDelete();\n  };\n\n  return (\n    <div className=\"h-full w-full flex flex-col bg-gray-50 font-sans text-gray-800\">\n      <div className=\"flex-1 min-h-0 w-full\">\n        <div className=\"relative h-full w-full flex overflow-hidden\">\n          {/* Backdrop (mobile) */}\n          <div\n            onClick={() => setIsSidebarOpen(false)}\n            className={`lg:hidden fixed inset-0 z-20 bg-black/40 transition-opacity duration-300 ${\n              isSidebarOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n            }`}\n          />\n\n          {/* Sidebar */}\n          <aside\n            className={`\n              fixed lg:static inset-y-0 left-0 z-30 w-72 bg-gray-900 text-white\n              transform transition-transform duration-300 ease-in-out\n              border-r border-gray-800 overflow-y-auto shrink-0\n              ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n              lg:translate-x-0 lg:transform-none\n            `}\n          >\n            <div className=\"h-full p-4\">\n              <HubSidebar\n                sections={SECTIONS}\n                activeKey={activeKey}\n                onSelect={(key: SectionKey) => {\n                  setActiveKey(key);\n                  storage.set(HUB_NS, \"activeSection\", key);\n                  setIsSidebarOpen(false);\n                }}\n                onConfirmDelete={openDelete}\n              />\n            </div>\n          </aside>\n\n          {/* Right pane */}\n          <main className=\"flex-1 min-w-0 h-full overflow-auto\">\n            {!selected ? (\n              <EmptyState\n                title=\"Create your first project\"\n                description={\n                  <>\n                    Use the{\" \"}\n                    <span className=\"font-medium\">“New project name”</span>{\" \"}\n                    field in the left sidebar to add a project. Once created,\n                    you can document sections like <em>Setup</em>,{\" \"}\n                    <em>Architecture</em>, and more.\n                  </>\n                }\n                bullets={[\n                  \"Your projects list is shared with your board.\",\n                  \"Select a section on the left to start documenting.\",\n                  <>\n                    Deleting here only clears <em>Project Hub</em> data for that\n                    project.\n                  </>,\n                ]}\n              />\n            ) : (\n              <>\n                {/* <SectionHeader\n                  title={\n                    SECTIONS.find((s) => s.key === activeKey)?.title ||\n                    \"Section\"\n                  }\n                /> */}\n                <div className=\"mt-4\">\n                  <ActiveComp />\n                </div>\n              </>\n            )}\n          </main>\n        </div>\n      </div>\n\n      {/* Delete Project Modal */}\n      <Modal\n        isOpen={isDeleteOpen}\n        onClose={closeDelete}\n        title=\"Delete project?\"\n      >\n        <p className=\"text-gray-700\">\n          {`Clear Project Hub data for “${\n            projectToDelete?.name || \"this project\"\n          }”? This removes only the Hub sections (Setup, Architecture, etc.). Your project, board columns and tasks remain intact.`}\n        </p>\n        <div className=\"flex justify-between space-x-3 mt-6\">\n          <button\n            onClick={closeDelete}\n            className=\"px-4 py-2 rounded-lg bg-gray-200 text-gray-700 hover:bg-gray-300\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={confirmDelete}\n            className=\"px-4 py-2 rounded-lg bg-red-600 text-white hover:bg-red-700\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Issues() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"issues\"\n            placeholder={`List blockers, risks, mitigations, lessons learned…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function POCs() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"pocs\"\n            placeholder={`Proofs of concept: approach, outcomes, code pointers…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Screenshots() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"screenshots\"\n            placeholder={`Paste image links or Markdown images to showcase UI & flows.`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Revenue() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"revenue\"\n            placeholder={`Revenue projections, pricing, CAC/LTV notes…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Value() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"value\"\n            placeholder={`Immediate value, success metrics, stakeholder impact…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Maintenance() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"maintenance\"\n            placeholder={`Oncall, SLAs, runbooks, monitoring, alerting, upgrade paths…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Demand() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"demand\"\n            placeholder={`User demand, backlog, roadmap confidence, market signals…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function TechRequirements() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"tech\"\n            placeholder={`Functional & non-functional requirements, SLOs, constraints…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Releases() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"releases\"\n            placeholder={`Released versions, links to release notes, known issues…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function UX() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"ux\"\n            placeholder={`User journeys, wireframes, accessibility notes, UX rationale…`}\n        />\n    );\n}\n","import React from 'react';\nimport MarkdownSectionBase from './MarkdownSectionBase';\n\nexport default function Documents() {\n    return (\n        <MarkdownSectionBase\n            sectionKey=\"documents\"\n            placeholder={`Add links to specs, design docs, spreadsheets, etc. (Markdown links).`}\n        />\n    );\n}\n","import React from 'react';\nimport ProjectHubView from '../../features/projectHub/ProjectHubView';\nimport { ProjectHubProvider } from '../../features/projectHub/context';\n\nexport default function ProjectHubApp() {\n    return (\n        <ProjectHubProvider>\n            <ProjectHubView />\n        </ProjectHubProvider>\n    );\n}\n","import React from \"react\";\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  children: React.ReactNode;\n  className?: string;\n  /** Optional: close when clicking the scrim (default true) */\n  closeOnBackdrop?: boolean;\n};\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  className = \"bg-white rounded-xl shadow-lg p-6\",\n  closeOnBackdrop = true,\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      <div\n        className=\"absolute inset-0 bg-black/50\"\n        onClick={closeOnBackdrop ? onClose : undefined}\n      />\n      <div className=\"absolute left-1/2 top-20 -translate-x-1/2 w-full max-w-lg\">\n        <div\n          className={`relative bg-white rounded-xl shadow-lg max-h-[90vh] md:max-h-[80vh] overflow-y-auto ${className}`}\n          role=\"dialog\"\n          aria-modal\n        >\n          {title && (\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold\">{title}</h3>\n              <button\n                aria-label=\"Close modal\"\n                onClick={onClose}\n                className=\"rounded p-1 hover:bg-gray-100\"\n              >\n                ✕\n              </button>\n            </div>\n          )}\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useProjectHubContext } from \"../features/projectHub/context\";\nimport type { ProjectHubContextValue } from \"../types/project-hub\";\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n","import React from \"react\";\n\ntype EmptyStateProps = {\n  title: string;\n  description?: React.ReactNode;\n  bullets?: React.ReactNode[];\n  action?: React.ReactNode; // e.g. a CTA button\n  className?: string;\n};\n\nconst EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  bullets,\n  action,\n  className = \"rounded-xl border bg-white p-8\",\n}) => {\n  return (\n    <div className={className}>\n      <h2 className=\"text-2xl font-semibold text-gray-900\">{title}</h2>\n      {description && (\n        <div className=\"mt-2 text-gray-600 text-sm\">{description}</div>\n      )}\n      {bullets?.length ? (\n        <ul className=\"mt-3 list-disc pl-5 space-y-1 text-sm text-gray-700\">\n          {bullets.map((b, i) => (\n            <li key={i}>{b}</li>\n          ))}\n        </ul>\n      ) : null}\n      {action && <div className=\"mt-4\">{action}</div>}\n    </div>\n  );\n};\n\nexport default EmptyState;\n","import React, { useState } from \"react\";\n\ntype Props = {\n  value: string;\n  className?: string;\n};\n\nconst SecretText: React.FC<Props> = ({ value, className }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className={[\"inline-flex items-center gap-2\", className].join(\" \")}>\n      <code className=\"rounded bg-gray-100 px-2 py-1\">\n        {show ? value : \"••••••••\"}\n      </code>\n      <button\n        type=\"button\"\n        onClick={() => setShow((s) => !s)}\n        className=\"text-xs rounded border px-2 py-1 hover:bg-gray-50\"\n      >\n        {show ? \"Hide\" : \"Show\"}\n      </button>\n    </div>\n  );\n};\n\nexport default SecretText;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { storage, HUB_NS } from \"../../packages/storage\";\nimport type {\n  HubProject,\n  ProjectHubContextValue,\n} from \"../../types/project-hub\";\n\nconst LIST_KEY = \"projects\"; // NOT \"hub:projects\" (ns already applied)\nconst SELECTED_KEY = \"selectedProjectId\";\n\nfunction loadProjects(): HubProject[] {\n  return storage.get<HubProject[]>(HUB_NS, LIST_KEY, []);\n}\nfunction persistProjects(list: HubProject[]) {\n  storage.set(HUB_NS, LIST_KEY, list);\n}\n\nexport const ProjectHubContext = createContext<\n  ProjectHubContextValue | undefined\n>(undefined);\nexport const useProjectHubContext = () => useContext(ProjectHubContext);\n\nexport function ProjectHubProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [projects, setProjects] = useState<HubProject[]>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  const refresh = () => setProjects(loadProjects());\n\n  useEffect(() => {\n    refresh();\n    setSelectedId(storage.get<string | null>(HUB_NS, SELECTED_KEY, null));\n  }, []);\n\n  useEffect(() => {\n    if (selectedId) storage.set(HUB_NS, SELECTED_KEY, selectedId);\n    else storage.remove(HUB_NS, SELECTED_KEY);\n  }, [selectedId]);\n\n  const selected = useMemo<HubProject | null>(\n    () => projects.find((p) => p.id === selectedId) || null,\n    [projects, selectedId]\n  );\n\n  const selectProject = (id: string | null) => setSelectedId(id);\n\n  const addProject = (name: string): HubProject | null => {\n    const n = (name || \"\").trim();\n    if (!n) return null;\n\n    // de-dup by case-insensitive name\n    if (projects.some((p) => p.name.toLowerCase() === n.toLowerCase()))\n      return null;\n\n    const id = `${n.toLowerCase().replace(/\\s+/g, \"-\")}-${Date.now()}`;\n    const proj: HubProject = { id, name: n, sections: {} };\n    const next = [...projects, proj];\n\n    setProjects(next);\n    persistProjects(next);\n    setSelectedId(id);\n    return proj;\n  };\n\n  // Hub-only delete (does NOT touch Board data)\n  const deleteProject = (id: string) => {\n    const next = projects.filter((p) => p.id !== id);\n    setProjects(next);\n    persistProjects(next);\n    if (selectedId === id) setSelectedId(null);\n  };\n\n  const updateSection = (sectionKey: string, data: unknown) => {\n    if (!selectedId) return;\n    const next = projects.map((p) =>\n      p.id !== selectedId\n        ? p\n        : { ...p, sections: { ...(p.sections || {}), [sectionKey]: data } }\n    );\n    setProjects(next);\n    persistProjects(next);\n  };\n\n  const value: ProjectHubContextValue = {\n    projects,\n    selected,\n    selectedId,\n    setSelectedId,\n    selectProject,\n    addProject,\n    deleteProject,\n    updateSection,\n    refresh,\n  };\n\n  return (\n    <ProjectHubContext.Provider value={value}>\n      {children}\n    </ProjectHubContext.Provider>\n  );\n}\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n"],"names":["_ref","value","onChange","placeholder","className","dedupe","draft","setDraft","useState","inputRef","useRef","splitAndCommit","raw","parts","split","map","s","trim","filter","Boolean","length","base","Set","next","some","p","has","_jsxs","join","onClick","_inputRef$current2","current","focus","children","chip","i","_jsx","type","concat","idx","_inputRef$current","_","removeAt","ref","e","target","onKeyDown","key","preventDefault","slice","onBlur","v","Array","from","commit","title","disabled","sections","activeKey","onSelect","onConfirmDelete","projects","selected","setSelectedId","addProject","useProjectHub","newName","setNewName","id","name","stopPropagation","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","n","DEFAULT_SETUP","summary","repoUrl","issueTrackerUrl","designDocUrl","license","packageManager","nodeVersion","framework","branchStrategy","techStack","commands","install","start","build","test","lint","format","environments","appUrl","apiUrl","envVars","tooling","typecheck","contacts","updateAt","arr","patch","_objectSpread","Setup","updateSection","saved","useMemo","_selected$sections","setup","mode","setMode","form","setForm","useEffect","f","_form$techStack","_form$tooling","_form$tooling2","_form$tooling3","_form$environments","_form$envVars","_form$contacts","IconButton","Card","DL","rows","linkOrDash","valueOrDash","t","Empty","JSON","stringify","env","secret","SecretText","description","c","role","email","href","onSubmit","TextField","label","SelectField","options","ChipInput","Object","entries","k","val","variant","row","_ref2","_ref3","_ref4","dt","dd","React","rel","_ref5","rest","_objectWithoutProperties","_excluded","_ref6","opts","o","overview","diagrams","url","services","language","runtime","owner","apis","method","path","auth","service","dataStores","version","purpose","queues","tech","thirdParty","docsUrl","observability","logs","metrics","tracing","dashboardsUrl","alertsUrl","security","encryptionAtRest","encryptionInTransit","threatModelUrl","dataRetentionNotes","corsPolicy","cspNotes","availability","sla","slo","rpo","rto","scaling","strategy","autoScaling","notes","decisions","date","status","link","risks","risk","mitigation","tags","RowBtn","ServicesEditor","set","copy","remove","add","ApiEditor","a","m","SimpleListEditor","columns","addEmpty","fromEntries","engines","host","port","dbName","user","schemas","entities","table","fields","pk","nullable","default","indexes","relationships","to","onDelete","migrations","tool","seed","performance","poolMin","poolMax","timeoutMs","readReplicas","partitioning","sharding","cachingLayer","backups","enabled","schedule","retentionDays","location","restoreTestCadence","dataRetention","retention","policy","atRest","inTransit","rowLevelSecurity","accessModel","piiTables","queriesOfInterest","sql","incidents","actionItems","EntitiesEditor","toFieldsString","arguments","undefined","toIndexesString","setRow","ev","x","pair","tRaw","req","endsWith","chunk","_chunk$split$","_chunk$match","_chunk$match$","match","MarkdownEditor","renderer","marked","Renderer","MarkdownView","text","html","parse","dangerouslySetInnerHTML","__html","MarkdownSectionBase","sectionKey","setText","_Fragment","onSave","setOptions","breaks","defaultLinks","bookmarks","categories","links","TableEditor","global","repository","pipeline","artifactRegistry","runtimeNotes","onCallContact","domains","app","api","frontend","buildCmd","artifact","container","image","tag","registry","deployCmd","cdn","backend","migrationsCmd","database","engine","migrationTool","backupPolicy","preChecks","postChecks","rollback","command","EnvVarTable","SECTIONS","comp","architecture","architectureDefault","_form$diagrams","_form$services","_form$dataStores","_form$apis","_form$queues","q","_form$thirdParty","_form$decisions","_form$risks","r","_form$tags","checked","databaseDefault","_form$engines","_form$schemas","_form$entities","ix","_form$relationships","_form$dataRetention","_form$queriesOfIntere","_form$incidents","_form$bookmarks","b","_form$categories","cat","_cat$links","l","ci","setCat","addLink","setLink","li","removeLink","deployment","defaultDeploymentGuide","setEnv","_env$envVars","ProjectHubView","ProjectHubProvider","ProjectHubInner","_SECTIONS$find$comp","_SECTIONS$find","isSidebarOpen","setIsSidebarOpen","isDeleteOpen","setIsDeleteOpen","projectToDelete","setProjectToDelete","initialKey","storage","get","HUB_NS","setActiveKey","ActiveComp","find","deleteProject","handler","window","addEventListener","removeEventListener","closeDelete","HubSidebar","proj","EmptyState","bullets","Modal","isOpen","onClose","confirmDelete","ProjectHubApp","closeOnBackdrop","ctx","useProjectHubContext","Error","action","show","setShow","LIST_KEY","SELECTED_KEY","persistProjects","list","ProjectHubContext","createContext","useContext","setProjects","selectedId","refresh","selectProject","toLowerCase","replace","Date","now","data","Provider"],"sourceRoot":""}