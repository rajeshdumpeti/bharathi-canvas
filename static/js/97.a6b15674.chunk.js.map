{"version":3,"file":"static/js/97.a6b15674.chunk.js","mappings":"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","sources":["features/board/components/Sidebar.tsx","features/board/components/TaskCard.tsx","features/board/components/Column.tsx","features/board/components/TaskForm.tsx","features/board/components/AddColumnModal.tsx","features/board/BoardView.tsx","features/board/components/ExportStoriesBar.tsx","features/board/StoriesView.tsx","app/board/App.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { SidebarProps } from \"types/sidebar\";\n\nconst Sidebar: React.FC<SidebarProps> = ({\n  projects,\n  selectedProject,\n  onSelectProject,\n  onAddProject,\n  onToggleSidebar,\n  tasks,\n  onConfirmDeleteProject,\n}) => {\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Are we currently on the Features view?\n  const isFeatures = location.pathname.startsWith(\"/board/features\");\n\n  // Project context (used to keep the same project when switching views)\n\n  // Metrics (unchanged)\n  const projectTasks = tasks.filter(\n    (t) => selectedProject && t.project === selectedProject.id\n  );\n  const todoCount = projectTasks.filter((t) => t.status === \"to-do\").length;\n  const inProgressCount = projectTasks.filter(\n    (t) => t.status === \"in-progress\"\n  ).length;\n  const doneCount = projectTasks.filter((t) => t.status === \"done\").length;\n  const totalTasks = projectTasks.length;\n  const progressPercentage =\n    totalTasks > 0 ? Math.round((doneCount / totalTasks) * 100) : 0;\n  const currentDate = useMemo(\n    () =>\n      new Date().toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      }),\n    []\n  );\n\n  const handleAddProject = (e: React.FormEvent) => {\n    e.preventDefault();\n    const name = (newProjectName || \"\").trim();\n    if (!name) return;\n    const exists = projects.some(\n      (p) => p.name.trim().toLowerCase() === name.toLowerCase()\n    );\n    if (exists) return;\n    onAddProject(name);\n    setNewProjectName(\"\");\n  };\n\n  return (\n    <div className=\"flex h-full min-h-0 flex-col pt-2 transition-all duration-300\">\n      {/* Sidebar Header */}\n      <div className=\"mb-4\">\n        <div className=\"mb-3 flex items-center justify-between\">\n          <h3 className=\"text-xl font-bold\">Projects</h3>\n          <button\n            onClick={onToggleSidebar}\n            className=\"rounded-lg p-2 transition-colors hover:bg-gray-700 lg:hidden\"\n            aria-label=\"Close sidebar\"\n          >\n            <svg\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* Views: Board | Features */}\n        <div className=\"mb-4 inline-flex rounded-lg bg-gray-800/70 p-1\">\n          <button\n            className={`px-3 py-1 rounded ${!isFeatures ? \"bg-blue-600 text-white\" : \"bg-gray-700\"}`}\n            onClick={() => {\n              const pid = selectedProject?.id || \"\";\n              navigate(`/board${pid ? `?project=${pid}` : \"\"}`);\n            }}\n          >\n            Board\n          </button>\n\n          <button\n            className={`px-3 py-1 rounded ${isFeatures ? \"bg-blue-600 text-white\" : \"bg-gray-700\"}`}\n            onClick={() => {\n              const pid = selectedProject?.id || \"\";\n              navigate(`/board/features${pid ? `?project=${pid}` : \"\"}`);\n            }}\n          >\n            Features\n          </button>\n        </div>\n      </div>\n\n      {/* Project List */}\n      <ul className=\"custom-scrollbar mb-6 max-h-full min-h-0 flex-1 space-y-2 overflow-y-auto pr-2\">\n        {projects.length === 0 ? (\n          <li className=\"select-none rounded-lg bg-gray-800/70 p-2 text-sm text-gray-300\">\n            Your project goes here\n          </li>\n        ) : (\n          projects.map((project) => (\n            <li\n              key={project.id}\n              className={`flex cursor-pointer items-center justify-between rounded-lg p-2 transition-colors ${\n                selectedProject?.id === project.id\n                  ? \"bg-blue-600 text-white\"\n                  : \"hover:bg-gray-700\"\n              }`}\n              onClick={() => {\n                onSelectProject(project);\n                const base = isFeatures ? \"/board/features\" : \"/board\";\n                navigate(`${base}?project=${project.id}`);\n                onToggleSidebar();\n              }}\n            >\n              <span className=\"flex-1 pr-2\">{project.name}</span>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onConfirmDeleteProject(project);\n                }}\n                className=\"rounded-full p-1 text-gray-400 transition-colors hover:text-red-500\"\n                title=\"Delete Project\"\n                aria-label={`Delete project ${project.name}`}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-4 w-4\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </li>\n          ))\n        )}\n      </ul>\n\n      {/* Add Project */}\n      <form onSubmit={handleAddProject} className=\"mb-6 space-y-2\">\n        <input\n          type=\"text\"\n          value={newProjectName}\n          onChange={(e) => setNewProjectName(e.target.value)}\n          placeholder=\"New project name\"\n          className=\"w-full rounded-lg bg-gray-700 p-2 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n        <button\n          type=\"submit\"\n          disabled={!newProjectName.trim()}\n          className={`w-full rounded-lg py-2 font-semibold transition ${\n            newProjectName.trim()\n              ? \"bg-blue-600 text-white hover:bg-blue-700\"\n              : \"cursor-not-allowed bg-gray-600 text-gray-300\"\n          }`}\n        >\n          Add\n        </button>\n      </form>\n\n      {/* Dashboard Overview */}\n      <div className=\"rounded-lg bg-gray-800 p-4\">\n        <h4 className=\"mb-2 font-semibold\">Dashboard</h4>\n        <p className=\"mb-1 text-sm\">\n          Total Tasks: <span className=\"font-bold\">{totalTasks}</span>\n        </p>\n        <ul className=\"mb-2 space-y-1 text-xs\">\n          <li>To Do: {todoCount}</li>\n          <li>In Progress: {inProgressCount}</li>\n          <li>Done: {doneCount}</li>\n        </ul>\n        <p className=\"text-sm font-semibold\">\n          Progress: {progressPercentage}% Done\n        </p>\n        <div className=\"mt-2 h-2.5 w-full rounded-full bg-gray-700\">\n          <div\n            className=\"h-2.5 rounded-full bg-blue-600\"\n            style={{ width: `${progressPercentage}%` }}\n          />\n        </div>\n        <p className=\"mt-4 text-xs text-gray-400\">{currentDate}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport type { Task } from \"../../../types/board\";\nimport { FiTrash2 } from \"react-icons/fi\";\n\nconst priorityColors: Record<NonNullable<Task[\"priority\"]>, string> = {\n  High: \"border-l-4 border-red-500\",\n  Medium: \"border-l-4 border-yellow-500\",\n  Low: \"border-l-4 border-green-500\",\n};\n\nexport interface TaskCardProps {\n  task: Task;\n  onDragStart: (e: React.DragEvent<HTMLDivElement>) => void;\n  onEdit: () => void;\n  onDelete?: (taskId: string) => void;\n}\n\nconst TaskCard: React.FC<TaskCardProps> = ({\n  task,\n  onDragStart,\n  onEdit,\n  onDelete,\n}) => {\n  return (\n    <div\n      className={`p-4 bg-white rounded-lg shadow-sm cursor-grab ${priorityColors[task.priority]} transition-transform duration-200 hover:scale-[1.02]`}\n      draggable\n      onDragStart={onDragStart}\n      onClick={onEdit}\n    >\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"flex items-center gap-2\">\n          {task.storyId && (\n            <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs bg-blue-50 text-blue-700\">\n              {task.storyId}\n            </span>\n          )}\n          {task.architecture && (\n            <span className=\"inline-block px-2 py-0.5 text-xs font-semibold rounded-full bg-gray-200 text-gray-700\">\n              {task.architecture}\n            </span>\n          )}\n        </div>\n\n        {/* Delete icon (doesn't trigger onEdit / drag) */}\n        {onDelete && (\n          <button\n            type=\"button\"\n            aria-label=\"Delete story\"\n            className=\"p-1.5 rounded hover:bg-red-50 text-gray-400 hover:text-red-600\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onDelete(task.id);\n            }}\n          >\n            <FiTrash2 className=\"h-4 w-4\" />\n          </button>\n        )}\n      </div>\n\n      <h4 className=\"font-semibold text-gray-900\">{task.title}</h4>\n\n      {task.description && (\n        <p className=\"text-sm text-gray-600 break-words whitespace-pre-line mb-3\">\n          {task.description}\n        </p>\n      )}\n\n      <div className=\"space-y-1 text-xs text-gray-500 mb-2\">\n        <p>\n          {task.assignee\n            ? `Assigned to: ${String(task.assignee)}`\n            : \"Unassigned\"}\n        </p>\n        {task.createdAt && <p>Created on: {task.createdAt}</p>}\n        {task.dueDate && <p>Complete by: {task.dueDate}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCard;\n","import React from \"react\";\nimport TaskCard from \"./TaskCard\";\nimport type { ColumnProps } from \"../../../types/board\";\nimport { FiTrash2 } from \"react-icons/fi\";\n\nconst Column: React.FC<ColumnProps> = ({\n  title,\n  id,\n  tasks,\n  onAddTask,\n  onDrop,\n  onDragOver,\n  onDragStart,\n  onEditTask,\n  onConfirmDeleteTask,\n  onConfirmDeleteColumn,\n}) => {\n  const columnTasks = tasks.filter((task) => task.status === id);\n\n  return (\n    <div\n      className=\"flex-1 min-w-[280px] max-w-xs bg-gray-100 rounded-xl p-4 m-2 shadow-md transition-all duration-300 transform hover:shadow-xl md:flex-grow-0 md:min-w-[300px]\"\n      onDragOver={onDragOver}\n      onDrop={(e) => onDrop(e, id)}\n    >\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-800\">\n          {title} ({columnTasks.length})\n        </h2>\n\n        <div className=\"flex items-center gap-2\">\n          {/* Add task only on To Do (as you had) */}\n          <button\n            onClick={() => onAddTask(id)}\n            aria-label={`Add task to ${title}`}\n            className=\"p-1.5 rounded-full bg-blue-200 text-blue-600 hover:bg-blue-300 transition-colors\"\n            type=\"button\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-4 w-4\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 4v16m8-8H4\"\n              />\n            </svg>\n          </button>\n\n          {/* Delete column icon */}\n          <button\n            onClick={() => onConfirmDeleteColumn(id)}\n            aria-label={`Delete ${title} column`}\n            className=\"p-1.5 rounded hover:bg-red-50 text-gray-400 hover:text-red-600\"\n            type=\"button\"\n            title=\"Delete column\"\n          >\n            <FiTrash2 className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n\n      <div\n        className=\"flex flex-col space-y-3 overflow-y-auto\"\n        style={{ scrollbarWidth: \"thin\", scrollbarColor: \"#E2E8F0 #F7FAFC\" }}\n      >\n        {columnTasks.length === 0 ? (\n          <div className=\"text-sm text-gray-500 italic py-6 text-center select-none\">\n            No tasks here yet — click the ➕ to add one.\n          </div>\n        ) : (\n          columnTasks.map((task) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              onDragStart={(e: React.DragEvent<HTMLDivElement>) =>\n                onDragStart(e, task.id)\n              }\n              onEdit={() => onEditTask(task)}\n              onDelete={onConfirmDeleteTask}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Column;\n","// src/features/board/components/TaskForm.tsx\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport type Priority = \"High\" | \"Medium\" | \"Low\";\nexport type Tech =\n  | \"FE\" // Frontend\n  | \"BE\" // Backend\n  | \"DB\" // Database\n  | \"ARCH\" // Architecture\n  | \"MISC\"; // Miscellaneous\n\nexport interface TaskDraft {\n  id?: string;\n  project?: string;\n  status?: string;\n\n  title: string;\n  description?: string;\n  acceptanceCriteria?: string;\n\n  assignee?: string;\n  priority: Priority;\n  architecture: Tech;\n\n  storyId?: string; // e.g. \"US234567\"\n  featureId?: string; // chosen feature to attach this story/task to\n  createdAt?: string; // ISO date \"YYYY-MM-DD\"\n  dueDate?: string; // ISO date \"YYYY-MM-DD\"\n}\n\nexport interface TaskFormProps {\n  task: Partial<TaskDraft>;\n  onSave: (task: TaskDraft) => void;\n  onCancel: () => void;\n\n  /** Optional list of features to allow choosing where this story belongs */\n  features?: { id: string; name: string }[];\n  /** Optional initial feature id to preselect */\n  initialFeatureId?: string;\n}\n\nfunction toISODate(d: Date) {\n  return d.toISOString().slice(0, 10);\n}\n\nfunction fmtHuman(d?: string) {\n  if (!d) return new Date().toLocaleDateString(\"en-GB\");\n  try {\n    return new Date(d).toLocaleDateString(\"en-GB\");\n  } catch {\n    return d;\n  }\n}\n\nexport default function TaskForm({\n  task,\n  onSave,\n  onCancel,\n  features = [],\n  initialFeatureId,\n}: TaskFormProps) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm<TaskDraft>({\n    defaultValues: {\n      title: task.title ?? \"\",\n      description: task.description ?? \"\",\n      acceptanceCriteria: task.acceptanceCriteria ?? \"\",\n      assignee: task.assignee ?? \"\",\n      priority: (task.priority as Priority) ?? \"Low\",\n      architecture: (task.architecture as Tech) ?? \"FE\",\n      createdAt: task.createdAt ?? toISODate(new Date()),\n      dueDate: task.dueDate ?? \"\",\n      // keep any metadata you passed\n      id: task.id,\n      project: task.project,\n      status: task.status,\n      storyId: task.storyId,\n      featureId: task.featureId ?? initialFeatureId ?? \"\",\n    },\n  });\n\n  const onSubmit = (data: TaskDraft) => {\n    // Preserve any immutable fields from the incoming task object\n    onSave({\n      ...data,\n      id: task.id ?? data.id,\n      project: task.project ?? data.project,\n      status: task.status ?? data.status,\n      storyId: task.storyId ?? data.storyId, // BoardView may assign on save if missing\n      featureId: data.featureId ?? task.featureId, // pass chosen feature up\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"p-6\">\n      {/* User Story banner */}\n      <div className=\"mb-5\">\n        <div className=\"inline-flex items-center gap-2 rounded-full bg-indigo-50 text-indigo-700 border border-indigo-100 px-3 py-1 text-sm font-medium\">\n          <span>User Story</span>\n          <span className=\"font-semibold\">\n            {task.storyId ? task.storyId : \"Will be assigned on save\"}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"space-y-5\">\n        {/* Row 0: Choose Feature (now required if options exist) */}\n        <div>\n          <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n            Choose Feature <span className=\"text-rose-600\">*</span>\n          </label>\n          <select\n            {...register(\"featureId\", {\n              // Only require if we actually have features to choose from\n              required: features.length > 0 ? \"Feature is required\" : false,\n            })}\n            aria-invalid={errors.featureId ? \"true\" : \"false\"}\n            className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 transition-all\n              ${\n                errors.featureId\n                  ? \"border-rose-400 focus:ring-rose-500\"\n                  : \"border-gray-300 focus:ring-blue-500\"\n              }`}\n          >\n            <option value=\"\" disabled>\n              — Select a feature —\n            </option>\n            {features.map((f) => (\n              <option key={f.id} value={f.id}>\n                {f.name}\n              </option>\n            ))}\n          </select>\n\n          {errors.featureId && (\n            <p className=\"mt-1 text-xs text-rose-600\">\n              {String(errors.featureId.message)}\n            </p>\n          )}\n\n          {features.length === 0 && (\n            <p className=\"mt-1 text-xs text-gray-500\">\n              No features found for this project. Add one in the\n              <span className=\"font-medium\"> Features</span> tab first.\n            </p>\n          )}\n        </div>\n\n        {/* Row 1: Title + Technology */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Title\n            </label>\n            <input\n              {...register(\"title\", { required: \"Title is required\" })}\n              type=\"text\"\n              placeholder=\"Task Title\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n            {errors.title && (\n              <p className=\"mt-1 text-xs text-red-600\">\n                {errors.title.message}\n              </p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Technology\n            </label>\n            <select\n              {...register(\"architecture\")}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            >\n              <option value=\"FE\">Frontend</option>\n              <option value=\"BE\">Backend</option>\n              <option value=\"DB\">Database</option>\n              <option value=\"ARCH\">Architecture</option>\n              <option value=\"MISC\">Miscellaneous</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Row 2: Acceptance Criteria */}\n        <div>\n          <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n            Acceptance Criteria\n          </label>\n          <textarea\n            {...register(\"acceptanceCriteria\")}\n            placeholder=\"As a user, I want..., so that...\"\n            rows={3}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n          />\n        </div>\n\n        {/* Row 3: Description */}\n        <div>\n          <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n            Description\n          </label>\n          <textarea\n            {...register(\"description\")}\n            placeholder=\"Detailed description...\"\n            rows={3}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n          />\n        </div>\n\n        {/* Row 4: Assignee + Priority */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Assignee\n            </label>\n            <input\n              {...register(\"assignee\", { required: \"Assignee is required\" })}\n              type=\"text\"\n              placeholder=\"Assignee Name\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n            {errors.assignee && (\n              <p className=\"mt-1 text-xs text-red-600\">\n                {errors.assignee.message}\n              </p>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Priority\n            </label>\n            <select\n              {...register(\"priority\")}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            >\n              <option value=\"High\">High</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"Low\">Low</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Row 5: Created on + Complete by */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Created on\n            </label>\n            <p className=\"w-full px-4 py-2 border border-gray-300 rounded-lg\">\n              {fmtHuman(task.createdAt)}\n            </p>\n            {/* keep createdAt in payload (hidden input) */}\n            <input type=\"hidden\" {...register(\"createdAt\")} />\n          </div>\n          <div>\n            <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n              Complete by\n            </label>\n            <input\n              type=\"date\"\n              {...register(\"dueDate\")}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex justify-between space-x-4 mt-6\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-semibold disabled:opacity-60\"\n        >\n          Save Task\n        </button>\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\n\ntype Props = {\n  onSave: (title: string) => void;\n  onCancel: () => void;\n};\n\nconst AddColumnModal: React.FC<Props> = ({ onSave, onCancel }) => {\n  const [title, setTitle] = useState<string>(\"\");\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    onSave(title);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-6\">\n      <h3 className=\"text-2xl font-bold mb-6 text-gray-800\">Add New Column</h3>\n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"block text-gray-700 text-sm font-semibold mb-2\">\n            Column Title\n          </label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"e.g., Backlog\"\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"flex justify-between space-x-4 mt-6\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-semibold\"\n        >\n          Add Column\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddColumnModal;\n","// src/features/board/BoardView.tsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { Modal, EmptyState } from \"packages/ui\";\nimport { storage, BOARD_NS } from \"packages/storage\";\nimport Column from \"./components/Column\";\nimport TaskForm from \"./components/TaskForm\";\nimport AddColumnModal from \"./components/AddColumnModal\";\nimport type { BoardColumn, Project, Task } from \"types/board\";\nimport {\n  deleteStoryById,\n  moveStoryByStoryId,\n  featuresByProject,\n  syncTaskToStory,\n} from \"./features/storage\";\n\nconst DEFAULT_COLS: BoardColumn[] = [\n  { id: \"to-do\", title: \"To Do\" },\n  { id: \"in-progress\", title: \"In Progress\" },\n  { id: \"validation\", title: \"Validation\" },\n  { id: \"done\", title: \"Done\" },\n];\n\nexport default function BoardView() {\n  const [search] = useSearchParams();\n\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [columns, setColumns] = useState<BoardColumn[]>([]);\n  const [selectedProject, setSelectedProject] = useState<Project | null>(null);\n\n  // UI state\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const [isColumnModalOpen, setIsColumnModalOpen] = useState(false);\n  const [isDeleteTaskModalOpen, setIsDeleteTaskModalOpen] = useState(false);\n  const [isDeleteColumnModalOpen, setIsDeleteColumnModalOpen] = useState(false);\n  const [isProjectDeleteModalOpen, setIsProjectDeleteModalOpen] =\n    useState(false);\n\n  const [taskToDeleteId, setTaskToDeleteId] = useState<string | null>(null);\n  const [columnToDeleteId, setColumnToDeleteId] = useState<string | null>(null);\n  const [projectToDelete, setProjectToDelete] = useState<Project | null>(null);\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // rail helpers\n  const columnsRef = useRef<HTMLDivElement | null>(null);\n  const columnRefs = useRef<Record<string, HTMLDivElement | null>>({});\n  const setColumnRef = (id: string) => (el: HTMLDivElement | null) => {\n    columnRefs.current[id] = el;\n  };\n  const scrollColumnsBy = (delta: number) => {\n    if (!columnsRef.current) return;\n    columnsRef.current.scrollBy({ left: delta, behavior: \"smooth\" });\n  };\n  const scrollToColumn = (colId: string) => {\n    const el = columnRefs.current[colId];\n    if (!el || !columnsRef.current) return;\n    const parent = columnsRef.current;\n    const left = el.offsetLeft - 16;\n    parent.scrollTo({ left, behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    const reload = () => {\n      const next = storage.get<typeof tasks>(BOARD_NS, \"tasks\", []);\n      setTasks(next);\n    };\n    window.addEventListener(\"storage\", reload);\n    window.addEventListener(\"board:projectsUpdated\", reload as EventListener);\n    return () => {\n      window.removeEventListener(\"storage\", reload);\n      window.removeEventListener(\n        \"board:projectsUpdated\",\n        reload as EventListener\n      );\n    };\n  }, []);\n\n  // ---------- load once ----------\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      const savedProjects = storage.get<Project[]>(BOARD_NS, \"projects\", []);\n      const savedTasks = storage.get<Task[]>(BOARD_NS, \"tasks\", []);\n\n      // normalize statuses\n      const ok = new Set([\"to-do\", \"in-progress\", \"validation\", \"done\"]);\n      const fixed = (savedTasks || []).map((t) => ({\n        ...t,\n        status: ok.has(String(t.status))\n          ? (t.status as Task[\"status\"])\n          : \"to-do\",\n      }));\n\n      setProjects(savedProjects);\n      setTasks(fixed);\n      if (JSON.stringify(savedTasks) !== JSON.stringify(fixed)) {\n        storage.set(BOARD_NS, \"tasks\", fixed);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // ---------- react to sidebar/storage changes ----------\n  useEffect(() => {\n    const sync = () => {\n      const latestProjects = storage.get<Project[]>(BOARD_NS, \"projects\", []);\n      const latestTasks = storage.get<Task[]>(BOARD_NS, \"tasks\", []);\n      setProjects(latestProjects);\n      setTasks(latestTasks);\n    };\n    window.addEventListener(\"storage\", sync);\n    window.addEventListener(\"board:projectsUpdated\", sync as EventListener);\n    return () => {\n      window.removeEventListener(\"storage\", sync);\n      window.removeEventListener(\n        \"board:projectsUpdated\",\n        sync as EventListener\n      );\n    };\n  }, []);\n\n  // ---------- derive selected project from ?project= or stored id ----------\n  useEffect(() => {\n    const qid = search.get(\"project\") || null;\n    const storedId = storage.get<string | null>(\n      BOARD_NS,\n      \"selectedProjectId\",\n      null\n    );\n    const pickId = qid ?? storedId;\n\n    const next = projects.find((p) => p.id === pickId) || projects[0] || null;\n    setSelectedProject(next);\n    setColumns(next?.columns || []);\n\n    if (next) {\n      storage.set(BOARD_NS, \"selectedProjectId\", next.id);\n    } else {\n      storage.remove(BOARD_NS, \"selectedProjectId\");\n    }\n  }, [search, projects]);\n\n  // ---------- project helpers (used by delete project modal) ----------\n  const confirmDeleteProject = (project: Project) => {\n    setProjectToDelete(project);\n    setIsProjectDeleteModalOpen(true);\n  };\n  const handleDeleteProject = () => {\n    if (!projectToDelete) return;\n    const nextProjects = projects.filter((p) => p.id !== projectToDelete.id);\n    const nextTasks = tasks.filter((t) => t.project !== projectToDelete.id);\n\n    setProjects(nextProjects);\n    setTasks(nextTasks);\n    storage.set(BOARD_NS, \"projects\", nextProjects);\n    storage.set(BOARD_NS, \"tasks\", nextTasks);\n\n    const nextSel = nextProjects[0] || null;\n    setSelectedProject(nextSel);\n    setColumns(nextSel?.columns || DEFAULT_COLS);\n\n    if (nextSel) storage.set(BOARD_NS, \"selectedProjectId\", nextSel.id);\n    else storage.remove(BOARD_NS, \"selectedProjectId\");\n\n    setIsProjectDeleteModalOpen(false);\n    setProjectToDelete(null);\n\n    // let the sidebar refresh\n    window.dispatchEvent(new Event(\"board:projectsUpdated\"));\n  };\n\n  // ---------- DnD ----------\n  const handleDragStart = (\n    e: React.DragEvent<HTMLDivElement>,\n    taskId: string\n  ) => {\n    e.dataTransfer.setData(\"taskId\", taskId);\n  };\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) =>\n    e.preventDefault();\n\n  const handleDrop = (\n    e: React.DragEvent<HTMLDivElement>,\n    newColumnId: string\n  ) => {\n    e.preventDefault();\n    const taskId = e.dataTransfer.getData(\"taskId\");\n    const nowISO = new Date().toISOString();\n\n    const updated = tasks.map((t) => {\n      if (t.id !== taskId) return t;\n      const wasDone = t.status === \"done\";\n      const willBeDone = newColumnId === \"done\";\n      return {\n        ...t,\n        status: newColumnId,\n        completedAt: willBeDone && !wasDone ? nowISO : (t.completedAt ?? null),\n      };\n    });\n\n    setTasks(updated);\n    storage.set(BOARD_NS, \"tasks\", updated);\n\n    // if mirrored from a Feature story, move it there as well\n    const moved = tasks.find((t) => t.id === taskId);\n    if (moved?.storyId) {\n      const toFeature =\n        newColumnId === \"to-do\"\n          ? \"To Do\"\n          : newColumnId === \"in-progress\"\n            ? \"In Progress\"\n            : newColumnId === \"validation\"\n              ? \"Validation\"\n              : \"Done\";\n      moveStoryByStoryId(moved.storyId, toFeature);\n    }\n  };\n\n  // ---------- tasks ----------\n  type DraftTask = Partial<Task> & { id?: string; featureId?: string };\n\n  const handleAddTask = (columnId?: string | React.MouseEvent) => {\n    if (!selectedProject) return;\n    const isEventLike =\n      columnId &&\n      typeof columnId === \"object\" &&\n      (\"nativeEvent\" in columnId || \"target\" in columnId);\n    const status = isEventLike\n      ? \"to-do\"\n      : typeof columnId === \"string\"\n        ? columnId\n        : \"to-do\";\n\n    setEditingTask({\n      id: `temp-${Date.now()}`,\n      status: status as Task[\"status\"],\n      title: \"\",\n      description: \"\",\n      assignee: \"\",\n      priority: \"Low\",\n      architecture: \"FE\",\n      project: selectedProject.id,\n      acceptanceCriteria: \"\",\n    });\n    setIsTaskModalOpen(true);\n  };\n\n  const handleEditTask = (task: Task) => {\n    setEditingTask(task);\n    setIsTaskModalOpen(true);\n  };\n\n  const handleSaveTask = (taskData: DraftTask) => {\n    if (!selectedProject) return;\n\n    const isNew = !taskData.id || taskData.id.startsWith(\"temp-\");\n    const dataToSave: Task = {\n      ...(taskData as Task),\n      id: isNew ? `task-${Date.now()}` : (taskData.id as string),\n      project: selectedProject.id,\n      storyId:\n        taskData.storyId ||\n        (isNew ? nextStoryId(selectedProject.id) : taskData.storyId),\n      acceptanceCriteria: taskData.acceptanceCriteria || \"\",\n    };\n\n    const updated = isNew\n      ? [...tasks, dataToSave]\n      : tasks.map((t) => (t.id === dataToSave.id ? { ...dataToSave } : t));\n\n    setTasks(updated);\n    storage.set(BOARD_NS, \"tasks\", updated);\n\n    // If user chose a Feature in TaskForm, reflect this task into Features as a Story\n    if (typeof taskData.featureId === \"string\" && taskData.featureId) {\n      // dataToSave already contains the final task payload (id/title/status/project/createdAt)\n      syncTaskToStory(\n        {\n          id: dataToSave.id,\n          project: dataToSave.project!,\n          storyId: dataToSave.storyId, // keep linkage if present\n          title: dataToSave.title,\n          status: dataToSave.status as any, // \"to-do\" | \"in-progress\" | ...\n          assignee: dataToSave.assignee,\n          priority: dataToSave.priority,\n          createdAt: dataToSave.createdAt,\n          completedAt: dataToSave.completedAt ?? null,\n          acceptanceCriteria: dataToSave.acceptanceCriteria,\n        } as any,\n        taskData.featureId\n      );\n    }\n\n    setIsTaskModalOpen(false);\n    setEditingTask(null);\n  };\n\n  const confirmDeleteTask = (taskId: string) => {\n    setTaskToDeleteId(taskId);\n    setIsDeleteTaskModalOpen(true);\n  };\n  const handleDeleteTask = () => {\n    if (!taskToDeleteId) return;\n    const doomed = tasks.find((t) => t.id === taskToDeleteId);\n    const updated = tasks.filter((t) => t.id !== taskToDeleteId);\n    setTasks(updated);\n    storage.set(BOARD_NS, \"tasks\", updated);\n    if (doomed?.storyId) {\n      deleteStoryById(doomed.storyId);\n    }\n    setIsDeleteTaskModalOpen(false);\n    setTaskToDeleteId(null);\n  };\n\n  // ---------- columns ----------\n  const confirmDeleteColumn = (columnId: string) => {\n    setColumnToDeleteId(columnId);\n    setIsDeleteColumnModalOpen(true);\n  };\n\n  const handleDeleteColumn = () => {\n    if (!selectedProject || !columnToDeleteId) return;\n\n    const updatedCols = (columns || []).filter(\n      (c) => c.id !== columnToDeleteId\n    );\n    const updatedTasks = tasks.filter((t) => t.status !== columnToDeleteId);\n\n    setColumns(updatedCols);\n    setTasks(updatedTasks);\n\n    const updatedProjects = projects.map((p) =>\n      p.id === selectedProject.id ? { ...p, columns: updatedCols } : p\n    );\n    setProjects(updatedProjects);\n\n    storage.set(BOARD_NS, \"projects\", updatedProjects);\n    storage.set(BOARD_NS, \"tasks\", updatedTasks);\n\n    setIsDeleteColumnModalOpen(false);\n    setColumnToDeleteId(null);\n\n    // let the sidebar refresh\n    window.dispatchEvent(new Event(\"board:projectsUpdated\"));\n  };\n\n  const handleAddColumn = (newTitle: string) => {\n    if (!newTitle || !selectedProject) return;\n    const newColumns = [\n      ...columns,\n      { id: newTitle.toLowerCase().replace(/\\s+/g, \"-\"), title: newTitle },\n    ];\n    setColumns(newColumns);\n\n    const updatedProjects = projects.map((p) =>\n      p.id === selectedProject.id ? { ...p, columns: newColumns } : p\n    );\n    setProjects(updatedProjects);\n    storage.set(BOARD_NS, \"projects\", updatedProjects);\n\n    setIsColumnModalOpen(false);\n\n    // let the sidebar refresh\n    window.dispatchEvent(new Event(\"board:projectsUpdated\"));\n  };\n\n  // Per-project Story ID sequence (starts at 234567)\n  const nextStoryId = (projectId: string) => {\n    const map = storage.get<Record<string, number>>(BOARD_NS, \"storySeq\", {});\n    const current = Number(map[projectId] || 234567);\n    const id = `US${current}`;\n    map[projectId] = current + 1;\n    storage.set(BOARD_NS, \"storySeq\", map);\n    return id;\n  };\n\n  // ---------- render ----------\n  return (\n    <div className=\"h-full w-full flex flex-col bg-gray-50 font-sans text-gray-800\">\n      <div className=\"flex-1 min-h-0 w-full\">\n        <div className=\"relative h-full w-full flex overflow-hidden\">\n          {/* Right content */}\n          <main className=\"flex-1 min-w-0 h-full overflow-auto\">\n            <div className=\"h-full flex flex-col\">\n              {/* Title bar */}\n              <div className=\"bg-white border-b\">\n                {selectedProject && (\n                  <div className=\"mx-auto w-full max-w-7xl flex flex-col sm:flex-row sm:items-center sm:justify-between py-2 px-2 gap-3\">\n                    <div className=\"flex w-full justify-between sm:justify-start sm:gap-2\">\n                      <h1 className=\"text-2xl font-bold text-gray-900\">\n                        {`${selectedProject.name} Project`}\n                      </h1>\n                      <button\n                        onClick={() => handleAddTask(\"to-do\")}\n                        className=\"rounded-md bg-blue-600 px-3 py-1.5 text-sm text-white hover:bg-blue-700\"\n                      >\n                        Create Story\n                      </button>\n                    </div>\n                    <div className=\"flex w-full justify-between sm:justify-end sm:gap-2\">\n                      <Link\n                        to=\"stories\"\n                        className=\"rounded-md border px-2 py-1 text-sm hover:bg-gray-50\"\n                        title=\"View all stories\"\n                      >\n                        US LookUp\n                      </Link>\n                      <button\n                        onClick={() =>\n                          selectedProject && setIsColumnModalOpen(true)\n                        }\n                        disabled={!selectedProject}\n                        className={`rounded-md border px-2 py-1 text-sm ${\n                          selectedProject\n                            ? \"bg-green-500 text-white hover:bg-green-600\"\n                            : \"bg-gray-200 text-gray-400 cursor-not-allowed\"\n                        }`}\n                      >\n                        Add Column\n                      </button>\n                      <button\n                        onClick={() =>\n                          selectedProject &&\n                          confirmDeleteProject(selectedProject)\n                        }\n                        className=\"rounded-md border px-2 py-1 text-sm text-rose-700 hover:bg-rose-50\"\n                        title=\"Delete this project\"\n                      >\n                        Delete Project\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Content */}\n              {isLoading ? (\n                <div className=\"flex-1 flex items-center justify-center text-xl text-gray-600\">\n                  Loading board...\n                </div>\n              ) : !selectedProject ? (\n                <EmptyState\n                  title=\"Create your first project\"\n                  description={\n                    <>\n                      Create a project in the left sidebar. We’ll add default\n                      columns (<em>To Do</em>, <em>In Progress</em>,{\" \"}\n                      <em>Validation</em>, <em>Done</em>).\n                    </>\n                  }\n                  bullets={[\n                    \"Projects live in the left panel.\",\n                    \"Click a project to open its board.\",\n                    \"Use “Add Column” to customize the workflow.\",\n                  ]}\n                />\n              ) : (\n                <div className=\"flex-1 min-h-0 flex flex-col\">\n                  {/* Tabs bar */}\n                  <div className=\"bg-white border-b sticky top-0 z-10\">\n                    <div className=\"mx-auto w-full max-w-7xl flex items-center gap-3 py-2\">\n                      <button\n                        aria-label=\"Scroll left\"\n                        onClick={() => scrollColumnsBy(-320)}\n                        className={`${columns.length > 1 ? \"flex\" : \"hidden\"} h-8 w-8 shrink-0 items-center justify-center rounded-full border bg-white hover:bg-gray-50`}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-4 w-4\"\n                          viewBox=\"0 0 20 20\"\n                          fill=\"currentColor\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M12.293 15.707a1 1 0 010-1.414L8.414 10l3.879-4.293a1 1 0 10-1.586-1.414l-5 5a1 1 0 000 1.414l5 5a1 1 0 001.586-1.414z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </button>\n\n                      <div className=\"relative flex-1 overflow-hidden\">\n                        <div className=\"flex gap-2 overflow-x-auto tabs-scrollbar\">\n                          {columns.map((c) => (\n                            <button\n                              key={`tab-${c.id}`}\n                              onClick={() => scrollToColumn(c.id)}\n                              className=\"px-3 py-1.5 rounded-full text-sm border bg-gray-50 hover:bg-white hover:shadow-sm whitespace-nowrap\"\n                            >\n                              {c.title}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n\n                      <button\n                        aria-label=\"Scroll right\"\n                        onClick={() => scrollColumnsBy(320)}\n                        className={`${columns.length > 1 ? \"flex\" : \"hidden\"} h-8 w-8 shrink-0 items-center justify-center rounded-full border bg-white hover:bg-gray-50`}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-4 w-4\"\n                          viewBox=\"0 0 20 20\"\n                          fill=\"currentColor\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M7.707 4.293a1 1 0 010 1.414L11.586 10l-3.879 4.293a1 1 0 101.586 1.414l5-5a1 1 0 000-1.414l-5-5a1 1 0 00-1.586 0z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Columns rail */}\n                  <div className=\"flex-1 min-h-0\">\n                    <div\n                      ref={columnsRef}\n                      className=\"mx-auto w-full max-w-7xl h-full px-4 py-2 overflow-x-auto overflow-y-visible board-scrollbar\"\n                    >\n                      <div className=\"flex flex-row gap-2 pb-6\">\n                        {columns.map((column) => (\n                          <div\n                            key={`wrap-${column.id}`}\n                            ref={setColumnRef(column.id)}\n                            className=\"min-w-[320px] max-w-[360px]\"\n                          >\n                            <Column\n                              id={column.id}\n                              title={column.title}\n                              tasks={tasks.filter(\n                                (t) =>\n                                  selectedProject &&\n                                  t.project === selectedProject.id\n                              )}\n                              onAddTask={handleAddTask}\n                              onDrop={handleDrop}\n                              onDragOver={handleDragOver}\n                              onDragStart={handleDragStart}\n                              onEditTask={handleEditTask}\n                              onConfirmDeleteTask={confirmDeleteTask}\n                              onConfirmDeleteColumn={confirmDeleteColumn}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </main>\n        </div>\n      </div>\n\n      {/* Modals */}\n      <Modal\n        isOpen={isTaskModalOpen}\n        onClose={() => setIsTaskModalOpen(false)}\n        title={editingTask && editingTask.id ? \"Edit Story\" : \"New Story\"}\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <TaskForm\n          task={\n            editingTask || {\n              id: `temp-${Date.now()}`,\n              title: \"\",\n              description: \"\",\n              assignee: \"\",\n              priority: \"Low\",\n              architecture: \"FE\",\n              project: selectedProject?.id || \"\",\n              status: \"to-do\",\n            }\n          }\n          onSave={handleSaveTask}\n          onCancel={() => setIsTaskModalOpen(false)}\n          // ▼ NEW: feed features for the currently selected project\n          features={\n            selectedProject\n              ? featuresByProject(selectedProject.id).map((f) => ({\n                  id: f.id,\n                  name: f.name,\n                }))\n              : []\n          }\n          // (optional) preselect nothing; or set to a feature id you want as default\n          initialFeatureId={undefined}\n        />\n      </Modal>\n\n      <Modal\n        isOpen={isColumnModalOpen}\n        onClose={() => setIsColumnModalOpen(false)}\n        title=\"Add Column\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <AddColumnModal\n          onSave={handleAddColumn}\n          onCancel={() => setIsColumnModalOpen(false)}\n        />\n      </Modal>\n\n      <Modal\n        isOpen={isDeleteTaskModalOpen}\n        onClose={() => setIsDeleteTaskModalOpen(false)}\n        title=\"Confirm Delete\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <p className=\"text-gray-700\">\n          Are you sure you want to delete this task?\n        </p>\n        <div className=\"flex justify-between space-x-4 mt-6\">\n          <button\n            onClick={() => setIsDeleteTaskModalOpen(false)}\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleDeleteTask}\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n\n      <Modal\n        isOpen={isDeleteColumnModalOpen}\n        onClose={() => setIsDeleteColumnModalOpen(false)}\n        title=\"Confirm Delete\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <p className=\"text-gray-700\">\n          Are you sure you want to delete this column and all its tasks? This\n          action cannot be undone.\n        </p>\n        <div className=\"flex justify-between space-x-4 mt-6\">\n          <button\n            onClick={() => setIsDeleteColumnModalOpen(false)}\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleDeleteColumn}\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n\n      <Modal\n        isOpen={isProjectDeleteModalOpen}\n        onClose={() => setIsProjectDeleteModalOpen(false)}\n        title=\"Confirm Delete Project\"\n        className=\"bg-white rounded-xl shadow-lg p-6\"\n      >\n        <p className=\"text-gray-700\">\n          Are you sure you want to delete the project \"{projectToDelete?.name}\"?\n          This will permanently delete all associated tasks.\n        </p>\n        <div className=\"flex justify-between space-x-4 mt-6\">\n          <button\n            onClick={() => setIsProjectDeleteModalOpen(false)}\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleDeleteProject}\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { FiDownload } from \"react-icons/fi\";\n\ntype StatusId = \"to-do\" | \"in-progress\" | \"validation\" | \"done\";\n\ntype Task = {\n  id: string;\n  project?: string;\n  storyId?: string;\n  title?: string;\n  status?: StatusId | string;\n  assignee?: string;\n  priority?: \"High\" | \"Medium\" | \"Low\" | string;\n  createdAt?: string; // ISO\n  completedAt?: string; // ISO\n};\n\ntype Project = {\n  id: string;\n  name: string;\n  columns?: { id: string; title: string }[];\n};\n\ntype Props = {\n  project: Project | null;\n  items: Task[];\n};\n\nconst STATUS_LABELS: Record<string, string> = {\n  \"to-do\": \"To Do\",\n  \"in-progress\": \"In Progress\",\n  validation: \"Validation\",\n  done: \"Done\",\n};\n\nfunction fmtDate(iso?: string): string {\n  if (!iso) return \"—\";\n  try {\n    return new Date(iso).toISOString().slice(0, 10);\n  } catch {\n    return \"—\";\n  }\n}\n\nfunction csvEscape(val: unknown): string {\n  const s = (val ?? \"\").toString();\n  if (/[\",\\n]/.test(s)) return `\"${s.replace(/\"/g, '\"\"')}\"`;\n  return s;\n}\n\nfunction toCSVRows(items: Task[]) {\n  const headers = [\n    \"Story ID\",\n    \"Title\",\n    \"Status\",\n    \"Assignee\",\n    \"Priority\",\n    \"Created At\",\n    \"Completed At\",\n  ];\n  const rows = items.map((t) => [\n    t.storyId || \"\",\n    t.title || \"\",\n    STATUS_LABELS[t.status ?? \"\"] || t.status || \"\",\n    t.assignee || \"\",\n    t.priority || \"\",\n    fmtDate(t.createdAt),\n    fmtDate(t.completedAt),\n  ]);\n  return { headers, rows };\n}\n\nfunction downloadCSV(filename: string, items: Task[]) {\n  const { headers, rows } = toCSVRows(items);\n  const lines = [\n    headers.map(csvEscape).join(\",\"),\n    ...rows.map((r) => r.map(csvEscape).join(\",\")),\n  ];\n  const blob = new Blob([lines.join(\"\\n\")], { type: \"text/csv;charset=utf-8\" });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  a.click();\n  URL.revokeObjectURL(url);\n}\n\nfunction downloadPDF(filename: string, projectName: string, items: Task[]) {\n  const doc = new jsPDF({ unit: \"pt\", format: \"a4\" });\n  const margin = 40;\n\n  const title = projectName\n    ? `User Stories — Project ${projectName}`\n    : \"User Stories\";\n  const asOf = `As of ${new Date().toLocaleString()}`;\n\n  doc.setFontSize(14);\n  doc.text(title, margin, 40);\n  doc.setFontSize(10);\n  doc.text(asOf, margin, 58);\n\n  const columns = [\n    { header: \"Story ID\", dataKey: \"storyId\" },\n    { header: \"Title\", dataKey: \"title\" },\n    { header: \"Status\", dataKey: \"statusLabel\" },\n    { header: \"Assignee\", dataKey: \"assignee\" },\n    { header: \"Priority\", dataKey: \"priority\" },\n    { header: \"Created\", dataKey: \"createdAt\" },\n    { header: \"Completed\", dataKey: \"completedAt\" },\n  ] as const;\n\n  const rows = items.map((t) => ({\n    storyId: t.storyId || \"\",\n    title: t.title || \"\",\n    statusLabel: STATUS_LABELS[t.status ?? \"\"] || t.status || \"\",\n    assignee: t.assignee || \"\",\n    priority: t.priority || \"\",\n    createdAt: fmtDate(t.createdAt),\n    completedAt: fmtDate(t.completedAt),\n  }));\n\n  autoTable(doc, {\n    startY: 70,\n    head: [columns.map((c) => c.header)],\n    body: rows.map((r) => columns.map((c) => (r as any)[c.dataKey])),\n    styles: { fontSize: 9, cellPadding: 6, overflow: \"linebreak\" },\n    headStyles: { fillColor: [33, 33, 33] },\n    margin: { left: margin, right: margin },\n  });\n\n  doc.save(filename);\n}\n\nconst ExportStoriesBar: React.FC<Props> = ({ project, items }) => {\n  const projectName = project?.name || \"All Projects\";\n\n  const stamped = useMemo(() => {\n    const stamp = new Date().toISOString().slice(0, 10);\n    const slug = projectName.toLowerCase().replace(/[^\\w]+/g, \"-\");\n    return {\n      csv: `${slug}-${stamp}-stories.csv`,\n      pdf: `${slug}-${stamp}-stories.pdf`,\n    };\n  }, [projectName]);\n\n  return (\n    <div className=\"flex items-center gap-2 justify-end \">\n      <button\n        onClick={() => downloadCSV(stamped.csv, items)}\n        className=\"rounded-md border px-2 py-1 text-sm hover:bg-gray-50\"\n        title=\"Exports the currently filtered list to CSV\"\n      >\n        <FiDownload /> Export CSV\n      </button>\n      <button\n        onClick={() => downloadPDF(stamped.pdf, projectName, items)}\n        className=\"px-2 py-1 rounded bg-blue-600 text-white hover:bg-blue-700\"\n        title=\"Exports the currently filtered list to PDF\"\n      >\n        Export PDF\n      </button>\n    </div>\n  );\n};\n\nexport default ExportStoriesBar;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { storage, BOARD_NS } from \"packages/storage\";\nimport ExportStoriesBar from \"./components/ExportStoriesBar\";\n\ntype StatusId = \"to-do\" | \"in-progress\" | \"validation\" | \"done\";\n\ntype Task = {\n  id: string;\n  project?: string;\n  storyId?: string;\n  title?: string;\n  status?: StatusId | string;\n  assignee?: string;\n  priority?: \"High\" | \"Medium\" | \"Low\" | string;\n  createdAt?: string;\n  completedAt?: string;\n  acceptanceCriteria?: string;\n};\n\ntype Project = {\n  id: string;\n  name: string;\n  columns?: { id: string; title: string }[];\n};\n\nconst STATUSES: { id: StatusId; label: string }[] = [\n  { id: \"to-do\", label: \"To Do\" },\n  { id: \"in-progress\", label: \"In Progress\" },\n  { id: \"validation\", label: \"Validation\" },\n  { id: \"done\", label: \"Done\" },\n];\n\nconst STATUS_COLORS: Record<string, string> = {\n  \"to-do\": \"bg-gray-100 text-gray-700\",\n  \"in-progress\": \"bg-blue-100 text-blue-700\",\n  validation: \"bg-amber-100 text-amber-700\",\n  done: \"bg-green-100 text-green-700\",\n};\n\nfunction readBoard<T>(key: string, fallback: T): T {\n  try {\n    const v = storage.get<T>(BOARD_NS, key, fallback);\n    return v ?? fallback;\n  } catch {\n    return fallback;\n  }\n}\n\nexport default function StoriesView() {\n  const [tasks, setTasks] = useState<Task[]>(() =>\n    readBoard<Task[]>(\"tasks\", [])\n  );\n  const [projects, setProjects] = useState<Project[]>(() =>\n    readBoard<Project[]>(\"projects\", [])\n  );\n  const [selectedProjectId, setSelectedProjectId] = useState<string>(() =>\n    readBoard<string>(\"selectedProjectId\", \"\")\n  );\n  const [q, setQ] = useState<string>(\"\");\n  const [status, setStatus] = useState<string>(\"all\");\n\n  // refresh from storage when page mounts\n  useEffect(() => {\n    setTasks(readBoard<Task[]>(\"tasks\", []));\n    setProjects(readBoard<Project[]>(\"projects\", []));\n    setSelectedProjectId(readBoard<string>(\"selectedProjectId\", \"\"));\n  }, []);\n\n  const filtered = useMemo(() => {\n    const needle = (q || \"\").toLowerCase();\n    return tasks\n      .filter((t) => {\n        if (selectedProjectId && t.project !== selectedProjectId) return false;\n        if (status !== \"all\" && t.status !== status) return false;\n        if (!needle) return true;\n        const hay =\n          `${t.storyId || \"\"} ${t.title || \"\"} ${t.assignee || \"\"} ${t.acceptanceCriteria || \"\"}`.toLowerCase();\n        return hay.includes(needle);\n      })\n      .sort((a, b) => (a.storyId || \"\").localeCompare(b.storyId || \"\"));\n  }, [tasks, q, status, selectedProjectId]);\n\n  return (\n    <div className=\"h-full w-full flex flex-col bg-gray-50\">\n      <div className=\"bg-white border-b\">\n        <div className=\"mx-auto w-full max-w-7xl flex items-center justify-between py-4\">\n          <h1 className=\"text-2xl font-semibold text-gray-900\">User Stories</h1>\n          <Link\n            to=\"/board\"\n            className=\"px-3 py-1.5 rounded border bg-white hover:bg-gray-50 text-gray-700\"\n          >\n            Back to Board\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"flex-1 overflow-auto\">\n        <div className=\"mx-auto w-full max-w-7xl p-6 space-y-4\">\n          <ExportStoriesBar\n            project={projects.find((p) => p.id === selectedProjectId) || null}\n            items={filtered}\n          />\n\n          {/* Filters */}\n          <div className=\"flex flex-col md:flex-row gap-3 items-stretch md:items-center\">\n            <input\n              value={q}\n              onChange={(e) => setQ(e.target.value)}\n              placeholder=\"Search by title, user story ID and Name \"\n              className=\"flex-1 rounded border px-3 py-2\"\n            />\n            <select\n              value={status}\n              onChange={(e) => setStatus(e.target.value)}\n              className=\"rounded border px-3 py-2\"\n            >\n              <option value=\"all\">All statuses</option>\n              {STATUSES.map((s) => (\n                <option key={s.id} value={s.id}>\n                  {s.label}\n                </option>\n              ))}\n            </select>\n            <select\n              value={selectedProjectId || \"\"}\n              onChange={(e) => setSelectedProjectId(e.target.value)}\n              className=\"rounded border px-3 py-2\"\n            >\n              <option value=\"\">All projects</option>\n              {projects.map((p) => (\n                <option key={p.id} value={p.id}>\n                  {p.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Table */}\n          <div className=\"overflow-auto rounded border bg-white\">\n            <table className=\"min-w-full text-sm\">\n              <thead className=\"bg-gray-50 text-gray-600\">\n                <tr>\n                  <th className=\"text-left p-3 w-28\">Story ID</th>\n                  <th className=\"text-left p-3\">Title</th>\n                  <th className=\"text-left p-3\">Assignee</th>\n                  <th className=\"text-left p-3 w-40\">Status</th>\n                  <th className=\"text-left p-3\">Priority</th>\n                  <th className=\"text-left p-3 w-44\">Created</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filtered.length === 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"p-6 text-center text-gray-500\">\n                      No stories match.\n                    </td>\n                  </tr>\n                ) : (\n                  filtered.map((t) => (\n                    <tr key={t.id} className=\"border-t\">\n                      <td className=\"p-3 font-mono text-blue-700\">\n                        {t.storyId || \"—\"}\n                      </td>\n                      <td className=\"p-3\">\n                        <div className=\"font-medium text-gray-900\">\n                          {t.title || \"Untitled\"}\n                        </div>\n                      </td>\n                      <td className=\"p-3\">{t.assignee || \"—\"}</td>\n                      <td className=\"p-3\">\n                        {(() => {\n                          const label =\n                            STATUSES.find((s) => s.id === t.status)?.label ||\n                            (t.status as string) ||\n                            \"—\";\n                          const color =\n                            STATUS_COLORS[t.status || \"\"] ||\n                            \"bg-gray-200 text-gray-800\";\n                          return (\n                            <span\n                              className={`inline-flex items-center px-2 py-1 rounded text-xs font-medium ${color}`}\n                            >\n                              {label}\n                            </span>\n                          );\n                        })()}\n                      </td>\n                      <td className=\"p-3\">{t.priority || \"—\"}</td>\n                      <td className=\"p-3\">\n                        {(t.createdAt || \"\").slice(0, 10) || \"—\"}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, useSearchParams, Navigate } from \"react-router-dom\";\n\nimport Sidebar from \"features/board/components/Sidebar\";\nimport BoardView from \"features/board/BoardView\";\nimport FeatureDashboard from \"features/board/features/FeatureDashboard\";\n// import FeatureBoard from \"features/board/features/FeatureBoard\";\n\nimport type { SidebarProps } from \"types/sidebar\";\nimport { storage, BOARD_NS } from \"packages/storage\";\nimport { Project } from \"types/board\";\nimport StoriesView from \"features/board/StoriesView\";\n\n/**\n * This component is the persistent layout for the board area.\n * Left: sidebar. Right: nested routes (BoardView | Features | Feature detail).\n * We read/write the selected project id via query param (?project=) and storage.\n */\n\nconst DEFAULT_COLS = [\n  { id: \"to-do\", title: \"To Do\" },\n  { id: \"in-progress\", title: \"In Progress\" },\n  { id: \"validation\", title: \"Validation\" },\n  { id: \"done\", title: \"Done\" },\n] as const;\nexport default function BoardApp() {\n  const [search] = useSearchParams();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [projects, setProjects] = useState<Project[]>(() => readProjects());\n  const [tasks, setTasks] = useState<any[]>(() => readTasks());\n\n  // allow header hamburger to toggle (if you emit 'app:toggleSidebar')\n  useEffect(() => {\n    const handler = () => setIsSidebarOpen((s) => !s);\n    window.addEventListener(\"app:toggleSidebar\", handler as EventListener);\n    return () =>\n      window.removeEventListener(\"app:toggleSidebar\", handler as EventListener);\n  }, []);\n\n  const projectFromUrl = search.get(\"project\") || \"\";\n\n  // ---- small local helpers to hydrate sidebar props from storage ----\n  // --- reactive storage readers ---\n  function read<T>(key: string, fallback: T): T {\n    try {\n      const v = storage.get<T>(BOARD_NS, key, fallback);\n      return v ?? fallback;\n    } catch {\n      return fallback;\n    }\n  }\n\n  function readProjects(): Project[] {\n    const raw = read<any[]>(\"projects\", []);\n    return raw.map((p) => ({\n      id: p.id,\n      name: p.name,\n      columns:\n        Array.isArray(p.columns) && p.columns.length\n          ? p.columns\n          : [...DEFAULT_COLS],\n    }));\n  }\n\n  function readTasks(): any[] {\n    return read<any[]>(\"tasks\", []);\n  }\n\n  // keep BoardApp in sync with storage & custom updates\n  useEffect(() => {\n    const sync = () => {\n      setProjects(readProjects());\n      setTasks(readTasks());\n    };\n    window.addEventListener(\"storage\", sync);\n    window.addEventListener(\"board:projectsUpdated\", sync as EventListener);\n    return () => {\n      window.removeEventListener(\"storage\", sync);\n      window.removeEventListener(\n        \"board:projectsUpdated\",\n        sync as EventListener\n      );\n    };\n  }, []);\n\n  const selectedProject =\n    projects.find((p) => p.id === projectFromUrl) ??\n    projects.find((p) => p.id === read<string>(\"selectedProjectId\", \"\")) ??\n    null;\n\n  const sidebarProps: SidebarProps = {\n    projects,\n    selectedProject,\n    onSelectProject: (p) => {\n      storage.set(BOARD_NS, \"selectedProjectId\", p.id);\n      // we do not navigate here; Sidebar already navigates with ?project=\n    },\n    isSidebarOpen,\n    onToggleSidebar: () => setIsSidebarOpen((s) => !s),\n    tasks,\n    onAddProject: (name: string) => {\n      const next = [\n        ...projects,\n        { id: `proj_${Date.now()}`, name, columns: [...DEFAULT_COLS] },\n      ];\n      setProjects(next);\n      storage.set(BOARD_NS, \"projects\", next);\n      window.dispatchEvent(new Event(\"board:projectsUpdated\"));\n    },\n\n    onConfirmDeleteProject: (p) => {\n      const next = projects.filter((x) => x.id !== p.id);\n      setProjects(next);\n      storage.set(BOARD_NS, \"projects\", next);\n      // also clear selected if it was this project\n      const cur = read<string>(\"selectedProjectId\", \"\");\n      if (cur === p.id) storage.set(BOARD_NS, \"selectedProjectId\", \"\");\n      window.dispatchEvent(new Event(\"board:projectsUpdated\"));\n    },\n    onOpenDocuments: () => {},\n  };\n\n  return (\n    <div className=\"flex h-full min-h-0 w-full\">\n      {/* mobile backdrop */}\n      <div\n        onClick={() => setIsSidebarOpen(false)}\n        className={`lg:hidden fixed inset-0 z-20 bg-black/40 transition-opacity duration-300 ${\n          isSidebarOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n        }`}\n      />\n\n      {/* sliding sidebar on mobile, static on desktop */}\n      <aside\n        className={`fixed lg:static inset-y-0 left-0 z-30 w-64 bg-gray-900 text-white\n      border-r border-gray-800 overflow-y-auto transform transition-transform duration-300 ease-in-out\n      ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"} lg:translate-x-0 lg:transform-none`}\n      >\n        <div className=\"h-full p-4\">\n          <Sidebar {...sidebarProps} />\n        </div>\n      </aside>\n\n      <main className=\"min-w-0 flex-1\">\n        {/* Nested routes render on the right, sidebar persists */}\n        <Routes>\n          <Route index element={<BoardView />} />\n          <Route path=\"features\" element={<FeatureDashboard />} />\n          {/* <Route path=\"features/:featureId\" element={<FeatureBoard />} /> */}\n          <Route path=\"stories\" element={<StoriesView />} />\n          {/* <Route path=\"story/:storyId\" element={<StoryDetail />} /> */}\n\n          <Route path=\"*\" element={<Navigate to=\"/board\" replace />} />\n        </Routes>\n      </main>\n    </div>\n  );\n}\n"],"names":["_ref","projects","selectedProject","onSelectProject","onAddProject","onToggleSidebar","tasks","onConfirmDeleteProject","newProjectName","setNewProjectName","useState","navigate","useNavigate","isFeatures","useLocation","pathname","startsWith","projectTasks","filter","t","project","id","todoCount","status","length","inProgressCount","doneCount","totalTasks","progressPercentage","Math","round","currentDate","useMemo","Date","toLocaleDateString","weekday","year","month","day","_jsxs","className","children","_jsx","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","concat","pid","map","name","e","stopPropagation","title","onSubmit","preventDefault","trim","some","p","toLowerCase","type","value","onChange","target","placeholder","disabled","style","width","priorityColors","High","Medium","Low","task","onDragStart","onEdit","onDelete","priority","draggable","storyId","architecture","FiTrash2","description","assignee","String","createdAt","dueDate","onAddTask","onDrop","onDragOver","onEditTask","onConfirmDeleteTask","onConfirmDeleteColumn","columnTasks","scrollbarWidth","scrollbarColor","TaskCard","fmtHuman","_unused","TaskForm","_task$title","_task$description","_task$acceptanceCrite","_task$assignee","_ref2","_ref3","_task$createdAt","_task$dueDate","_ref4","_task$featureId","onSave","onCancel","features","initialFeatureId","register","handleSubmit","formState","errors","isSubmitting","useForm","defaultValues","acceptanceCriteria","toISOString","slice","featureId","data","_task$id","_task$project","_task$status","_task$storyId","_data$featureId","_objectSpread","required","f","message","rows","setTitle","DEFAULT_COLS","BoardView","search","useSearchParams","setTasks","setProjects","columns","setColumns","setSelectedProject","isTaskModalOpen","setIsTaskModalOpen","isColumnModalOpen","setIsColumnModalOpen","isDeleteTaskModalOpen","setIsDeleteTaskModalOpen","isDeleteColumnModalOpen","setIsDeleteColumnModalOpen","isProjectDeleteModalOpen","setIsProjectDeleteModalOpen","taskToDeleteId","setTaskToDeleteId","columnToDeleteId","setColumnToDeleteId","projectToDelete","setProjectToDelete","editingTask","setEditingTask","isLoading","setIsLoading","columnsRef","useRef","columnRefs","scrollColumnsBy","delta","current","scrollBy","left","behavior","useEffect","reload","next","storage","get","BOARD_NS","window","addEventListener","removeEventListener","savedProjects","savedTasks","ok","Set","fixed","has","JSON","stringify","set","sync","latestProjects","latestTasks","qid","storedId","pickId","find","remove","handleDragStart","taskId","dataTransfer","setData","handleDragOver","handleDrop","newColumnId","getData","nowISO","updated","_t$completedAt","wasDone","willBeDone","completedAt","moved","toFeature","moveStoryByStoryId","handleAddTask","columnId","now","handleEditTask","confirmDeleteTask","confirmDeleteColumn","nextStoryId","projectId","Number","Link","to","fillRule","clipRule","c","colId","el","parent","offsetLeft","scrollTo","scrollToColumn","ref","column","Column","EmptyState","_Fragment","bullets","Modal","isOpen","onClose","taskData","isNew","dataToSave","_dataToSave$completed","syncTaskToStory","featuresByProject","undefined","AddColumnModal","newTitle","newColumns","replace","updatedProjects","dispatchEvent","Event","handleDeleteTask","doomed","deleteStoryById","handleDeleteColumn","updatedCols","updatedTasks","handleDeleteProject","nextProjects","nextTasks","nextSel","STATUS_LABELS","validation","done","fmtDate","iso","csvEscape","val","s","toString","test","downloadCSV","filename","items","headers","_t$status","toCSVRows","lines","join","r","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","projectName","stamped","stamp","slug","csv","pdf","FiDownload","doc","jsPDF","unit","format","asOf","toLocaleString","setFontSize","text","header","dataKey","_t$status2","statusLabel","autoTable","startY","head","body","styles","fontSize","cellPadding","overflow","headStyles","fillColor","margin","right","save","downloadPDF","STATUSES","label","STATUS_COLORS","readBoard","key","fallback","v","StoriesView","selectedProjectId","setSelectedProjectId","q","setQ","setStatus","filtered","needle","includes","sort","b","localeCompare","ExportStoriesBar","colSpan","_STATUSES$find","color","BoardApp","_projects$find","isSidebarOpen","setIsSidebarOpen","readProjects","readTasks","handler","projectFromUrl","read","Array","isArray","sidebarProps","x","onOpenDocuments","Sidebar","Routes","Route","index","element","path","FeatureDashboard","Navigate"],"sourceRoot":""}