{"version":3,"file":"static/js/103.e055610a.chunk.js","mappings":"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","sources":["components/ui/ChipInput.tsx","components/ui/IconButton.tsx","components/ui/Modal.tsx","stores/docs.store.ts","features/documents/components/UploadCard.tsx","features/documents/components/DocumentsList.tsx","features/documents/components/DocxRenderer.tsx","features/documents/components/PreviewPane.tsx","features/documents/DocumentsView.tsx","app/documents/App.jsx","hooks/useProjectHub.ts","components/ui/EmptyState.tsx","packages/storage/index.ts","components/ui/SecretText.tsx","features/projectHub/context.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\ntype Props = {\n  value: string[];\n  onChange: (next: string[]) => void;\n  placeholder?: string;\n  className?: string;\n  /** If true, trims and dedups automatically */\n  dedupe?: boolean;\n};\n\nconst ChipInput: React.FC<Props> = ({\n  value,\n  onChange,\n  placeholder = \"Add and press Enter\",\n  className = \"\",\n  dedupe = true,\n}) => {\n  const [draft, setDraft] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const commit = (raw: string) => {\n    const v = raw.trim();\n    if (!v) return;\n    const next = dedupe ? Array.from(new Set([...value, v])) : [...value, v];\n    onChange(next);\n    setDraft(\"\");\n  };\n\n  const splitAndCommit = (raw: string) => {\n    const parts = raw\n      .split(/[,;]/g)\n      .map((s) => s.trim())\n      .filter(Boolean);\n    if (!parts.length) return;\n    const base = new Set(value);\n    const next = dedupe\n      ? [...new Set([...value, ...parts])]\n      : [...value, ...parts];\n    if (next.length !== value.length || parts.some((p) => !base.has(p))) {\n      onChange(next);\n    }\n    setDraft(\"\");\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      // allow comma-separated on enter too\n      splitAndCommit(draft);\n    } else if (e.key === \"Backspace\" && !draft && value.length) {\n      // remove last chip\n      onChange(value.slice(0, -1));\n    } else if (e.key === \",\" || e.key === \";\") {\n      e.preventDefault();\n      splitAndCommit(draft);\n    }\n  };\n\n  const removeAt = (idx: number) => {\n    const next = value.filter((_, i) => i !== idx);\n    onChange(next);\n    // keep focus for fast editing\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div\n      className={[\n        \"flex flex-wrap gap-2 rounded border bg-white px-2 py-2\",\n        className,\n      ].join(\" \")}\n      onClick={() => inputRef.current?.focus()}\n    >\n      {value.map((chip, i) => (\n        <span\n          key={`${chip}-${i}`}\n          className=\"inline-flex items-center gap-1 rounded-full bg-gray-100 px-2 py-0.5 text-xs text-gray-800\"\n        >\n          {chip}\n          <button\n            type=\"button\"\n            aria-label={`Remove ${chip}`}\n            className=\"rounded p-0.5 hover:bg-gray-200\"\n            onClick={() => removeAt(i)}\n          >\n            ✕\n          </button>\n        </span>\n      ))}\n\n      <input\n        ref={inputRef}\n        value={draft}\n        onChange={(e) => setDraft(e.target.value)}\n        onKeyDown={onKeyDown}\n        onBlur={() => commit(draft)}\n        placeholder={value.length ? \"\" : placeholder}\n        className=\"min-w-[8ch] flex-1 outline-none text-sm placeholder:text-gray-400 bg-transparent\"\n      />\n    </div>\n  );\n};\n\nexport default ChipInput;\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  type?: \"button\" | \"submit\" | \"reset\";\n  className?: string;\n  title?: string;\n  disabled?: boolean;\n};\n\nconst IconButton: React.FC<Props> = ({\n  children,\n  onClick,\n  type = \"button\",\n  className = \"\",\n  title,\n  disabled,\n}) => (\n  <button\n    type={type}\n    title={title}\n    disabled={disabled}\n    onClick={onClick}\n    className={[\n      \"inline-flex items-center gap-1 rounded border px-3 py-1.5 text-sm\",\n      \"bg-white hover:bg-gray-50 text-gray-700\",\n      \"disabled:opacity-60 disabled:cursor-not-allowed\",\n      className,\n    ].join(\" \")}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import React from \"react\";\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  children: React.ReactNode;\n  className?: string;\n  /** Optional: close when clicking the scrim (default true) */\n  closeOnBackdrop?: boolean;\n};\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  className = \"bg-white rounded-xl shadow-lg p-6\",\n  closeOnBackdrop = true,\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      <div\n        className=\"absolute inset-0 bg-black/50\"\n        onClick={closeOnBackdrop ? onClose : undefined}\n      />\n      <div className=\"absolute left-1/2 top-20 -translate-x-1/2 w-full max-w-lg\">\n        <div\n          className={`relative bg-white rounded-xl shadow-lg max-h-[90vh] md:max-h-[80vh] overflow-y-auto ${className}`}\n          role=\"dialog\"\n          aria-modal\n        >\n          {title && (\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold\">{title}</h3>\n              <button\n                aria-label=\"Close modal\"\n                onClick={onClose}\n                className=\"rounded p-1 hover:bg-gray-100\"\n              >\n                ✕\n              </button>\n            </div>\n          )}\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","// src/stores/docs.store.ts\nimport { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\nimport { DOCS_NS } from \"packages/storage\";\nimport type { DocItem, DocUploadResult } from \"types/documents\";\n\nexport type DocsState = {\n  items: DocItem[];\n  selectedId: string | null;\n\n  pending: File[];\n  error: string;\n\n  // actions\n  setSelected: (id: string | null) => void;\n  clearSelectedIfDeleted: (deletedId: string) => void;\n\n  stageFiles: (files: File[]) => void;\n  clearPending: () => void;\n  setError: (msg: string) => void;\n  clearError: () => void;\n\n  addDocuments: (files: File[], project?: string) => Promise<void>;\n  deleteDocument: (doc: DocItem) => void;\n};\n\n// namespaced storage (stable reference)\nconst namespacedStorage = {\n  getItem: (name: string) => localStorage.getItem(`${DOCS_NS}:${name}`) ?? null,\n  setItem: (name: string, value: string) =>\n    localStorage.setItem(`${DOCS_NS}:${name}`, value),\n  removeItem: (name: string) => localStorage.removeItem(`${DOCS_NS}:${name}`),\n} as const;\n\nconst storage = createJSONStorage(() => namespacedStorage);\n\nconst MAX = 5 * 1024 * 1024;\nconst blobKey = (id: string) => `${DOCS_NS}:blob:${id}`;\nconst textKey = (id: string) => `${DOCS_NS}:txt:${id}`;\n\n// ✅ allow images in addition to pdf/docx/txt\n// Accept PDFs, DOCX, TXT, and common images\nconst allowMimes = [\n  \"application/pdf\",\n  \"text/plain\",\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  \"image/png\",\n  \"image/jpeg\",\n  \"image/gif\",\n  \"image/webp\",\n];\nconst byExtOK = (name: string) =>\n  /\\.(pdf|txt|docx|png|jpe?g|gif|webp)$/i.test(name);\n\nfunction readFileAsResult(file: File): Promise<DocUploadResult> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    const isTxt = file.type === \"text/plain\" || /\\.txt$/i.test(file.name);\n    if (isTxt) {\n      reader.onload = () =>\n        resolve({ kind: \"txt\", text: String(reader.result ?? \"\") });\n      reader.onerror = reject;\n      reader.readAsText(file);\n      return;\n    }\n    // For everything else (PDF, DOCX, IMAGES) we use dataURL preview\n    reader.onload = () =>\n      resolve({ kind: \"data\", dataURL: String(reader.result ?? \"\") });\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nexport const useDocsStore = create<DocsState>()(\n  persist(\n    (set, get) => ({\n      items: [],\n      selectedId: null,\n      pending: [],\n      error: \"\",\n\n      setSelected: (id) =>\n        set((s) => (s.selectedId === id ? s : { selectedId: id })),\n\n      clearSelectedIfDeleted: (deletedId) => {\n        const { selectedId, items } = get();\n        if (selectedId === deletedId) {\n          const next = items.find((d) => d.id !== deletedId)?.id ?? null;\n          set({ selectedId: next });\n        }\n      },\n\n      stageFiles: (files) => {\n        if (!files?.length) return;\n        const cur = get().pending;\n        const key = (f: File) => `${f.name}-${f.size}`;\n        const existing = new Set(cur.map(key));\n        const merged = [...cur];\n        files.forEach((f) => {\n          if (!existing.has(key(f))) merged.push(f);\n        });\n        set({ pending: merged, error: \"\" });\n      },\n      clearPending: () => set({ pending: [] }),\n      setError: (msg) => set({ error: msg }),\n      clearError: () => set({ error: \"\" }),\n\n      addDocuments: async (files, project) => {\n        if (!files?.length) return;\n\n        // validation\n        for (const f of files) {\n          if (f.size > MAX) {\n            set({ error: `\"${f.name}\" is larger than 5 MB.` });\n            return;\n          }\n          if (!(allowMimes.includes(f.type) || byExtOK(f.name))) {\n            set({\n              error: `\"${f.name}\" is not a supported type (PDF, DOCX, TXT, PNG, JPG, GIF, WEBP).`,\n            });\n            return;\n          }\n        }\n\n        try {\n          const results = await Promise.all(files.map(readFileAsResult));\n\n          const toAdd: DocItem[] = results.map((res, idx) => {\n            const f = files[idx];\n            const id = `${Date.now()}-${idx}-${Math.random().toString(36).slice(2, 7)}`;\n            if (res.kind === \"data\") {\n              try {\n                sessionStorage.setItem(blobKey(id), res.dataURL);\n              } catch {\n                // ignore quota for sessionStorage; if it fails we fall back to persisting null below\n              }\n            } else if (res.kind === \"txt\") {\n              try {\n                sessionStorage.setItem(textKey(id), res.text);\n              } catch {\n                // ignore\n              }\n            }\n            return {\n              id: `${Date.now()}-${idx}-${Math.random()\n                .toString(36)\n                .slice(2, 7)}`,\n              name: f.name,\n              type:\n                f.type || (f.name.match(/\\.(\\w+)$/)?.[1] || \"\").toLowerCase(),\n              size: f.size,\n              createdAt: new Date().toISOString(),\n              dataURL: res.kind === \"data\" ? res.dataURL : null,\n              text: res.kind === \"txt\" ? res.text : null,\n\n              project,\n            };\n          });\n\n          const items = [...get().items, ...toAdd];\n          const selectedId = get().selectedId ?? items[0]?.id ?? null;\n\n          set({ items, selectedId, pending: [], error: \"\" });\n        } catch (e) {\n          console.error(e);\n          set({ error: \"Failed to read one or more files.\" });\n        }\n      },\n\n      deleteDocument: (doc) =>\n        set((s) => {\n          // clear preview caches\n          sessionStorage.removeItem(blobKey(doc.id));\n          sessionStorage.removeItem(textKey(doc.id));\n\n          const next = s.items.filter((d) => d.id !== doc.id);\n          const nextSelected =\n            s.selectedId === doc.id ? (next[0]?.id ?? null) : s.selectedId;\n\n          if (next === s.items && nextSelected === s.selectedId) return s;\n          return { items: next, selectedId: nextSelected };\n        }),\n    }),\n    {\n      name: `${DOCS_NS}:store`,\n      version: 1,\n      storage,\n      // ✅ Persist ONLY data, not actions. This avoids rehydrate/set loops.\n      partialize: (s) => ({\n        items: s.items,\n        selectedId: s.selectedId,\n      }),\n    }\n  )\n);\n","// features/documents/components/UploadCard.tsx\nimport React, { useMemo, useState } from \"react\";\nimport { useDocsStore, DocsState } from \"stores/docs.store\";\n\nconst MAX_MB = 5;\n\nconst UploadCard: React.FC = () => {\n  const addDocuments = useDocsStore((s: DocsState) => s.addDocuments);\n  const items = useDocsStore((s: DocsState) => s.items);\n\n  const projects = useMemo(() => {\n    const set = new Set<string>();\n    items.forEach((d) => {\n      const p = (d as any).project?.trim?.() ?? \"\";\n      if (p) set.add(p);\n    });\n    return Array.from(set).sort((a, b) => a.localeCompare(b));\n  }, [items]);\n\n  const [project, setProject] = useState<string>(\"\");\n\n  const onPickProject = (val: string) => {\n    if (val === \"__new__\") {\n      const name = window.prompt(\"New project name\");\n      if (!name) return;\n      setProject(name.trim());\n      return;\n    }\n    setProject(val === \"Unassigned\" ? \"\" : val);\n  };\n\n  const onFiles = async (files: FileList | null) => {\n    if (!files || !files.length) return;\n    addDocuments(Array.from(files), project);\n  };\n\n  return (\n    <div className=\"rounded-lg border border-gray-800 bg-gray-900 p-3\">\n      <div className=\"flex justify-end\">\n        <button\n          onClick={() => {\n            window.dispatchEvent(new Event(\"app:toggleSidebar\"));\n          }}\n          className=\"rounded-lg p-2 transition-colors hover:bg-gray-700 lg:hidden\"\n          aria-label=\"Close sidebar\"\n        >\n          <svg\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M6 18L18 6M6 6l12 12\"\n            />\n          </svg>\n        </button>\n      </div>\n      <h3 className=\"text-sm font-semibold text-gray-100\">Upload document</h3>\n\n      {/* Project select */}\n      <div className=\"mt-2\">\n        <label className=\"block text-xs text-gray-400 mb-1\">Project</label>\n        <select\n          className=\"w-full rounded-md bg-gray-800 border border-gray-700 px-2 py-1.5 text-sm text-gray-100\"\n          value={project || \"Unassigned\"}\n          onChange={(e) => onPickProject(e.target.value)}\n        >\n          <option value=\"Unassigned\">Unassigned</option>\n          {projects.map((p) => (\n            <option key={p} value={p}>\n              {p}\n            </option>\n          ))}\n          <option value=\"__new__\">➕ New project…</option>\n        </select>\n      </div>\n\n      <div className=\"mt-3 grid gap-2\">\n        <label className=\"flex h-24 cursor-pointer items-center justify-center rounded-md border-2 border-dashed border-gray-700 bg-gray-800/50 text-gray-200 hover:border-gray-600\">\n          <input\n            type=\"file\"\n            accept=\".pdf,.docx,.txt,application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/plain,.png,.jpg,.jpeg,.gif,.webp\"\n            className=\"hidden\"\n            multiple\n            onChange={(e) => onFiles(e.target.files)}\n          />\n          <div className=\"text-center\">\n            <div className=\"text-sm\">\n              Drag & drop PDF / DOCX / TXT / Images here\n            </div>{\" \"}\n            <div className=\"text-[11px] text-gray-400\">\n              Max {MAX_MB} MB each\n            </div>\n          </div>\n        </label>\n\n        <button\n          onClick={() =>\n            document\n              .querySelector<HTMLInputElement>('input[type=\"file\"]')\n              ?.click?.()\n          }\n          className=\"inline-flex justify-center rounded-md bg-gray-800 px-3 py-2 text-sm text-gray-100 hover:bg-gray-700\"\n        >\n          Browse files\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadCard;\n","// features/documents/components/DocumentsList.tsx\nimport React, { useMemo, useState } from \"react\";\nimport type { DocItem } from \"types/documents\";\n\nconst iconFor = (doc: DocItem) => {\n  if (/pdf/i.test(doc.type) || /\\.pdf$/i.test(doc.name)) return \"📄\";\n  if (/docx/i.test(doc.type) || /\\.docx$/i.test(doc.name)) return \"📝\";\n  return \"📃\";\n};\n\ntype Props = {\n  documents: DocItem[];\n  selectedId: string | null;\n  onSelect: (id: string) => void;\n  onConfirmDelete: (doc: DocItem) => void;\n\n  /** New: all distinct project names (derived in parent). */\n  projects: string[];\n  /** New: rename a project (parent updates all docs with oldName→newName). */\n  onRenameProject: (oldName: string, newName: string) => void;\n  /** New: move a single doc to a different (or new) project. */\n  onMoveDoc: (docId: string, project: string) => void;\n};\n\nfunction useGroups(docs: DocItem[]) {\n  return useMemo(() => {\n    const map = new Map<string, DocItem[]>();\n    for (const d of docs) {\n      const key =\n        (typeof (d as any).project === \"string\" && (d as any).project.trim()) ||\n        \"Unassigned\";\n      if (!map.has(key)) map.set(key, []);\n      map.get(key)!.push(d);\n    }\n    return Array.from(map.entries()).sort(([a], [b]) => {\n      if (a === \"Unassigned\") return 1;\n      if (b === \"Unassigned\") return -1;\n      return a.localeCompare(b);\n    });\n  }, [docs]);\n}\n\nconst Caret: React.FC<{ open: boolean }> = ({ open }) => (\n  <svg\n    viewBox=\"0 0 20 20\"\n    className={`h-4 w-4 transition-transform ${open ? \"rotate-90\" : \"\"}`}\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst DocumentsList: React.FC<Props> = ({\n  documents,\n  selectedId,\n  onSelect,\n  onConfirmDelete,\n  projects,\n  onRenameProject,\n  onMoveDoc,\n}) => {\n  const groups = useGroups(documents);\n  const [open, setOpen] = useState<Record<string, boolean>>(() => {\n    const init: Record<string, boolean> = {};\n    groups.forEach(([k]) => (init[k] = true));\n    return init;\n  });\n\n  if (!documents.length) {\n    return (\n      <div>\n        <h3 className=\"text-sm font-semibold text-gray-100 mb-2\">Files</h3>\n        <p className=\"text-gray-400 text-sm\">No files yet.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-sm font-semibold text-gray-100 mb-2\">Projects</h3>\n      <div className=\"space-y-2 overflow-y-auto max-h-[50vh] pr-1\">\n        {groups.map(([project, docs]) => {\n          const isOpen = open[project] ?? true;\n          const canRename = project !== \"Unassigned\";\n          return (\n            <div\n              key={project}\n              className=\"rounded-md border border-gray-800/60 bg-gray-900/50\"\n            >\n              {/* Project header */}\n              <div className=\"flex items-center justify-between px-2 py-2 rounded-t-md\">\n                <button\n                  className=\"flex items-center gap-2 text-left text-gray-100 truncate hover:opacity-90\"\n                  onClick={() => setOpen((s) => ({ ...s, [project]: !isOpen }))}\n                  title={project}\n                >\n                  <Caret open={isOpen} />\n                  <span className=\"truncate\">{project}</span>\n                </button>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-xs text-gray-400\">{docs.length}</span>\n                  {canRename && (\n                    <button\n                      className=\"rounded px-1.5 py-0.5 text-xs bg-gray-800 hover:bg-gray-700\"\n                      title=\"Rename project\"\n                      onClick={() => {\n                        const next = window.prompt(\"Rename project\", project);\n                        if (!next) return;\n                        const trimmed = next.trim();\n                        if (!trimmed || trimmed === project) return;\n                        onRenameProject(project, trimmed);\n                      }}\n                    >\n                      Rename\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {/* Doc rows */}\n              {isOpen && (\n                <ul className=\"px-1 pb-1 space-y-1\">\n                  {docs.map((d) => (\n                    <li\n                      key={d.id}\n                      className={`flex items-center justify-between px-2 py-1.5 rounded-md cursor-pointer text-sm ${\n                        selectedId === d.id\n                          ? \"bg-blue-600 text-white\"\n                          : \"hover:bg-gray-800 text-gray-100\"\n                      }`}\n                    >\n                      <span\n                        onClick={() => onSelect(d.id)}\n                        className=\"flex-1 flex items-center gap-2 truncate pr-2\"\n                        title={d.name}\n                      >\n                        <span className=\"shrink-0\">{iconFor(d)}</span>\n                        <span className=\"truncate\">{d.name}</span>\n                      </span>\n\n                      {/* Move & Delete */}\n                      <div className=\"flex items-center gap-1\">\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            onConfirmDelete(d);\n                          }}\n                          className={`p-1 rounded ${\n                            selectedId === d.id\n                              ? \"hover:bg-blue-500/30\"\n                              : \"hover:bg-gray-700\"\n                          }`}\n                          title=\"Delete\"\n                          aria-label=\"Delete\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-4 w-4\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                          >\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth=\"2\"\n                              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                            />\n                          </svg>\n                        </button>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentsList;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport mammoth from \"mammoth\";\n\nfunction dataURLToArrayBuffer(dataURL: string): ArrayBuffer {\n  const base64 = dataURL.split(\",\")[1] || dataURL;\n  const binary = atob(base64);\n  const len = binary.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) bytes[i] = binary.charCodeAt(i);\n  return bytes.buffer;\n}\n\ntype Props = {\n  dataURL: string;\n  className?: string;\n};\n\nconst DocxRenderer: React.FC<Props> = ({\n  dataURL,\n  className = \"h-[70vh] overflow-auto rounded border bg-white p-4\",\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      setError(\"\");\n      if (!ref.current || !dataURL) return;\n      ref.current.innerHTML = \"Loading…\";\n      try {\n        const arrayBuffer = dataURLToArrayBuffer(dataURL);\n        const { value: html } = await (mammoth as any).convertToHtml(\n          { arrayBuffer },\n          {\n            includeDefaultStyleMap: true,\n            styleMap: [\n              \"p[style-name='Heading 1'] => h1:fresh\",\n              \"p[style-name='Heading 2'] => h2:fresh\",\n            ],\n          }\n        );\n        ref.current.innerHTML =\n          html || '<div style=\"color:#6b7280\">Empty document</div>';\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        setError(\"Failed to render DOCX.\");\n        ref.current.innerHTML = \"\";\n      }\n    })();\n  }, [dataURL]);\n\n  return (\n    <div className={className}>\n      {error && <div className=\"mb-2 text-sm text-red-600\">{error}</div>}\n      <div ref={ref} className=\"prose max-w-none p-4\"></div>\n    </div>\n  );\n};\n\nexport default DocxRenderer;\n","import React from \"react\";\nimport DocxRenderer from \"./DocxRenderer\";\nimport { EmptyState } from \"packages/ui\";\nimport type { DocItem } from \"types/documents\";\nimport { DOCS_NS } from \"packages/storage\"; // at top if not already\n\nconst DocumentEmptyState: React.FC = () => (\n  <EmptyState\n    title=\"Add your first document\"\n    description={\n      <>\n        Use the <span className=\"font-medium\">“Upload Document”</span> card in\n        the left sidebar menu to add files. We’ll store them locally and show a\n        preview here.\n      </>\n    }\n    bullets={[\n      <>\n        Supported types: PDF, DOCX, TXT, PNG, JPG, GIF, WEBP (max 5 MB each).\n      </>,\n      \"Your documents will appear in the list on the left.\",\n      \"Click a document to open its preview on this page.\",\n    ]}\n  />\n);\n\ntype Props = { doc: DocItem | null };\n\nconst PreviewPane: React.FC<Props> = ({ doc }) => {\n  if (!doc) return <DocumentEmptyState />;\n\n  const isPDF = /pdf/i.test(doc.type) || /\\.pdf$/i.test(doc.name);\n  const isTXT = /text\\/plain/i.test(doc.type) || /\\.txt$/i.test(doc.name);\n  const isDOCX = /docx/i.test(doc.type) || /\\.docx$/i.test(doc.name);\n  const isImage =\n    /image\\/(png|jpe?g|gif|webp)/i.test(doc.type) ||\n    /\\.(png|jpe?g|gif|webp)$/i.test(doc.name);\n\n  // ...\n\n  const cachedDataURL =\n    doc.dataURL ?? sessionStorage.getItem(`${DOCS_NS}:blob:${doc.id}`) ?? null;\n  const cachedText =\n    doc.text ?? sessionStorage.getItem(`${DOCS_NS}:txt:${doc.id}`) ?? null;\n\n  return (\n    <div className=\"rounded-lg border bg-white p-4\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h2 className=\"text-lg font-semibold truncate pr-4\">{doc.name}</h2>\n        <div className=\"text-xs text-gray-500\">\n          {(doc.size / 1024 / 1024).toFixed(2)} MB\n        </div>\n      </div>\n      {isPDF && doc.dataURL && (\n        <iframe\n          title={doc.name}\n          src={cachedDataURL}\n          className=\"w-full h-[70vh] rounded border\"\n        />\n      )}\n      {isTXT && (\n        <pre className=\"w-full h-[70vh] overflow-auto bg-gray-50 p-4 rounded text-sm whitespace-pre-wrap\">\n          {cachedText ?? \"(empty file)\"}\n        </pre>\n      )}\n      {isDOCX && cachedDataURL && (\n        <DocxRenderer\n          dataURL={cachedDataURL}\n          className=\"h-[70vh] overflow-auto rounded border bg-white\"\n        />\n      )}\n      {/* Image preview */}\n      {isImage && cachedDataURL && (\n        <img\n          src={cachedDataURL}\n          alt={doc.name}\n          className=\"max-h-[70vh] w-auto mx-auto rounded shadow-md object-contain\"\n        />\n      )}\n\n      {(isDOCX || isImage) && !doc.dataURL && (\n        <div className=\"p-6 text-center text-gray-600\">\n          Preview not available.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PreviewPane;\n","// features/documents/DocumentsView.tsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useShallow } from \"zustand/react/shallow\";\nimport { useDocsStore, DocsState } from \"stores/docs.store\";\nimport UploadCard from \"./components/UploadCard\";\nimport DocumentsList from \"./components/DocumentsList\";\nimport PreviewPane from \"./components/PreviewPane\";\nimport { Modal } from \"packages/ui\";\nimport type { DocItem } from \"types/documents\";\nimport { debounce } from \"lodash\";\n\nconst DocumentsView: React.FC = () => {\n  const { documents, selectedId } = useDocsStore(\n    useShallow((s: DocsState) => ({\n      documents: s.items,\n      selectedId: s.selectedId,\n    }))\n  );\n  const setSelected = useDocsStore((s: DocsState) => s.setSelected);\n  const deleteDoc = useDocsStore((s: DocsState) => s.deleteDocument);\n\n  // ⬇️ NEW: replace whole list (rename/move bulk ops)\n  const setItems = useDocsStore((s: DocsState) => (s as any).setItems);\n\n  const selectedDoc = useMemo<DocItem | null>(\n    () => documents.find((d) => d.id === selectedId) ?? null,\n    [documents, selectedId]\n  );\n\n  // Distinct project names (excluding empty/unassigned)\n  const projects = useMemo(() => {\n    const set = new Set<string>();\n    documents.forEach((d) => {\n      const p = (d as any).project?.trim?.() ?? \"\";\n      if (p) set.add(p);\n    });\n    const arr = Array.from(set).sort((a, b) => a.localeCompare(b));\n    if (!arr.includes(\"Unassigned\")) arr.unshift(\"Unassigned\");\n    return arr;\n  }, [documents]);\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDeleteDocOpen, setIsDeleteDocOpen] = useState(false);\n  const [docToDelete, setDocToDelete] = useState<DocItem | null>(null);\n\n  useEffect(() => {\n    const debouncedHandler = debounce(() => {\n      setIsSidebarOpen((prev) => !prev);\n    }, 250);\n    window.addEventListener(\"app:toggleSidebar\", debouncedHandler as any);\n    return () => {\n      debouncedHandler.cancel();\n      window.removeEventListener(\"app:toggleSidebar\", debouncedHandler as any);\n    };\n  }, []);\n\n  const confirmDeleteDocument = (doc: DocItem) => {\n    setDocToDelete(doc);\n    setIsDeleteDocOpen(true);\n  };\n\n  const handleDeleteDocument = () => {\n    if (!docToDelete) return;\n    deleteDoc(docToDelete);\n    if (selectedId === docToDelete.id) setSelected(null);\n    setIsDeleteDocOpen(false);\n    setDocToDelete(null);\n  };\n\n  // ⬇️ NEW: rename project (bulk update)\n  const renameProject = (oldName: string, newName: string) => {\n    if (!setItems) {\n      console.warn(\"docs.store: add setItems([...]) action to enable rename.\");\n      return;\n    }\n    const next = documents.map((d) => {\n      const p = (d as any).project?.trim?.() ?? \"\";\n      if (p === oldName) {\n        return { ...d, project: newName } as DocItem & { project?: string };\n      }\n      return d;\n    });\n    setItems(next as any);\n  };\n\n  // ⬇️ NEW: move doc to a project (can be empty string for Unassigned)\n  const moveDoc = (docId: string, project: string) => {\n    if (!setItems) {\n      console.warn(\"docs.store: add setItems([...]) action to enable move.\");\n      return;\n    }\n    const next = documents.map((d) =>\n      d.id === docId ? ({ ...d, project } as any) : d\n    );\n    setItems(next as any);\n  };\n\n  return (\n    <div className=\"h-full w-full flex flex-col bg-gray-50\">\n      <div className=\"flex-1 min-h-0 w-full\">\n        <div className=\"relative h-full w-full flex overflow-hidden\">\n          {/* mobile backdrop */}\n          <div\n            onClick={() => setIsSidebarOpen(false)}\n            className={`lg:hidden fixed inset-0 z-20 bg-black/40 transition-opacity duration-300 ${\n              isSidebarOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n            }`}\n          />\n\n          {/* Sidebar */}\n          <aside\n            aria-label=\"Documents sidebar\"\n            className={`\n              fixed lg:static inset-y-0 left-0 z-30 w-72 bg-gray-900 text-white\n              border-r border-gray-800 overflow-y-auto shrink-0\n              transform transition-transform duration-300 ease-in-out\n              ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n              lg:translate-x-0 lg:transform-none\n            `}\n          >\n            <div className=\"h-full p-4 space-y-6\">\n              {/* Upload now supports project selection; see patch #3 */}\n              <UploadCard />\n              <DocumentsList\n                documents={documents}\n                selectedId={selectedId}\n                onSelect={(id) => {\n                  setSelected(id);\n                  if (window.innerWidth < 1024) setIsSidebarOpen(false);\n                }}\n                onConfirmDelete={confirmDeleteDocument}\n                projects={projects}\n                onRenameProject={renameProject}\n                onMoveDoc={moveDoc}\n              />\n            </div>\n          </aside>\n\n          {/* Main */}\n          <main className=\"flex-1 min-w-0 h-full overflow-auto\">\n            <div className=\"h-full flex flex-col\">\n              <div className=\"bg-white border-b\">\n                <div className=\"mx-auto w-full max-w-7xl flex items-center justify-between py-4 px-4\">\n                  <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-900\">\n                    Documents\n                  </h1>\n                  {selectedDoc && (\n                    <div className=\"hidden sm:block text-sm text-gray-500\">\n                      {(selectedDoc as any).project\n                        ? `Project: ${(selectedDoc as any).project}`\n                        : \"Unassigned\"}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"flex-1 overflow-auto\">\n                <PreviewPane doc={selectedDoc} />\n              </div>\n            </div>\n\n            {/* Delete modal */}\n            <Modal\n              isOpen={isDeleteDocOpen}\n              onClose={() => {\n                setIsDeleteDocOpen(false);\n                setDocToDelete(null);\n              }}\n              title=\"Delete document?\"\n            >\n              <p className=\"text-gray-700\">\n                {`Are you sure you want to delete “${\n                  docToDelete?.name || \"this file\"\n                }”? This action cannot be undone.`}\n              </p>\n              <div className=\"flex justify-between space-x-3 mt-6\">\n                <button\n                  onClick={() => {\n                    setIsDeleteDocOpen(false);\n                    setDocToDelete(null);\n                  }}\n                  className=\"px-4 py-2 rounded-lg bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleDeleteDocument}\n                  className=\"px-4 py-2 rounded-lg bg-red-600 text-white hover:bg-red-700\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Modal>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentsView;\n","import React from 'react';\nimport DocumentsView from '../../features/documents/DocumentsView';\n\nexport default function DocumentsApp() {\n    return <DocumentsView />;\n}\n","import { useProjectHubContext } from \"../features/projectHub/context\";\nimport type { ProjectHubContextValue } from \"../types/project-hub\";\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n","import React from \"react\";\n\ntype EmptyStateProps = {\n  title: string;\n  description?: React.ReactNode;\n  bullets?: React.ReactNode[];\n  action?: React.ReactNode; // e.g. a CTA button\n  className?: string;\n};\n\nconst EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  bullets,\n  action,\n  className = \"rounded-xl border bg-white p-8\",\n}) => {\n  return (\n    <div className={className}>\n      <h2 className=\"text-2xl font-semibold text-gray-900\">{title}</h2>\n      {description && (\n        <div className=\"mt-2 text-gray-600 text-sm\">{description}</div>\n      )}\n      {bullets?.length ? (\n        <ul className=\"mt-3 list-disc pl-5 space-y-1 text-sm text-gray-700\">\n          {bullets.map((b, i) => (\n            <li key={i}>{b}</li>\n          ))}\n        </ul>\n      ) : null}\n      {action && <div className=\"mt-4\">{action}</div>}\n    </div>\n  );\n};\n\nexport default EmptyState;\n","// Strongly-typed localStorage helpers with namespacing.\n// No behavior changes vs. the JS version.\n\nexport const BOARD_NS = \"board\" as const;\nexport const HUB_NS = \"hub\" as const;\nexport const DOCS_NS = \"docs\" as const;\nexport const RN_NS = \"releaseNotes\" as const;\nexport const IDEAS_NS = \"ideas\" as const;\n\n// packages/storage/index.ts  (append near other NS constants)\n\nexport type StorageNamespace =\n  | typeof BOARD_NS\n  | typeof HUB_NS\n  | typeof DOCS_NS\n  | typeof RN_NS\n  | typeof IDEAS_NS;\n\nconst k = (ns: StorageNamespace, key: string) => `${ns}:${key}`;\n\n// Define overloads outside the object\nfunction get<T>(ns: StorageNamespace, key: string): T | null;\nfunction get<T>(ns: StorageNamespace, key: string, fallback: T): T;\nfunction get<T>(ns: StorageNamespace, key: string, fallback?: T): T | null {\n  try {\n    const raw = localStorage.getItem(k(ns, key));\n    if (raw == null) return (fallback ?? null) as T | null;\n    return JSON.parse(raw) as T;\n  } catch {\n    return (fallback ?? null) as T | null;\n  }\n}\n\nexport const storage = {\n  get, // Reference the standalone get function\n  set<T>(ns: StorageNamespace, key: string, value: T): void {\n    localStorage.setItem(k(ns, key), JSON.stringify(value));\n  },\n  remove(ns: StorageNamespace, key: string): void {\n    localStorage.removeItem(k(ns, key));\n  },\n  clear(ns: StorageNamespace): void {\n    const prefix = `${ns}:`;\n    for (let i = localStorage.length - 1; i >= 0; i--) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(prefix)) localStorage.removeItem(key);\n    }\n  },\n} as const;\n","import React, { useState } from \"react\";\n\ntype Props = {\n  value: string;\n  className?: string;\n};\n\nconst SecretText: React.FC<Props> = ({ value, className }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className={[\"inline-flex items-center gap-2\", className].join(\" \")}>\n      <code className=\"rounded bg-gray-100 px-2 py-1\">\n        {show ? value : \"••••••••\"}\n      </code>\n      <button\n        type=\"button\"\n        onClick={() => setShow((s) => !s)}\n        className=\"text-xs rounded border px-2 py-1 hover:bg-gray-50\"\n      >\n        {show ? \"Hide\" : \"Show\"}\n      </button>\n    </div>\n  );\n};\n\nexport default SecretText;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { storage, HUB_NS } from \"../../packages/storage\";\nimport type {\n  HubProject,\n  ProjectHubContextValue,\n} from \"../../types/project-hub\";\n\nconst LIST_KEY = \"projects\"; // NOT \"hub:projects\" (ns already applied)\nconst SELECTED_KEY = \"selectedProjectId\";\n\nfunction loadProjects(): HubProject[] {\n  return storage.get<HubProject[]>(HUB_NS, LIST_KEY, []);\n}\nfunction persistProjects(list: HubProject[]) {\n  storage.set(HUB_NS, LIST_KEY, list);\n}\n\nexport const ProjectHubContext = createContext<\n  ProjectHubContextValue | undefined\n>(undefined);\nexport const useProjectHubContext = () => useContext(ProjectHubContext);\n\nexport function ProjectHubProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [projects, setProjects] = useState<HubProject[]>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  const refresh = () => setProjects(loadProjects());\n\n  useEffect(() => {\n    refresh();\n    setSelectedId(storage.get<string | null>(HUB_NS, SELECTED_KEY, null));\n  }, []);\n\n  useEffect(() => {\n    if (selectedId) storage.set(HUB_NS, SELECTED_KEY, selectedId);\n    else storage.remove(HUB_NS, SELECTED_KEY);\n  }, [selectedId]);\n\n  const selected = useMemo<HubProject | null>(\n    () => projects.find((p) => p.id === selectedId) || null,\n    [projects, selectedId]\n  );\n\n  const selectProject = (id: string | null) => setSelectedId(id);\n\n  const addProject = (name: string): HubProject | null => {\n    const n = (name || \"\").trim();\n    if (!n) return null;\n\n    // de-dup by case-insensitive name\n    if (projects.some((p) => p.name.toLowerCase() === n.toLowerCase()))\n      return null;\n\n    const id = `${n.toLowerCase().replace(/\\s+/g, \"-\")}-${Date.now()}`;\n    const proj: HubProject = { id, name: n, sections: {} };\n    const next = [...projects, proj];\n\n    setProjects(next);\n    persistProjects(next);\n    setSelectedId(id);\n    return proj;\n  };\n\n  // Hub-only delete (does NOT touch Board data)\n  const deleteProject = (id: string) => {\n    const next = projects.filter((p) => p.id !== id);\n    setProjects(next);\n    persistProjects(next);\n    if (selectedId === id) setSelectedId(null);\n  };\n\n  const updateSection = (sectionKey: string, data: unknown) => {\n    if (!selectedId) return;\n    const next = projects.map((p) =>\n      p.id !== selectedId\n        ? p\n        : { ...p, sections: { ...(p.sections || {}), [sectionKey]: data } }\n    );\n    setProjects(next);\n    persistProjects(next);\n  };\n\n  const value: ProjectHubContextValue = {\n    projects,\n    selected,\n    selectedId,\n    setSelectedId,\n    selectProject,\n    addProject,\n    deleteProject,\n    updateSection,\n    refresh,\n  };\n\n  return (\n    <ProjectHubContext.Provider value={value}>\n      {children}\n    </ProjectHubContext.Provider>\n  );\n}\n\nexport default function useProjectHub(): ProjectHubContextValue {\n  const ctx = useProjectHubContext();\n  if (!ctx)\n    throw new Error(\"useProjectHub must be used within ProjectHubProvider\");\n  return ctx;\n}\n"],"names":["_ref","value","onChange","placeholder","className","dedupe","draft","setDraft","useState","inputRef","useRef","splitAndCommit","raw","parts","split","map","s","trim","filter","Boolean","length","base","Set","next","some","p","has","_jsxs","join","onClick","_inputRef$current2","current","focus","children","chip","i","_jsx","type","concat","idx","_inputRef$current","_","removeAt","ref","e","target","onKeyDown","key","preventDefault","slice","onBlur","v","Array","from","commit","title","disabled","isOpen","onClose","closeOnBackdrop","undefined","role","namespacedStorage","getItem","name","_localStorage$getItem","localStorage","DOCS_NS","setItem","removeItem","storage","createJSONStorage","blobKey","id","textKey","allowMimes","byExtOK","test","readFileAsResult","file","Promise","resolve","reject","reader","FileReader","onload","_reader$result","kind","text","String","result","onerror","readAsText","_reader$result2","dataURL","readAsDataURL","useDocsStore","create","persist","set","get","items","selectedId","pending","error","setSelected","clearSelectedIfDeleted","deletedId","_items$find$id","_items$find","find","d","stageFiles","files","cur","f","size","existing","merged","forEach","push","clearPending","setError","msg","clearError","addDocuments","async","project","includes","_get$selectedId","_items$","toAdd","all","res","_f$name$match","Date","now","Math","random","toString","sessionStorage","_unused","_unused2","match","toLowerCase","createdAt","toISOString","console","deleteDocument","doc","_next$0$id","_next$","nextSelected","version","partialize","UploadCard","projects","useMemo","_project$trim","_project","_project$trim2","call","add","sort","a","b","localeCompare","setProject","window","dispatchEvent","Event","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","val","prompt","onPickProject","accept","multiple","onFiles","_document$querySelect","_document$querySelect2","document","querySelector","click","Caret","_ref3","open","fillRule","clipRule","_ref4","documents","onSelect","onConfirmDelete","onRenameProject","onMoveDoc","groups","docs","Map","entries","_ref2","setOpen","init","_ref5","k","_ref6","_open$project","canRename","_objectSpread","trimmed","stopPropagation","useEffect","innerHTML","arrayBuffer","base64","binary","atob","len","bytes","Uint8Array","charCodeAt","buffer","dataURLToArrayBuffer","html","mammoth","includeDefaultStyleMap","styleMap","DocumentEmptyState","EmptyState","description","_Fragment","bullets","_doc$dataURL","_doc$text","isPDF","isTXT","isDOCX","isImage","cachedDataURL","cachedText","toFixed","src","DocxRenderer","alt","DocumentsView","useShallow","deleteDoc","setItems","selectedDoc","_documents$find","arr","unshift","isSidebarOpen","setIsSidebarOpen","isDeleteDocOpen","setIsDeleteDocOpen","docToDelete","setDocToDelete","debouncedHandler","debounce","prev","addEventListener","cancel","removeEventListener","DocumentsList","innerWidth","renameProject","oldName","newName","warn","_project$trim3","_project2","_project2$trim","moveDoc","docId","PreviewPane","Modal","handleDeleteDocument","DocumentsApp","useProjectHub","ctx","useProjectHubContext","Error","action","BOARD_NS","HUB_NS","RN_NS","IDEAS_NS","ns","fallback","JSON","parse","stringify","remove","clear","prefix","startsWith","show","setShow","LIST_KEY","SELECTED_KEY","persistProjects","list","ProjectHubContext","createContext","useContext","ProjectHubProvider","setProjects","setSelectedId","refresh","selected","selectProject","addProject","n","replace","proj","sections","deleteProject","updateSection","sectionKey","data","Provider"],"sourceRoot":""}